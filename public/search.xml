<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>nginx 的安装及配置</title>
      <link href="/2020/10/27/after-end-nginx/"/>
      <url>/2020/10/27/after-end-nginx/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx-的安装"><a href="#Nginx-的安装" class="headerlink" title="Nginx 的安装"></a>Nginx 的安装</h1><h2 id="下载安装包-地址"><a href="#下载安装包-地址" class="headerlink" title="下载安装包 地址"></a>下载安装包 <a href="http://nginx.org/en/download.html" target="_blank" rel="noopener">地址</a></h2><p>建议下载稳定版本（Stable version），以nginx-1.18.0为例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">linux环境：<span class="string">"nginx-1.18.0"</span></span><br><span class="line">windows环境：<span class="string">"nginx/Windows-1.18.0 "</span></span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>随便放在一个位置，我一般前端测试的时候放在桌面，解压文件夹。</p><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p>一般放在 /usr/local 下面。</p><h4 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line">rz上传文件，选择下载的压缩包</span><br><span class="line">tar -zxvf nginx-1.18.0.tar.gz解压压缩包</span><br><span class="line"><span class="built_in">cd</span> nginx-1.18.0进入nginx文件夹</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/nginx-1.18.0明确接下来文件的安装位置，也可直接： <span class="string">"./configure"</span>  此命令执行完会生成<span class="string">"Makefile"</span>文件</span><br><span class="line">make编译</span><br><span class="line">make install会出现<span class="string">"sbin"</span>文件夹</span><br></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><h3 id="Widows"><a href="#Widows" class="headerlink" title="Widows"></a>Widows</h3><p>可以通过命令启动，也可以通过双击nginx.exe启动。</p><h3 id="Linux-1"><a href="#Linux-1" class="headerlink" title="Linux"></a>Linux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> sbin文件夹下启动命令</span><br><span class="line">./nginx</span><br></pre></td></tr></table></figure><p><strong><em>如果有类似错误信息：</em></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nginx:  open() <span class="string">"/usr/local/nginx/logs/error.log"</span> failed (2: No such file or directory)</span><br><span class="line">open() <span class="string">"/usr/local/nginx/logs/access.log"</span> failed (2: No such file or directory)</span><br></pre></td></tr></table></figure><p>此提示表示缺少<strong>logs</strong>文件夹或者缺少<strong>error.log</strong>和<strong>access.log</strong>文件。</p><p><strong>解决方案：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir logs创建logs文件夹</span><br><span class="line">touch error.log创建error.log文件</span><br><span class="line">touch access.log创建access.log文件</span><br></pre></td></tr></table></figure><p>再次进入 <strong>sbin</strong> 文件夹，输入 <strong>./nginx</strong> 后就启动成功了。</p><h2 id="查看nginx是否启动成功"><a href="#查看nginx是否启动成功" class="headerlink" title="查看nginx是否启动成功"></a>查看nginx是否启动成功</h2><h3 id="Windows-1"><a href="#Windows-1" class="headerlink" title="Windows"></a>Windows</h3><p>直接再网页输入：<strong>127.0.0.1</strong>，注意此时是默认端口号：80，如果你的端口号发生变化，请输入：<strong>127.0.0.1:port</strong><br>页面有如下提示，则表示安装并启动成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Welcome to nginx!</span><br><span class="line">If you see this page, the nginx web server is successfully installed and working. Further configuration is required.</span><br><span class="line"></span><br><span class="line">For online documentation and support please refer to nginx.org.</span><br><span class="line">Commercial support is available at nginx.com.</span><br><span class="line"></span><br><span class="line">Thank you <span class="keyword">for</span> using nginx.</span><br></pre></td></tr></table></figure><h3 id="Linux-2"><a href="#Linux-2" class="headerlink" title="Linux"></a>Linux</h3><h3 id="查看进程"><a href="#查看进程" class="headerlink" title="查看进程"></a>查看进程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef|grep nginx</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root      8268     1  0 Oct22 ?        00:00:00 nginx: master process ./nginx</span><br><span class="line">nobody    8269  8268  0 Oct22 ?        00:00:00 nginx: worker process</span><br><span class="line">root     21953 21923  0 10:00 pts/0    00:00:00 grep --color=auto nginx</span><br></pre></td></tr></table></figure><p>有<strong>master</strong>，则表示启动成功。</p><h3 id="查看页面"><a href="#查看页面" class="headerlink" title="查看页面"></a>查看页面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl 127.0.0.1 默认端口80</span><br><span class="line">或</span><br><span class="line">curl 127.0.0.1:port 修改端口后</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Welcome to nginx!<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    body &#123;</span><br><span class="line">        width: 35em;</span><br><span class="line">        margin: 0 auto;</span><br><span class="line">        font-family: Tahoma, Verdana, Arial, sans-serif;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Welcome to nginx!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>If you see this page, the nginx web server is successfully installed and</span><br><span class="line">working. Further configuration is required.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>For online documentation and support please refer to</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://nginx.org/"</span>&gt;</span>nginx.org<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">Commercial support is available at</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://nginx.com/"</span>&gt;</span>nginx.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span>Thank you for using nginx.<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>有此输出，则表示启动成功。</p><h2 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h2><h3 id="Windows-2"><a href="#Windows-2" class="headerlink" title="Windows"></a>Windows</h3><p>直接打开 <strong>nginx-1.18.0/conf/nginx.conf</strong> 进行修改。</p><h3 id="Linux-3"><a href="#Linux-3" class="headerlink" title="Linux"></a>Linux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/nginx-1.18.0/conf</span><br><span class="line">vim nginx.conf编辑nginx.conf文件</span><br><span class="line">按键盘 a 键开始编辑</span><br><span class="line">按键盘 esc 键  退出编辑</span><br><span class="line">:wq       保存并退出</span><br></pre></td></tr></table></figure><p>查看nginx.conf文件内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat nginx.conf</span><br><span class="line">或</span><br><span class="line">more nginx.conf</span><br></pre></td></tr></table></figure><h3 id="配置详情"><a href="#配置详情" class="headerlink" title="配置详情"></a>配置详情</h3><p>包含了端口号、域名、代理的配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#user  nobody;</span></span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">    <span class="comment">#                  '$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">    <span class="comment">#                  '"$http_user_agent" "$http_x_forwarded_for"';</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line"><span class="comment"># 端口号修改</span></span><br><span class="line">        listen       8088;</span><br><span class="line"><span class="comment"># 域名修改 默认：localhost</span></span><br><span class="line">        server_name  xxx.yyy.com;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 配置代理 </span></span><br><span class="line"><span class="comment"># /var 发送请求以此开头 例:axios.get(/var/api路径)  var是个变量，可以取任意名字</span></span><br><span class="line"><span class="comment"># http://ip:port 代理地址</span></span><br><span class="line">        location /var &#123;</span><br><span class="line">            rewrite  ^.+var/?(.*)$ /<span class="variable">$1</span> <span class="built_in">break</span>;</span><br><span class="line">            include  uwsgi_params;</span><br><span class="line">            proxy_pass   http://ip:port;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    root           html;</span></span><br><span class="line">        <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">        <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">        <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">        <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># deny access to .htaccess files, if Apache's document root</span></span><br><span class="line">        <span class="comment"># concurs with nginx's one</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">        <span class="comment">#    deny  all;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># another virtual host using mix of IP-, name-, and port-based configuration</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       8000;</span></span><br><span class="line">    <span class="comment">#    listen       somename:8080;</span></span><br><span class="line">    <span class="comment">#    server_name  somename  alias  another.alias;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># HTTPS server</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       443 ssl;</span></span><br><span class="line">    <span class="comment">#    server_name  localhost;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_certificate      cert.pem;</span></span><br><span class="line">    <span class="comment">#    ssl_certificate_key  cert.key;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_session_cache    shared:SSL:1m;</span></span><br><span class="line">    <span class="comment">#    ssl_session_timeout  5m;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span></span><br><span class="line">    <span class="comment">#    ssl_prefer_server_ciphers  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="验证nginx配置文件是否正确"><a href="#验证nginx配置文件是否正确" class="headerlink" title="验证nginx配置文件是否正确"></a>验证nginx配置文件是否正确</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/nginx-1.18.0/sbin</span><br><span class="line">./nginx -t</span><br></pre></td></tr></table></figure><p>出现一些信息则表示配置正确：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nginx.conf syntax is ok</span><br><span class="line">nginx.conf <span class="built_in">test</span> is successful</span><br></pre></td></tr></table></figure><h2 id="启动成功，但外部机器访问不到的原因"><a href="#启动成功，但外部机器访问不到的原因" class="headerlink" title="启动成功，但外部机器访问不到的原因"></a>启动成功，但外部机器访问不到的原因</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ping ip机器是否可以ping通访问机器</span><br><span class="line">防火墙端口号是否允许被访问，默认80有防火墙设置</span><br><span class="line">最基础的一点：ip地址有没有配置到可访问虚拟机上，比如阿里云，华为云等。！！！我当时因为这个原因校验了很久，其他的配置都是通的，然后外部机器不能访问，后来被通知，ip没有配置。</span><br></pre></td></tr></table></figure><h2 id="防火墙修改"><a href="#防火墙修改" class="headerlink" title="防火墙修改"></a>防火墙修改</h2><p>iptables是centos7之前常用的防火墙，在centos7上使用了firewall。</p><p>防火墙常用命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询防火墙状态</span></span><br><span class="line">service iptables status</span><br><span class="line"><span class="comment"># 关闭防火墙</span></span><br><span class="line">service iptables stop</span><br><span class="line"><span class="comment"># 开启防火墙</span></span><br><span class="line">service iptables start</span><br><span class="line"><span class="comment"># 重启防火墙</span></span><br><span class="line">service iptables restart</span><br><span class="line"><span class="comment"># 永久关闭防火墙</span></span><br><span class="line">chkconfig iptables off</span><br><span class="line"><span class="comment"># 永久关闭后开启防火墙</span></span><br><span class="line">chkconfig iptables on </span><br><span class="line"><span class="comment"># 查询当前iptables的规则</span></span><br><span class="line">iptables -L --line-numbers</span><br></pre></td></tr></table></figure><p><strong>开放端口和关闭端口</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/sysconfig/</span><br><span class="line">vim iptables</span><br><span class="line"></span><br><span class="line">添加信息一定要在 COMMIT 之前</span><br><span class="line"></span><br><span class="line">-A INPUT -p tcp --dport 22 -j ACCEPT  <span class="comment"># 开放端口</span></span><br><span class="line">-A INPUT -p tcp --dport 22 -j DROP<span class="comment"># 关闭端口</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*filter</span><br><span class="line">:INPUT ACCEPT [31:1840]</span><br><span class="line">:FORWARD ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [21:5070]</span><br><span class="line">-A INPUT -p tcp -m tcp --dport 443 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m tcp --dport 8088 -j ACCEPT开放8088端口</span><br><span class="line">COMMIT</span><br></pre></td></tr></table></figure><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">yum -y install lrzszrz安装命令</span><br><span class="line">ls  查看</span><br><span class="line">ls -a   查看全部</span><br><span class="line"></span><br><span class="line"># nginx相关命令</span><br><span class="line">whereis nginx查找nginx路径</span><br><span class="line">service nginx start  启动</span><br><span class="line">nginx -s stop停止</span><br><span class="line">nginx -s quit退出</span><br><span class="line">nginx -s reload  重启加载</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>arguments的那些事</title>
      <link href="/2020/09/07/front-end-js-arguments/"/>
      <url>/2020/09/07/front-end-js-arguments/</url>
      
        <content type="html"><![CDATA[<p>arguments 是一个对应于传递给函数的参数的类数组对象。<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/arguments" target="_blank" rel="noopener"><strong><em>查看文档</em></strong></a></p><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><p>arguments对象是所有（非箭头）函数中都可用的局部变量。你可以使用arguments对象在函数中引用函数的参数。此对象包含传递给函数的每个参数，第一个参数在索引0处。</p><a id="more"></a><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func1</span>(<span class="params">a, b, c</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">arguments</span>[<span class="number">0</span>]);</span><br><span class="line">  <span class="comment">// expected output: 1</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">arguments</span>[<span class="number">1</span>]);</span><br><span class="line">  <span class="comment">// expected output: 2</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">arguments</span>[<span class="number">2</span>]);</span><br><span class="line">  <span class="comment">// expected output: 3</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func1(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure><h2 id="伪数组转真数组"><a href="#伪数组转真数组" class="headerlink" title="伪数组转真数组"></a>伪数组转真数组</h2><p>arguments对象不是一个 Array 。它类似于Array，但除了length属性和索引元素之外没有任何Array属性。例如，它没有 pop 方法。但是它可以被转换为一个真正的Array：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> args = <span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>);</span><br><span class="line"><span class="keyword">var</span> args = [].slice.call(<span class="built_in">arguments</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ES2015</span></span><br><span class="line"><span class="keyword">const</span> args = <span class="built_in">Array</span>.from(<span class="built_in">arguments</span>);</span><br><span class="line"><span class="keyword">const</span> args = [...arguments];</span><br></pre></td></tr></table></figure><h2 id="获取对象类型"><a href="#获取对象类型" class="headerlink" title="获取对象类型"></a>获取对象类型</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.prototype.toString.call(&#123;&#125;)</span><br><span class="line">=&gt;  <span class="string">"[object Object]"</span></span><br></pre></td></tr></table></figure><h2 id="严格模式"><a href="#严格模式" class="headerlink" title="严格模式"></a>严格模式</h2><p>在严格模式下，剩余参数、默认参数和解构赋值参数的存在<strong>不会改变 arguments对象的行为</strong>。</p><h2 id="非严格模式"><a href="#非严格模式" class="headerlink" title="非严格模式"></a>非严格模式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">当非严格模式中的函数 <span class="string">"没有包含剩余参数、默认参数和解构赋值"</span> ，那么arguments对象中的值<span class="string">"会"</span>跟踪参数的值（反之亦然）。</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params">a</span>) </span>&#123; </span><br><span class="line">  <span class="built_in">arguments</span>[<span class="number">0</span>] = <span class="number">99</span>;   <span class="comment">// 更新了arguments[0] 同样更新了a</span></span><br><span class="line">  <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br><span class="line">func(<span class="number">10</span>); <span class="comment">// 99</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params">a</span>) </span>&#123; </span><br><span class="line">  a = <span class="number">99</span>;              <span class="comment">// 更新了a 同样更新了arguments[0] </span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">arguments</span>[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line">func(<span class="number">10</span>); <span class="comment">// 99</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">当非严格模式中的函数 <span class="string">"有包含剩余参数、默认参数和解构赋值"</span> ，那么arguments对象中的值<span class="string">"不会"</span>跟踪参数的值（反之亦然）。</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params">a = <span class="number">55</span></span>) </span>&#123; </span><br><span class="line">  <span class="built_in">arguments</span>[<span class="number">0</span>] = <span class="number">99</span>; <span class="comment">// updating arguments[0] does not also update a</span></span><br><span class="line">  <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br><span class="line">func(<span class="number">10</span>); <span class="comment">// 10</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params">a = <span class="number">55</span></span>) </span>&#123; </span><br><span class="line">  a = <span class="number">99</span>; <span class="comment">// updating a does not also update arguments[0]</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">arguments</span>[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line">func(<span class="number">10</span>); <span class="comment">// 10</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params">a = <span class="number">55</span></span>) </span>&#123; </span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">arguments</span>[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line">func(); <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode使用注意事项</title>
      <link href="/2020/09/06/other-vscode/"/>
      <url>/2020/09/06/other-vscode/</url>
      
        <content type="html"><![CDATA[<p>Visual Studio Code is a lightweight but powerful source code editor which runs on your desktop and is available for Windows, macOS and Linux. It comes with built-in support for JavaScript, TypeScript and Node.js and has a rich ecosystem of extensions for other languages (such as C++, C#, Java, Python, PHP, Go) and runtimes (such as .NET and Unity). <a href="https://code.visualstudio.com/" target="_blank" rel="noopener"><strong><em>下载地址</em></strong></a></p><a id="more"></a><h2 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h2><h3 id="Atuo-Rename-Tag"><a href="#Atuo-Rename-Tag" class="headerlink" title="Atuo Rename Tag"></a>Atuo Rename Tag</h3><p>修改 html 标签，自动帮你完成头部和尾部闭合标签的同步修改</p><h3 id="Atuo-Close-Tag"><a href="#Atuo-Close-Tag" class="headerlink" title="Atuo Close Tag"></a>Atuo Close Tag</h3><p>自动闭合 html 标签</p><h3 id="Chinese-Simplified-Language-Pack-for-Visual-Studio-Code"><a href="#Chinese-Simplified-Language-Pack-for-Visual-Studio-Code" class="headerlink" title="Chinese (Simplified) Language Pack for Visual Studio Code"></a>Chinese (Simplified) Language Pack for Visual Studio Code</h3><p>文（简体）语言包，将界面转换为中文</p><h3 id="Live-server"><a href="#Live-server" class="headerlink" title="Live server"></a>Live server</h3><p>开启一个服务，类似http-server命令</p><h3 id="open-in-browser"><a href="#open-in-browser" class="headerlink" title="open in browser"></a>open in browser</h3><p>在浏览器打开，可以选择电脑已装浏览器</p><h2 id="命令报错的解决方法"><a href="#命令报错的解决方法" class="headerlink" title="命令报错的解决方法"></a>命令报错的解决方法</h2><p>在用下面方法时，要确保node -v,npm -v,cnpm -v命令在cmd命令上可以正常运行。</p><h3 id="npm报错"><a href="#npm报错" class="headerlink" title="npm报错"></a>npm报错</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: EPERM: operation not permitted, mkdir ‘C:\Program Files\nodejs\node_cache_locks’</span><br></pre></td></tr></table></figure><p>解决方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">权限不够，需要你在打开vscode时选择以管理员身份打开。</span><br><span class="line">或者在vscode的图标点击右键，选择属性-&gt;兼容性，<span class="string">"勾选"</span> 以管理员身份运行此程序。</span><br></pre></td></tr></table></figure><h3 id="cnpm报错"><a href="#cnpm报错" class="headerlink" title="cnpm报错"></a>cnpm报错</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cnpm : 无法加载文件 D:\Program Files\nodejs\node_global\cnpm.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies。</span><br><span class="line">+ cnpm run serve</span><br><span class="line">+ FullyQualifiedErrorId : UnauthorizedAccess</span><br><span class="line">cnpm : 无法加载文件 D:\Program Files\nodejs\node_global\cnpm.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies。</span><br><span class="line">所在位置 行:1 字符: 1</span><br><span class="line">+ cnpm run serve</span><br><span class="line">+ ~~~~</span><br><span class="line">+ CategoryInfo : SecurityError: (:) []，PSSecurityException</span><br><span class="line">+ FullyQualifiedErrorId : UnauthorizedAccess</span><br></pre></td></tr></table></figure><p>解决方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">右击VSCode图标，选择以管理员身份运行</span><br><span class="line">在终端中执行 <span class="string">"get-ExecutionPolicy"</span> ，显示Restricted，表示状态是禁止的</span><br><span class="line">再执行 <span class="string">"set-ExecutionPolicy RemoteSigned"</span></span><br><span class="line">再执行 <span class="string">"get-ExecutionPolicy"</span> ，显示RemoteSigned，则表示状态解禁，可以运行</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 部署到 Github</title>
      <link href="/2020/08/26/hexo-push-github/"/>
      <url>/2020/08/26/hexo-push-github/</url>
      
        <content type="html"><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Deployer not found: git</span><br><span class="line">如果未安装以上插件会发生时报错</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="创建github博客仓库"><a href="#创建github博客仓库" class="headerlink" title="创建github博客仓库"></a>创建github博客仓库</h3><p>每一个github账户最多只能创建一个这样可以直接使用域名访问的仓库，访问地址：<strong><em>username.github.io</em></strong>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注册的邮箱一定要验证，否则不会成功；</span><br><span class="line">仓库名字必须是：username.github.io，其中username是你的用户名；</span><br><span class="line">仓库创建成功不会立即生效，需要过一段时间，大概10-30分钟，或者更久。</span><br></pre></td></tr></table></figure><h2 id="config-yml配置"><a href="#config-yml配置" class="headerlink" title="_config.yml配置"></a>_config.yml配置</h2><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  xxx: git</span><br><span class="line"></span><br><span class="line">xxx前面有两个空格，:后面有一个空格！切记空格不可多也不可少！</span><br></pre></td></tr></table></figure><h3 id="第一种https"><a href="#第一种https" class="headerlink" title="第一种https"></a>第一种https</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https:<span class="comment">//github.com/username/username.github.io.git</span></span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">使用这种方法时，输入用户密码无反应无报错，可能是网络原因或者是hexo版本原因</span><br><span class="line">如果有翻墙软件，可以尝试一下，所以不建议使用这种方式</span><br></pre></td></tr></table></figure><h3 id="第二种ssh"><a href="#第二种ssh" class="headerlink" title="第二种ssh"></a>第二种ssh</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:username/username.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h4 id="生成ssh密钥"><a href="#生成ssh密钥" class="headerlink" title="生成ssh密钥"></a>生成ssh密钥</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"邮箱地址"</span></span><br></pre></td></tr></table></figure><p>然后连续3次回车，最终会生成一个文档在用户目录下：id_rsa     id_rsa.pub     known_hosts<br>查看id_rsa.pub内容并备用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat id_rsa.pub</span><br></pre></td></tr></table></figure><h4 id="配置密钥到github"><a href="#配置密钥到github" class="headerlink" title="配置密钥到github"></a>配置密钥到github</h4><p>1.添加公钥</p><p>github –&gt; username.github.io –&gt; Settings –&gt; Deploy keys –&gt; Add deploy key，然后将生成的+id_rsa.pub+中的内容全选复制到+key+输入框中，然后点击+Add+key+完成添加公钥。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">注意勾选  Allow write access</span><br><span class="line"></span><br><span class="line">不勾选在 hexo d 时会报以下错误：</span><br><span class="line">Error: Spawn failed</span><br><span class="line">    at ChildProcess.</span><br></pre></td></tr></table></figure><p>2.测试密码是否配置成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hi username! You’ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class="line">看到这个信息说明SSH已配置成功！</span><br></pre></td></tr></table></figure><p>3.配置用户密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"github用户名"</span></span><br><span class="line">git config --global user.email  <span class="string">"github注册邮箱"</span></span><br></pre></td></tr></table></figure><p>4.hexo d</p><p>上传github</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>览器解析过程</title>
      <link href="/2020/08/19/front-end-browser/"/>
      <url>/2020/08/19/front-end-browser/</url>
      
        <content type="html"><![CDATA[<h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">输入网址。 </span><br><span class="line">浏览器查找域名的IP地址。 </span><br><span class="line">浏览器给web服务器发送一个HTTP请求 </span><br><span class="line">网站服务的永久重定向响应 </span><br><span class="line">浏览器跟踪重定向地址 现在，浏览器知道了要访问的正确地址，所以它会发送另一个获取请求。 </span><br><span class="line">服务器“处理”请求，服务器接收到获取请求，然后处理并返回一个响应。 </span><br><span class="line">服务器发回一个HTML响应 </span><br><span class="line">浏览器开始显示HTML </span><br><span class="line">浏览器发送请求，以获取嵌入在HTML中的对象。在浏览器显示HTML时，它会注意到需要获取其他地址内容的标签。这时，浏览器会发送一个获取请求来重新获得这些文件。这些文件就包括CSS/JS/图片等资源，这些资源的地址都要经历一个和HTML读取类似的过程。所以浏览器会在DNS中查找这些域名，发送请求，重定向等等…</span><br></pre></td></tr></table></figure><a id="more"></a><p>浏览器会解析三个东西:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HTML/SVG/XHTML，解析这三种文件会产生一个 DOM Tree。 </span><br><span class="line">CSS，解析 CSS 会产生 CSS 规则树。 </span><br><span class="line">Javascript脚本，主要是通过 DOM API 和 CSSOM API 来操作 DOM Tree 和 CSS Rule Tree。</span><br></pre></td></tr></table></figure><h2 id="回流与重绘"><a href="#回流与重绘" class="headerlink" title="回流与重绘"></a>回流与重绘</h2><p>Reflow（回流）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">浏览器要花时间去渲染，当它发现了某个部分发生了变化影响了布局，那就需要倒回去重新渲染。</span><br></pre></td></tr></table></figure><p>Repaint（重绘）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果只是改变了某个元素的背景颜色，文字颜色等，不影响元素周围或内部布局的属性，将只会引起浏览器的repaint，重画某一部分。</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：Reflow要比Repaint更花费时间，也就更影响性能，要尽量避免过多的Reflow</span><br></pre></td></tr></table></figure><h3 id="回流的原因"><a href="#回流的原因" class="headerlink" title="回流的原因"></a>回流的原因</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">页面初始化的时候； </span><br><span class="line">操作DOM时； </span><br><span class="line">某些元素的尺寸变了； </span><br><span class="line">CSS 的属性发生变化。</span><br></pre></td></tr></table></figure><h3 id="减少-reflow-repaint"><a href="#减少-reflow-repaint" class="headerlink" title="减少 reflow/repaint"></a>减少 reflow/repaint</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">不要一条一条地修改 DOM 的样式。与其这样，还不如预先定义好 css 的 class，然后修改 DOM 的 className。 </span><br><span class="line">不要把 DOM 结点的属性值放在一个循环里当成循环里的变量。 </span><br><span class="line">为动画的 HTML 元件使用 fixed 或 absoult 的 position，那么修改他们的 CSS 是不会 reflow 的。 </span><br><span class="line">千万不要使用 table 布局。因为可能很小的一个小改动会造成整个 table 的重新布局。</span><br></pre></td></tr></table></figure><h2 id="HTML页面加载和解析流程"><a href="#HTML页面加载和解析流程" class="headerlink" title="HTML页面加载和解析流程"></a>HTML页面加载和解析流程</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">用户输入网址（假设是个html页面，并且是第一次访问），浏览器向服务器发出请求，服务器返回html文件； </span><br><span class="line">浏览器开始载入html代码，发现＜head＞标签内有一个＜link＞标签引用外部CSS文件； </span><br><span class="line">浏览器又发出CSS文件的请求，服务器返回这个CSS文件； </span><br><span class="line">浏览器继续载入html中＜body＞部分的代码，并且CSS文件已经拿到手了，可以开始渲染页面了； </span><br><span class="line">浏览器在代码中发现一个＜img＞标签引用了一张图片，向服务器发出请求。此时浏览器不会等到图片下载完，而是继续渲染后面的代码； </span><br><span class="line">服务器返回图片文件，由于图片占用了一定面积，影响了后面段落的排布，因此浏览器需要回过头来重新渲染这部分代码； </span><br><span class="line">浏览器发现了一个包含一行Javascript代码的＜script＞标签，赶快运行它； </span><br><span class="line">Javascript脚本执行了这条语句，它命令浏览器隐藏掉代码中的某个＜div＞ （style.display=”none”）。突然少了这么一个元素，浏览器不得不重新渲染这部分代码； </span><br><span class="line">终于等到了＜/html＞的到来，浏览器泪流满面…… </span><br><span class="line">等等，还没完，用户点了一下界面中的“换肤”按钮，Javascript让浏览器换了一下＜link＞标签的CSS路径； </span><br><span class="line">浏览器召集了在座的各位＜div＞＜span＞＜ul＞＜li＞们，“大伙儿收拾收拾行李，咱得重新来过……”，浏览器向服务器请求了新的CSS文件，重新渲染页面。</span><br></pre></td></tr></table></figure><h2 id="代码编写的注意事项"><a href="#代码编写的注意事项" class="headerlink" title="代码编写的注意事项"></a>代码编写的注意事项</h2><h3 id="编写CSS"><a href="#编写CSS" class="headerlink" title="编写CSS"></a>编写CSS</h3><p>CSS选择符是<strong>从右到左</strong>进行匹配的。匹配 #nav li 时，会去找所有的li，然后再去确定它的父元素是不是#nav。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dom深度尽量浅。</span><br><span class="line">减少inline javascript、css的数量。</span><br><span class="line">使用现代合法的css属性。</span><br><span class="line">不要为id选择器指定类名或是标签，因为id可以唯一确定一个元素。</span><br><span class="line">避免后代选择符，尽量使用子选择符。原因：子元素匹配符的概率要大于后代元素匹配符。后代选择符;<span class="comment">#tp p&#123;&#125; 子选择符：#tp&gt;p&#123;&#125;</span></span><br><span class="line">避免使用通配符，举一个例子，.mod .hd *&#123;font-size:14px;&#125; 根据匹配顺序,将首先匹配通配符,也就是说先匹配出通配符,然后匹配.hd（就是要对dom树上的所有节点进行遍历他的父级元素）,然后匹配.mod,这样的性能耗费可想而知.</span><br></pre></td></tr></table></figure><h3 id="script标签的位置"><a href="#script标签的位置" class="headerlink" title="script标签的位置"></a>script标签的位置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我们大都会将script标签放在body结束标签之前</span><br></pre></td></tr></table></figure><p>Javascript的加载和执行的特点： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">载入后马上执行； </span><br><span class="line">执行时会阻塞页面后续的内容（包括页面的渲染、其它资源的下载）。原因：因为浏览器需要一个稳定的DOM树结构，而JS中很有可能有 代码直接改变了DOM树结构，比如使用 document.write 或 appendChild,甚至是直接使用的location.href进行跳转，浏览器为了防止出现JS修 改DOM树，需要重新构建DOM树的情况，所以 就会阻塞其他的下载和呈现。</span><br></pre></td></tr></table></figure><p>减少 JavaScript 对性能的影响的方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">将所有的script标签放到页面底部，也就是body闭合标签之前，这能确保在脚本执行前页面已经完成了DOM树渲染。</span><br><span class="line">尽可能地合并脚本。页面中的script标签越少，加载也就越快，响应也越迅速。无论是外链脚本还是内嵌脚本都是如此。</span><br><span class="line">采用无阻塞下载 JavaScript 脚本的方法： </span><br><span class="line">（1）使用script标签的 defer 属性（仅适用于 IE 和 Firefox 3.5 以上版本）； </span><br><span class="line">（2）使用动态创建的script元素来下载并执行代码；</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
          <category> 性能优化 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>prototype 和 __proto__</title>
      <link href="/2020/08/18/front-end-js-yuanxing/"/>
      <url>/2020/08/18/front-end-js-yuanxing/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">__proto__和constructor属性是对象所独有的</span><br><span class="line">prototype属性是函数所独有的,但是由于JS中函数也是一种对象，所以函数也拥有__proto__和constructor属性</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="proto"><a href="#proto" class="headerlink" title="proto"></a><strong>proto</strong></h2><p><strong>proto</strong> 属性，它是对象所独有的，可以看到<strong>proto</strong>属性都是由一个对象指向一个对象，即指向它们的原型对象（也可以理解为父对象）。</p><p>那么这个属性的作用是什么呢？<br><strong>proto</strong>属性的作用就是当访问一个对象的属性时，如果该对象内部不存在这个属性，那么就会去它的<strong>proto</strong>属性所指向的那个对象（父对象）里找，一直找，直到<strong>proto</strong>属性的终点null，再往上找就相当于在null上取值，会报错。由以上这种通过<strong>proto</strong>属性来连接对象直到null的一条链即为我们所谓的<strong>原型链</strong>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我们平时调用的字符串方法、数组方法、对象方法、函数方法等都是靠__proto__继承而来的</span><br></pre></td></tr></table></figure><h2 id="prototype"><a href="#prototype" class="headerlink" title="prototype"></a>prototype</h2><p>prototype属性的作用又是什么呢？<br>它的作用就是包含可以由特定类型的所有实例共享的属性和方法，也就是让该函数所实例化的对象们都可以找到公用的属性和方法。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">任何函数在创建的时候，其实会默认同时创建该函数的prototype对象。</span><br></pre></td></tr></table></figure><h2 id="constructor-NaN"><a href="#constructor-NaN" class="headerlink" title="constructor"></a>constructor</h2><p>constructor属性也是对象才拥有的，它是从一个对象指向一个函数，含义就是指向该对象的构造函数，每个对象都有构造函数（本身拥有或继承而来），Function这个对象比较特殊，它的构造函数就是它自己（因为Function可以看成是一个函数，也可以是一个对象），所有函数和对象最终都是由Function构造函数得来，所以constructor属性的终点就是Function这个函数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">函数创建的对象.__proto__ === 该函数.prototype</span><br><span class="line">该函数.prototype.constructor===该函数本身</span><br></pre></td></tr></table></figure><h2 id="prototype-和-proto"><a href="#prototype-和-proto" class="headerlink" title="prototype 和 proto"></a>prototype 和 proto</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">A</span> (<span class="params">name</span>) </span>&#123;         <span class="comment">// 这里是一个构造函数</span></span><br><span class="line">    thia.name = name</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Aobj = &#123;                <span class="comment">// 这里是一个 对对象字面量</span></span><br><span class="line">    name: <span class="string">''</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>console.dir(A)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ƒ A(name)</span><br><span class="line">length: 1</span><br><span class="line">name: <span class="string">"A"</span></span><br><span class="line">arguments: null</span><br><span class="line"><span class="built_in">caller</span>: null</span><br><span class="line">prototype: &#123;constructor: ƒ&#125;</span><br><span class="line">__proto__: ƒ ()</span><br><span class="line">[[FunctionLocation]]: VM358:1</span><br><span class="line">[[Scopes]]: Scopes[2]</span><br></pre></td></tr></table></figure><p>console.dir(Aobj)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Object</span><br><span class="line">name: <span class="string">""</span></span><br><span class="line">__proto__: Object</span><br></pre></td></tr></table></figure><h2 id="function-和-object"><a href="#function-和-object" class="headerlink" title="function 和 object"></a>function 和 object</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">B</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name</span><br><span class="line">    <span class="keyword">this</span>.getName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> c = <span class="string">'test'</span></span><br><span class="line">    <span class="built_in">console</span>.log(c)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> b = <span class="keyword">new</span> B(<span class="string">'testb'</span>)      <span class="comment">// test</span></span><br><span class="line"><span class="built_in">console</span>.log(b)              <span class="comment">// B: &#123; name: 'testb',getName: function() &#123;&#125; &#125;</span></span><br><span class="line">B(<span class="string">'testc'</span>)                  <span class="comment">// test</span></span><br></pre></td></tr></table></figure><p>在非严格模式下，我们直接执行构造函数: B(‘testc’) 相当于</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// window.name = <span class="string">'testc'</span></span><br><span class="line">// window.getName = <span class="function"><span class="title">function</span></span>() &#123; console.log(this.name) &#125;</span><br></pre></td></tr></table></figure><h2 id="new-到底发生了什么"><a href="#new-到底发生了什么" class="headerlink" title="new 到底发生了什么"></a>new 到底发生了什么</h2><p>对于 var b = new B(‘testb’)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  javascript 实际上执行的是：</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> o = <span class="keyword">new</span> <span class="built_in">Object</span>()   <span class="comment">// 生成一个 新的 对象  b 这里 可以约等于  var b = &#123;&#125;</span></span><br><span class="line"></span><br><span class="line">o.__proto__ = B.prototype <span class="comment">// 这里就是 函数对象中 独有的 prototype 属性。</span></span><br><span class="line"></span><br><span class="line">                          <span class="comment">// 这个独有的 prototype 属性 包含了一个 constructor 属性方法，指向的就是 构造函数， 也就是 这里的  function B(name) &#123;&#125;</span></span><br><span class="line"></span><br><span class="line">B.call(o)                 <span class="comment">// 由于 call 的使用 将这里this是指向o, 所以就 可以 把什么this.name/getName 强行的绑定到o上。同时，需要注意的一点就是， 这里的 构造函数 执行科一遍， 只不过是 将 this 指向的 属性和方法，都 强行的 给 新创建的  这个 o 对象 绑定了一遍。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> b = o                 <span class="comment">// 把 这个 o 返回给了  b 。 从而完成了  var b = new B('testb') 的过程</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>call、apply、bind使用和区别</title>
      <link href="/2020/08/15/front-end-js-changethis/"/>
      <url>/2020/08/15/front-end-js-changethis/</url>
      
        <content type="html"><![CDATA[<p>这三个函数的存在意义:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">改变函数执行时的上下文，即改变函数运行时的this指向</span><br></pre></td></tr></table></figure><h2 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;<span class="attr">name</span>: <span class="string">'tony'</span>&#125;;</span><br><span class="line"> </span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">Child</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">   <span class="keyword">this</span>.name = name;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> Child.prototype = &#123;</span><br><span class="line">   <span class="keyword">constructor</span>: Child,</span><br><span class="line">   showName: function()&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">var</span> child = <span class="keyword">new</span> Child(<span class="string">'thomas'</span>);</span><br><span class="line"> child.showName(); <span class="comment">// thomas</span></span><br><span class="line"></span><br><span class="line"> child.showName.call(obj);<span class="comment">// tony</span></span><br><span class="line"> child.showName.apply(obj);<span class="comment">// tony</span></span><br><span class="line"> <span class="keyword">let</span> bind = child.showName.bind(obj); <span class="comment">// 返回一个函数</span></span><br><span class="line"> bind(); <span class="comment">// tony</span></span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：<span class="built_in">bind</span>这个方法在IE6~8下不兼容。</span><br></pre></td></tr></table></figure><h3 id="call、apply与bind的差别"><a href="#call、apply与bind的差别" class="headerlink" title="call、apply与bind的差别"></a>call、apply与bind的差别</h3><p>call和apply改变了函数的this上下文后便执行该函数,而bind则是返回改变了上下文后的一个函数。</p><h3 id="call、apply的区别"><a href="#call、apply的区别" class="headerlink" title="call、apply的区别"></a>call、apply的区别</h3><p>他们俩之间的差别在于参数的区别，call和apply的第一个参数都是要改变上下文的对象，而call从第二个参数开始以参数列表的形式展现，apply则是把除了改变上下文对象的参数放在一个数组里面作为它的第二个参数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">19</span>, <span class="number">6</span>];</span><br><span class="line"><span class="comment">//例子：求数组中的最值</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.max.call(<span class="literal">null</span>, <span class="number">1</span>,<span class="number">2</span>,<span class="number">19</span>,<span class="number">6</span>)); <span class="comment">// 19</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.max.call(<span class="literal">null</span>, arr1)); <span class="comment">// NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.max.apply(<span class="literal">null</span>, arr1)); <span class="comment">//  19 直接可以用arr1传递进去</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// apply方法结果同下</span></span><br><span class="line">fn.call(); <span class="comment">// 普通模式下this是window，在严格模式下this是undefined</span></span><br><span class="line">fn.call(<span class="literal">null</span>); <span class="comment">// 普通模式下this是window，在严格模式下this是null</span></span><br><span class="line">fn.call(<span class="literal">undefined</span>); <span class="comment">// 普通模式下this是window，在严格模式下this是undefined</span></span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="将伪数组转化为数组（含有length属性的对象，dom节点-函数的参数arguments）"><a href="#将伪数组转化为数组（含有length属性的对象，dom节点-函数的参数arguments）" class="headerlink" title="将伪数组转化为数组（含有length属性的对象，dom节点, 函数的参数arguments）"></a>将伪数组转化为数组（含有length属性的对象，dom节点, 函数的参数arguments）</h3><p>js中的伪数组(例如通过document.getElementsByTagName获取的元素、含有length属性的对象)具有length属性，并且可以通过0、1、2…下标来访问其中的元素，但是没有Array中的push、pop等方法。利用call，apply来转化成真正的数组，然后使用数组方法。</p><h4 id="dom节点"><a href="#dom节点" class="headerlink" title="dom节点"></a>dom节点</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"div1"</span>&gt;<span class="number">1</span>&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="div1"&gt;2&lt;/</span>div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"div1"</span>&gt;<span class="number">3</span>&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">let div = document.getElementsByTagName('div');</span></span><br><span class="line"><span class="regexp">console.log(div); /</span><span class="regexp">/ HTMLCollection(3) [div.div1, div.div1, div.div1] 里面包含length属性</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">let arr2 = Array.prototype.slice.call(div);</span></span><br><span class="line"><span class="regexp">console.log(arr2); /</span><span class="regexp">/ 数组 [div.div1, div.div1, div.div1]</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">兼容IE6~8，抽取出类数组对象转换为数组</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">listToArray</span>(<span class="params">likeAry</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ary = [];</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        ary = <span class="built_in">Array</span>.prototype.slice.call(likeAry);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; likeAry.length; i++) &#123;</span><br><span class="line">            ary[ary.length] = likeAry[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ary;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="fn内的arguments"><a href="#fn内的arguments" class="headerlink" title="fn内的arguments"></a>fn内的arguments</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(fn(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)); <span class="comment">// [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：对于arguments借用数组的方法是不存在任何兼容性问题的。</span><br></pre></td></tr></table></figure><h4 id="含有length属性的对象"><a href="#含有length属性的对象" class="headerlink" title="含有length属性的对象"></a>含有length属性的对象</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line"><span class="number">0</span>: <span class="number">1</span>,</span><br><span class="line"><span class="number">1</span>: <span class="string">'thomas'</span>,</span><br><span class="line"><span class="number">2</span>: <span class="number">13</span>,</span><br><span class="line">length: <span class="number">3</span> <span class="comment">// 一定要有length属性</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.prototype.slice.call(obj)); <span class="comment">// [1, "thomas", 13]</span></span><br></pre></td></tr></table></figure><h3 id="数组拼接，添加"><a href="#数组拼接，添加" class="headerlink" title="数组拼接，添加"></a>数组拼接，添加</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr1 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">let</span> arr2 = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//数组的concat方法：返回一个新的数组</span></span><br><span class="line"><span class="keyword">let</span> arr3 = arr1.concat(arr2); </span><br><span class="line"><span class="built_in">console</span>.log(arr3); <span class="comment">// [1, 2, 3, 4, 5, 6]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1); <span class="comment">// [1, 2, 3] 不变</span></span><br><span class="line"><span class="built_in">console</span>.log(arr2); <span class="comment">// [4, 5, 6] 不变</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 用 apply方法</span></span><br><span class="line">[].push.apply(arr1,arr2);  <span class="comment">// 给arr1添加arr2</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1); <span class="comment">// [1, 2, 3, 4, 5, 6]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr2); <span class="comment">// 不变</span></span><br></pre></td></tr></table></figure><h3 id="判断变量类型"><a href="#判断变量类型" class="headerlink" title="判断变量类型"></a>判断变量类型</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr1 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">let</span> str1 = <span class="string">'string'</span>;</span><br><span class="line"><span class="keyword">let</span> obj1 = &#123;<span class="attr">name</span>: <span class="string">'thomas'</span>&#125;;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isArray</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(obj) === <span class="string">'[object Array]'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(isArray(arr1)); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断类型的方式，这个最常用语判断array和object，null(因为typeof null等于object)  </span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(arr1)); <span class="comment">// [object Array]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(str1)); <span class="comment">// [object String]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(obj1)); <span class="comment">// [object Object]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="literal">null</span>)); <span class="comment">// [object Null]</span></span><br></pre></td></tr></table></figure><h3 id="利用call和apply做继承"><a href="#利用call和apply做继承" class="headerlink" title="利用call和apply做继承"></a>利用call和apply做继承</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Animal</span>(<span class="params">name</span>)</span>&#123;      </span><br><span class="line">    <span class="keyword">this</span>.name = name;      </span><br><span class="line">    <span class="keyword">this</span>.showName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;      </span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);      </span><br><span class="line">    &#125;      </span><br><span class="line">&#125;      </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Cat</span>(<span class="params">name</span>)</span>&#123;    </span><br><span class="line">    Animal.call(<span class="keyword">this</span>, name);    </span><br><span class="line">&#125;      </span><br><span class="line"></span><br><span class="line"><span class="comment">// Animal.call(this) 的意思就是使用this对象代替Animal对象，那么</span></span><br><span class="line"><span class="comment">// Cat中不就有Animal的所有属性和方法了吗，Cat对象就能够直接调用Animal的方法以及属性了</span></span><br><span class="line"><span class="keyword">var</span> cat = <span class="keyword">new</span> Cat(<span class="string">"TONY"</span>);     </span><br><span class="line">cat.showName();   <span class="comment">//TONY</span></span><br></pre></td></tr></table></figure><h3 id="多继承"><a href="#多继承" class="headerlink" title="多继承"></a>多继承</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Class1</span>(<span class="params">a,b</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.showclass1 = <span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`class1: <span class="subst">$&#123;a&#125;</span>,<span class="subst">$&#123;b&#125;</span>`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Class2</span>(<span class="params">a,b</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.showclass2 = <span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`class2: <span class="subst">$&#123;a&#125;</span>,<span class="subst">$&#123;b&#125;</span>`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Class3</span>(<span class="params">a,b,c</span>) </span>&#123;</span><br><span class="line">  Class1.call(<span class="keyword">this</span>);</span><br><span class="line">  Class2.call(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">2</span>,<span class="number">2</span>];</span><br><span class="line"><span class="keyword">let</span> demo = <span class="keyword">new</span> Class3();</span><br><span class="line">demo.showclass1.call(<span class="keyword">this</span>,<span class="number">1</span>); <span class="comment">// class1: 1,undefined</span></span><br><span class="line">demo.showclass1.call(<span class="keyword">this</span>,<span class="number">1</span>,<span class="number">2</span>); <span class="comment">// class1: 1,2</span></span><br><span class="line">demo.showclass2.apply(<span class="keyword">this</span>,arr); <span class="comment">// class2: 2,2</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>callback,Promise,Generatol,async/await的理解</title>
      <link href="/2020/08/12/front-end-js-yibu/"/>
      <url>/2020/08/12/front-end-js-yibu/</url>
      
        <content type="html"><![CDATA[<p>因为js是单线程语言，所以在遇到一些耗时比较久的任务的时候，如果继续按照顺序执行，就会造成线程的阻塞。所以这个时候就需要用到异步来解决问题。<br>可以简单地将js中的任务划分为同步任务，异步任务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">异步的解决办法</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="callback"><a href="#callback" class="headerlink" title="callback"></a>callback</h2><p>将一个函数当做参数传到另一个函数里，当那个函数执行完后，再执行传进去的这个函数，这个过程就叫做回调。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">demo</span>(<span class="params">callback</span>) </span>&#123;</span><br><span class="line">    setTimeout(&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">1</span>)</span><br><span class="line">        callback()</span><br><span class="line">    &#125;,<span class="number">1000</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">demo()</span><br><span class="line"></span><br><span class="line">运行结果</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><p>缺点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">回调地狱，高耦合，维护起来比较困难</span><br><span class="line">每个任务只能执行一个回调函数</span><br><span class="line">如果几个异步之间没有顺序之分，同样也要等上一个操作完成之后才能继续</span><br></pre></td></tr></table></figure><h2 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h2><p>promise构造函数的参数是一个函数，我们把它称为处理器函数。<br>处理器函数接收两个函数reslove和reject作为其参数，当异步操作顺利执行则执行reslove函数, 当异步操作中发生异常时，则执行reject函数。<br>通过resolve传入得的值，可以在then方法中获取到，通过reject传入的值可以在chatch方法中获取到。<br>因为then和catch都返回一个相同的promise对象，所以可以进行链式调用。</p><h3 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new Promise(cb) ===&gt;实例的最基本的使用 pending(进行中) resolved(已成功) rejected(已失败)</span><br></pre></td></tr></table></figure><h3 id="两个原型方法"><a href="#两个原型方法" class="headerlink" title="两个原型方法"></a>两个原型方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Promise</span>.prototype.catch()</span><br><span class="line"><span class="built_in">Promise</span>.prototype.then()</span><br></pre></td></tr></table></figure><h3 id="两个静态方法"><a href="#两个静态方法" class="headerlink" title="两个静态方法"></a>两个静态方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Promise</span>.all()</span><br><span class="line"><span class="built_in">Promise</span>.resolve()</span><br></pre></td></tr></table></figure><h3 id="事例"><a href="#事例" class="headerlink" title="事例"></a>事例</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">delay</span>(<span class="params">city</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">reslove,reject</span>)=&gt;</span>&#123;</span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">            reslove(city)</span><br><span class="line">        &#125;,<span class="number">2000</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">delay(<span class="string">'上海'</span>).then(<span class="function">(<span class="params">city</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(city)</span><br><span class="line">    <span class="keyword">return</span> delay(<span class="string">'北京'</span>)</span><br><span class="line">&#125;).then(<span class="function">(<span class="params">city</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(city)</span><br><span class="line">    <span class="keyword">return</span> delay(<span class="string">'广州'</span>)</span><br><span class="line">&#125;).then(<span class="function">(<span class="params">city</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(city)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">=&gt;</span><br><span class="line"><span class="number">2</span>s</span><br><span class="line">上海</span><br><span class="line"><span class="number">2</span>s</span><br><span class="line">北京</span><br><span class="line"><span class="number">2</span>s</span><br><span class="line">广州</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.<span class="keyword">then</span>可以使用链式调用，原因在于：每一次执行该方法时总会返回一个Promise对象。</span><br><span class="line">另外，在<span class="keyword">then</span>的函数当中的返回值，可以作为后续操作的参数</span><br><span class="line"></span><br><span class="line">关于执行顺序：Promise在实例化的时候就会执行，也就是如果Promise的实例化语句中函数console.log输出语句，它会比<span class="keyword">then</span>中的先执行。</span><br><span class="line">Promise.all中传入的Promise对象的数组（假设为p1、p2），即使p2的运行速度比p1快，Promise.all方法仍然会按照数组中的顺序将结果返回。</span><br></pre></td></tr></table></figure><h2 id="Generatol函数"><a href="#Generatol函数" class="headerlink" title="Generatol函数"></a>Generatol函数</h2><p>generator函数，中文译为生成器，在以前一个函数中的代码要么被调用，要么不被调用，还不存在能暂停的情况。<br>generator让代码暂停成待执行，定义一个生成器很简单，在函数名前加个*号,使用上也与普通函数有区别。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> *<span class="title">fn</span>(<span class="params">a,b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> sum=a+b</span><br><span class="line">    <span class="keyword">yield</span> <span class="built_in">console</span>.log(sum)</span><br><span class="line">    <span class="keyword">let</span> sub=a-b</span><br><span class="line">    <span class="keyword">yield</span> <span class="built_in">console</span>.log(sub)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'generator'</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> f = fn(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">=&gt;返回一个函数对象</span><br><span class="line"></span><br><span class="line">f.next() </span><br><span class="line">=&gt; <span class="number">5</span>  执行到第一个<span class="keyword">yield</span>处就停止</span><br><span class="line"></span><br><span class="line">f.next() </span><br><span class="line">=&gt; <span class="number">-1</span>  执行到第二个<span class="keyword">yield</span>处就停止</span><br><span class="line"></span><br><span class="line">f.next()</span><br><span class="line">=&gt; generator</span><br><span class="line"></span><br><span class="line">f.next()</span><br><span class="line">=&gt; &#123;</span><br><span class="line">    value: <span class="literal">undefined</span></span><br><span class="line">    done: <span class="literal">true</span></span><br><span class="line">    __proto__: <span class="built_in">Object</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="async-await"><a href="#async-await" class="headerlink" title="async await"></a>async await</h2><p>async函数返回一个promise对象，如果在async函数中返回一个直接量，async会通过Promise.resolve封装成Promise对象。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">start</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> w1 = <span class="keyword">await</span> delay(<span class="string">'上海'</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(w1)</span><br><span class="line">    <span class="keyword">const</span> w2 = <span class="keyword">await</span> delay(<span class="string">'北京'</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(w2)</span><br><span class="line">    <span class="built_in">console</span> w3 = <span class="keyword">await</span> delay(<span class="string">'广州'</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(w3)</span><br><span class="line">&#125;</span><br><span class="line">start()</span><br><span class="line">&lt;!-- 等你前面结束才执行后面代码 --&gt;</span><br><span class="line"></span><br><span class="line">=&gt;</span><br><span class="line"><span class="number">2</span>s</span><br><span class="line">上海</span><br><span class="line"><span class="number">2</span>s</span><br><span class="line">北京</span><br><span class="line"><span class="number">2</span>s</span><br><span class="line">广州</span><br></pre></td></tr></table></figure><h3 id="async-定义异步函数"><a href="#async-定义异步函数" class="headerlink" title="async:定义异步函数"></a>async:定义异步函数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">自动把函数转换为Promise</span><br><span class="line">当调用异步函数的时候，函数返回值会reslove处理</span><br><span class="line">异步函数内部可以使用await处理</span><br></pre></td></tr></table></figure><h3 id="await-暂停异步函数的执行"><a href="#await-暂停异步函数的执行" class="headerlink" title="await:暂停异步函数的执行"></a>await:暂停异步函数的执行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">当使用在Promise前面时，await等待Promise完成，并返回Promise的结果</span><br><span class="line">await只能和Promise一起使用，不能和callback一起使用</span><br><span class="line">await只能用在async函数中</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>L7的使用方法</title>
      <link href="/2020/08/10/gis-antv-l7/"/>
      <url>/2020/08/10/gis-antv-l7/</url>
      
        <content type="html"><![CDATA[<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><a href="https://l7.antv.vision/zh/docs/tutorial/quickstart" target="_blank" rel="noopener"><strong><em>查看文档</em></strong></a></p><h3 id="通过-L7-CDN-使用"><a href="#通过-L7-CDN-使用" class="headerlink" title="通过 L7 CDN 使用"></a>通过 L7 CDN 使用</h3><p>如果需要引用第三方地图API，请确保在先引入第三方API，然后引入L7。</p><a id="more"></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">!</span> <span class="attr">--</span>引入最新版的<span class="attr">L7--</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">'https://unpkg.com/@antv/l7'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">!</span> <span class="attr">--</span>指定版本号引入<span class="attr">L7--</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">'https://unpkg.com/@antv/l7@2.0.11'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="通过-Module-bundle-使用"><a href="#通过-Module-bundle-使用" class="headerlink" title="通过 Module bundle 使用"></a>通过 Module bundle 使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// L7 依赖</span><br><span class="line">npm install --save @antv/l7</span><br><span class="line"></span><br><span class="line">// 第三方底图依赖</span><br><span class="line">npm install --save @antv/l7-maps;</span><br></pre></td></tr></table></figure><h2 id="初始化地图"><a href="#初始化地图" class="headerlink" title="初始化地图"></a>初始化地图</h2><h3 id="高德底图"><a href="#高德底图" class="headerlink" title="高德底图"></a>高德底图</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Scene, PointLayer &#125; <span class="keyword">from</span> <span class="string">'@antv/l7'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; GaodeMap &#125; <span class="keyword">from</span> <span class="string">'@antv/l7-maps'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> Scene(&#123;</span><br><span class="line">  id: <span class="string">'map'</span>,</span><br><span class="line">  map: <span class="keyword">new</span> GaodeMap(&#123;</span><br><span class="line">    pitch: <span class="number">35.210526315789465</span>,</span><br><span class="line">    style: <span class="string">'dark'</span>,</span><br><span class="line">    center: [ <span class="number">104.288144</span>, <span class="number">31.239692</span> ],</span><br><span class="line">    zoom: <span class="number">4.4</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Mapbox底图"><a href="#Mapbox底图" class="headerlink" title="Mapbox底图"></a>Mapbox底图</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Scene, HeatmapLayer &#125; <span class="keyword">from</span> <span class="string">'@antv/l7'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Mapbox &#125; <span class="keyword">from</span> <span class="string">'@antv/l7-maps'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> Scene(&#123;</span><br><span class="line">  id: <span class="string">'map'</span>,</span><br><span class="line">  map: <span class="keyword">new</span> Mapbox(&#123;</span><br><span class="line">    style: <span class="string">'dark'</span>,</span><br><span class="line">    pitch: <span class="number">0</span>,</span><br><span class="line">    center: [ <span class="number">127.5671666579043</span>, <span class="number">7.445038892195569</span> ],</span><br><span class="line">    zoom: <span class="number">2.632456779444394</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> GIS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AntV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百度地图的创建</title>
      <link href="/2020/08/09/gis-amap/"/>
      <url>/2020/08/09/gis-amap/</url>
      
        <content type="html"><![CDATA[<h2 id="申请密钥"><a href="#申请密钥" class="headerlink" title="申请密钥"></a>申请密钥</h2><p>获取账号和密钥。<a href="http://lbsyun.baidu.com/index.php?title=jspopularGL/guide/getkey" target="_blank" rel="noopener"><strong><em>查看文档</em></strong></a></p><h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><h3 id="引入插件"><a href="#引入插件" class="headerlink" title="引入插件"></a>引入插件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"http://api.map.baidu.com/api?v=1.0&amp;type=webgl&amp;ak=您的密钥"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> map = <span class="keyword">new</span> BMapGL.Map(<span class="string">"container"</span>);          <span class="comment">// 创建地图实例 </span></span><br><span class="line"><span class="keyword">var</span> point = <span class="keyword">new</span> BMapGL.Point(<span class="number">116.404</span>, <span class="number">39.915</span>);  <span class="comment">// 创建点坐标 </span></span><br><span class="line">map.centerAndZoom(point, <span class="number">15</span>);                 <span class="comment">// 初始化地图，设置中心点坐标和地图级别</span></span><br></pre></td></tr></table></figure><h3 id="滚轮"><a href="#滚轮" class="headerlink" title="滚轮"></a>滚轮</h3><p>地图的鼠标滚轮缩放默认是关闭的，需要配置开启。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">map.enableScrollWheelZoom(<span class="literal">true</span>);     <span class="comment">//开启鼠标滚轮缩放</span></span><br></pre></td></tr></table></figure><h3 id="旋转与倾斜"><a href="#旋转与倾斜" class="headerlink" title="旋转与倾斜"></a>旋转与倾斜</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">map.setHeading(<span class="number">64.5</span>);   <span class="comment">//设置地图旋转角度</span></span><br><span class="line">map.setTilt(<span class="number">73</span>);       <span class="comment">//设置地图的倾斜角度</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> GIS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Amap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高德地图的创建</title>
      <link href="/2020/08/09/gis-bmap/"/>
      <url>/2020/08/09/gis-bmap/</url>
      
        <content type="html"><![CDATA[<h2 id="准备key"><a href="#准备key" class="headerlink" title="准备key"></a>准备key</h2><p>虽说有的功能不用key也能实现，但是还是建议先申请一个属于自己的key，以供后面的开发。<br><a href="https://lbs.amap.com/api/javascript-api/guide/abc/prepare" target="_blank" rel="noopener"><strong><em>查看文档</em></strong></a><br><a href="https://lbs.amap.com/dev/id/choose" target="_blank" rel="noopener"><strong><em>注册开发者账号</em></strong></a></p><h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><h3 id="引入插件"><a href="#引入插件" class="headerlink" title="引入插件"></a>引入插件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"https://webapi.amap.com/maps?v=1.4.15&amp;key=您申请的key值"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> map = <span class="keyword">new</span> AMap.Map(<span class="string">'container'</span>, &#123;</span><br><span class="line">    zoom:<span class="number">11</span>,<span class="comment">//级别</span></span><br><span class="line">    center: [<span class="number">116.397428</span>, <span class="number">39.90923</span>],<span class="comment">//中心点坐标</span></span><br><span class="line">    viewMode:<span class="string">'3D'</span><span class="comment">//使用3D视图</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="地图的类和方法"><a href="#地图的类和方法" class="headerlink" title="地图的类和方法"></a>地图的类和方法</h2><p><a href="https://lbs.amap.com/api/javascript-api/reference/map" target="_blank" rel="noopener"><strong><em>查看文档</em></strong></a></p>]]></content>
      
      
      <categories>
          
          <category> GIS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3D场景的初始化</title>
      <link href="/2020/08/08/visual-three/"/>
      <url>/2020/08/08/visual-three/</url>
      
        <content type="html"><![CDATA[<h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> scene = <span class="keyword">new</span> THREE.Scene();</span><br></pre></td></tr></table></figure><h2 id="相机"><a href="#相机" class="headerlink" title="相机"></a>相机</h2><p>在Threejs中相机的表示是THREE.Camera，它是相机的抽象基类，其子类有两种相机，分别是正投影相机THREE.OrthographicCamera和透视投影相机THREE.PerspectiveCamera。</p><a id="more"></a><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> camera = <span class="keyword">new</span> THREE.PerspectiveCamera( <span class="number">75</span>, width / height, <span class="number">0.1</span>, <span class="number">1000</span> );</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">width:画布宽</span><br><span class="line">height:画布高</span><br></pre></td></tr></table></figure><p>第一个参数是视野角度（FOV）。视野角度就是无论在什么时候，你所能在显示器上看到的场景的范围，它的值是角度单位。</p><p>第二个参数是长宽比（aspect ratio）。 也就是你用一个物体的宽除以它的高的值。比如说，当你在一个宽屏电视上播放老电影时，可以看到图像仿佛是被压扁的。</p><p>接下来的两个参数是近截面（near）和远截面（far）。 当物体某些部分比摄像机的远截面远或者比近截面近的时候，该这些部分将不会被渲染到场景中。或许现在你不用担心这个值的影响，但未来为了获得更好的渲染性能，你将可以在你的应用程序里去设置它。</p><h2 id="渲染器"><a href="#渲染器" class="headerlink" title="渲染器"></a>渲染器</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> renderer = <span class="keyword">new</span> THREE.WebGLRenderer();</span><br><span class="line">或</span><br><span class="line"><span class="keyword">var</span> renderer = <span class="keyword">new</span> THREE.WebGLRenderer(&#123;</span><br><span class="line">    antialias: <span class="literal">true</span>, <span class="comment">//表示是否开启反锯齿</span></span><br><span class="line">    alpha: <span class="literal">true</span>, <span class="comment">//表示是否可以设置背景色透明</span></span><br><span class="line">    precision: <span class="string">'highp'</span>, <span class="comment">// highp|mediump|lowp 表示着色精度选择</span></span><br><span class="line">    premultipliedAlpha: <span class="literal">false</span>, <span class="comment">//表示是否可以设置像素深度（用来度量图像的分辨率）</span></span><br><span class="line">    preserveDrawingBuffer: <span class="literal">true</span>, <span class="comment">//表示是否保存绘图缓冲</span></span><br><span class="line">    maxLights: <span class="number">3</span>, <span class="comment">//最大灯光数</span></span><br><span class="line">    stencil: <span class="literal">false</span> <span class="comment">//表示是否使用模板字体或图案</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="指定渲染器的高宽"><a href="#指定渲染器的高宽" class="headerlink" title="指定渲染器的高宽"></a>指定渲染器的高宽</h2><p>和画布框大小一致</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">renderer.setSize( width, height );</span><br></pre></td></tr></table></figure><h2 id="把场景canvas添加到dom元素中"><a href="#把场景canvas添加到dom元素中" class="headerlink" title="把场景canvas添加到dom元素中"></a>把场景canvas添加到dom元素中</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.querySelector(获取dom标签).appendChild(renderer.domElement);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> three.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络协议及传输</title>
      <link href="/2020/08/07/front-end-wangluo/"/>
      <url>/2020/08/07/front-end-wangluo/</url>
      
        <content type="html"><![CDATA[<p>TCP/IP 是个协议组，可分为四个层次：网络接口层、网络层、传输层和应用层。</p><p>在网络层，有 IP 协议、ICMP 协议、ARP 协议、RARP 协议等。<br>在传输层，有 TCP 协议与 UDP 协议。<br>在应用层，有 WebSocket、FTP、HTTP、TELNET、SMTP、DNS 等协议。<br>而 HTTPS 可以理解为更安全的 HTTP 协议。</p><p>因此，TCP、UDP、HTTP、HTTPS 都是通信协议，只不过它们所在的层级不同，负责的工作也不同，并且 HTTP 是基于 TCP 实现的。</p><a id="more"></a><h2 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h2><p>UDP 协议是面向无连接的，只是数据报文的搬运工，不保证有序且不丢失的传递到对端，不需要和 TCP 一样在发送数据前进行三次握手建立连接的，并且UDP 协议也没有任何控制流量的算法。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在发送端，应用层将数据传递给传输层的 UDP 协议，UDP 只会给数据增加一个 UDP 头标识下是 UDP 协议，然后就传递给网络层了</span><br><span class="line">在接收端，网络层将数据传递给传输层，UDP 只去除 IP 报文头就传递给应用层，不会任何拼接操作</span><br></pre></td></tr></table></figure><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">面向无连接</span><br><span class="line">不可靠性</span><br><span class="line">高效</span><br></pre></td></tr></table></figure><h3 id="头部包含数据"><a href="#头部包含数据" class="headerlink" title="头部包含数据"></a>头部包含数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">两个十六位的端口号，分别为源端口（可选字段）和目标端口</span><br><span class="line">整个数据报文的长度</span><br><span class="line">整个数据报文的检验和（IPv4 可选 字段），该字段用于发现头部信息和数据中的错误</span><br></pre></td></tr></table></figure><h3 id="传输方式"><a href="#传输方式" class="headerlink" title="传输方式"></a>传输方式</h3><p>UDP 不止支持一对一的传输方式，同样支持一对多，多对多，多对一的方式，也就是说 UDP 提供了单播，多播，广播的功能。</p><h2 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h2><p>TCP 基本是和 UDP 反着来，建立连接断开连接都需要先需要进行握手。在传输数据的过程中，通过各种算法保证数据的可靠性，当然带来的问题就是相比 UDP 来说不那么的高效</p><h3 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">面向连接，每次连接都需要三次握手，结束会有四次挥手</span><br><span class="line">保证数据传输的有序，完整，可靠</span><br><span class="line">有拥塞控制，根据网络状况，改变发送的速度</span><br><span class="line">面向字节流</span><br></pre></td></tr></table></figure><h3 id="建立连接三次握手"><a href="#建立连接三次握手" class="headerlink" title="建立连接三次握手"></a>建立连接三次握手</h3><p>第一次握手：建立连接时，客户端发送 SYN 包(syn=i)到服务器，并进入 SYN_SEND 状态，等待服务器确认。</p><p>第二次握手：服务器收到客户端发来的 SYN 包，必须对客户端进行确认 ACK (ack=i+1)，同时服务器也发送一个 SYN 包(syn=j)到客户端，即服务器会发送 SYN+ACK 包，此时服务器进入 SYN_RECV 状态。</p><p>第三次握手：客户端收到服务器发送的 SYN+ACK 包，向服务器发送确认包 ACK(ack=j+1)，此包发送完毕，客户端和服务器进入 ESTABLISHED 状态，完成三次握手。</p><p>“三次握手”的原因：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">初始化 Seq，TCP 通信是有序的，通信双方要通知对方自己的 Seq 值</span><br><span class="line"></span><br><span class="line">防止出现失效的连接请求报文段被服务端接收的情况，从而产生错误</span><br></pre></td></tr></table></figure><h3 id="断开链接四次握手"><a href="#断开链接四次握手" class="headerlink" title="断开链接四次握手"></a>断开链接四次握手</h3><p>TCP 是全双工的，在断开连接时两端都需要发送 FIN 和 ACK。</p><p>第一次握手：若客户端 A 认为数据发送完成，则它需要向服务端 B 发送连接释放请求。</p><p>第二次握手：B 收到连接释放请求后，会告诉应用层要释放 TCP 链接。然后会发送 ACK 包，并进入 CLOSE_WAIT 状态，此时表明 A 到 B 的连接已经释放，不再接收 A 发的数据了。但是因为 TCP 连接是双向的，所以 B 仍旧可以发送数据给 A。</p><p>第三次握手：B 如果此时还有没发完的数据会继续发送，完毕后会向 A 发送连接释放请求，然后 B 便进入 LAST-ACK 状态。<br>PS：通过延迟确认的技术（通常有时间限制，否则对方会误认为需要重传），可以将第二次和第三次握手合并，延迟 ACK 包的发送。</p><p>第四次握手：A 收到释放请求后，向 B 发送确认应答，此时 A 进入 TIME-WAIT 状态。该状态会持续 2MSL（最大段生存期，指报文段在网络中生存的时间，超时会被抛弃） 时间，若该时间段内没有 B 的重发请求的话，就进入 CLOSED 状态。当 B 收到确认应答后，也便进入 CLOSED 状态。</p><p>为什么 A 要进入 TIME-WAIT 状态，等待 2MSL 时间后才进入 CLOSED 状态？<br>为了保证 B 能收到 A 的确认应答。若 A 发完确认应答后直接进入 CLOSED 状态，如果确认应答因为网络问题一直没有到达，那么会造成 B 不能正常关闭。</p><h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><p>HTTP 全称是 HyperText Transfer Protocal，即：超文本传输协议。HTTP 是应用层协议，当你上网浏览网页的时候，浏览器和 Web 服务器之间就会通过 HTTP 在 Internet 上进行数据的发送和接收。HTTP 是一个基于请求/响应模式的、无状态的协议，即我们通常所说的 Request/Response。</p><h3 id="常见的请求方法"><a href="#常见的请求方法" class="headerlink" title="常见的请求方法"></a>常见的请求方法</h3><p>GET：获取资源，当前网络请求中，绝大部分使用的是 GET 方法。</p><p>POST：传输实体主体，POST 主要用来传输数据，而 GET 主要用来获取资源。</p><p>PUT：上传文件，由于自身不带验证机制，任何人都可以上传文件，因此存在安全性问题，一般不使用该方法。</p><p>DELETE：删除文件，与 PUT 功能相反，并且同样不带验证机制。</p><p>HEAD：获取报文首部，和 GET 方法类似，但是不返回报文实体主体部分。主要用于确认 URL 的有效性以及资源更新的日期时间等。</p><h2 id="HTTPS"><a href="#HTTPS" class="headerlink" title="HTTPS"></a>HTTPS</h2><p>HTTPS 在传输数据之前需要客户端（浏览器）与服务端（网站）之间进行一次握手，在握手过程中将确立双方加密传输数据的密码信息。TLS/SSL 协议不仅仅是一套加密传输的协议，更是一件经过艺术家精心设计的艺术品，TLS/SSL 中使用了非对称加密、对称加密以及 HASH 算法。</p><h2 id="HTTPS协议和HTTP协议的区别"><a href="#HTTPS协议和HTTP协议的区别" class="headerlink" title="HTTPS协议和HTTP协议的区别"></a>HTTPS协议和HTTP协议的区别</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">HTTPS 协议需要到 ca 申请证书，一般免费证书很少，需要交费。</span><br><span class="line">HTTP 是超文本传输协议，信息是明文传输，HTTPS 则是具有安全性的 SSL 加密传输协议。</span><br><span class="line">HTTP和HTTPS使用的是完全不同的连接方式用的端口也不一样，前者是 80，后者是 443。</span><br><span class="line">HTTP 的连接很简单，是无状态的 。</span><br><span class="line">HTTPS 协议是由 SSL+HTTP 协议构建的可进行加密传输、身份认证的网络协议，要比 HTTP 协议安全。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>你可能会用到的linux命令</title>
      <link href="/2020/08/06/other-cmd-linux/"/>
      <url>/2020/08/06/other-cmd-linux/</url>
      
        <content type="html"><![CDATA[<h2 id="本地上传文件到服务器"><a href="#本地上传文件到服务器" class="headerlink" title="本地上传文件到服务器"></a>本地上传文件到服务器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rz</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rm -rf *</span><br><span class="line">删除当前目录下的所有文件</span><br><span class="line">一般情况下用不到这个命令,而且这个命令很危险，如果一旦执行,会删除当前目录下所有的文件,而且不能够恢复</span><br><span class="line"></span><br><span class="line">rm -rf 文件名</span><br><span class="line">删除当前文件</span><br></pre></td></tr></table></figure><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip xxx.zip</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 常用命令 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Git 常用命令</title>
      <link href="/2020/08/06/other-cmd-git/"/>
      <url>/2020/08/06/other-cmd-git/</url>
      
        <content type="html"><![CDATA[<p>Git是目前世界上最先进的分布式版本控制系统（没有之一）。<a href="https://www.liaoxuefeng.com/wiki/896043488029600/896067008724000" target="_blank" rel="noopener"><strong><em>查看资料</em></strong></a></p><h2 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">克隆仓库：git <span class="built_in">clone</span> git仓库地址</span><br><span class="line">提交所有修改至缓存区：git add .</span><br><span class="line">从缓存区提交到HEAD：git commit -m <span class="string">"一些说明"</span></span><br><span class="line">查看缓存区状态：git status</span><br><span class="line">提交：git push</span><br><span class="line">拉取：git pull</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">修改全局名称：git config --global user.name <span class="string">"cm"</span></span><br><span class="line">修改全局邮箱：git config --global user.email <span class="string">"@example.com"</span></span><br><span class="line"></span><br><span class="line">查看提交日志：git <span class="built_in">log</span>（版本回退之后，这里的提交日志也会减少），精简版内容：git <span class="built_in">log</span> --pretty=online,带分支合并图内容--graph</span><br><span class="line">显示最后一次提交：git <span class="built_in">log</span> -1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 常用命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于css3的那些事</title>
      <link href="/2020/08/05/front-end-css-texing/"/>
      <url>/2020/08/05/front-end-css-texing/</url>
      
        <content type="html"><![CDATA[<h2 id="CSS盒模型"><a href="#CSS盒模型" class="headerlink" title="CSS盒模型"></a>CSS盒模型</h2><p>盒模型分为IE盒模型和W3C标准盒模型。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">标准盒模型：宽度=内容的宽度（content）+ border + padding + margin</span><br></pre></td></tr></table></figure><p>属性width,height只包含内容content，不包含border和padding。</p><p>width = 内容的宽度<br>height = 内容的高度</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">低版本IE盒模型：宽度=内容宽度（content+border+padding）+ margin</span><br></pre></td></tr></table></figure><p>属性width,height包含border和padding，指的是content+padding+border。</p><p>width = border + padding + 内容的宽度<br>height = border + padding + 内容的高度</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用box-sizing属性可以改变盒模型：content-box（标准盒模型）和border-box（IE盒模型）</span><br></pre></td></tr></table></figure><h2 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h2><p>id选择器(#id)、类选择器(.class)、标签选择器(div, h1, p)、相邻选择器(h1 + p)、子选择器（ul &gt; li）、后代选择器（li a）、通配符选择器（*）、属性选择器（[“data-param”=zidingyi]）、伪类选择器（a:hover, li:nth-child）</p><h3 id="优先级（就近原则"><a href="#优先级（就近原则" class="headerlink" title="优先级（就近原则)"></a>优先级（就近原则)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">!important &gt; [ id &gt; class &gt; tag &gt; ... &gt; *]</span><br><span class="line">!important 比内联优先级高</span><br></pre></td></tr></table></figure><p>CSS优先级算法如何计算？</p><p>第一等级：代表内联样式，如style=“”，权值为1000<br>第二等级：代表ID选择器，如#content，权值为100<br>第三等级：代表类，伪类和属性选择器，如.content，权值为10<br>第四等级：代表标签选择器和伪元素选择器，如div p，权值为1<br>注意：通用选择器（*），子选择器（&gt;），和相邻同胞选择器（+）并不在这个等级中， 所以他们的权值为0</p><h2 id="display有哪些值？"><a href="#display有哪些值？" class="headerlink" title="display有哪些值？"></a>display有哪些值？</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">inline（默认）–内联</span><br><span class="line">none–隐藏</span><br><span class="line">block–块显示</span><br><span class="line">table–表格显示</span><br><span class="line">list-item–项目列表</span><br><span class="line">inline-block 行块特性</span><br></pre></td></tr></table></figure><h2 id="position的值？"><a href="#position的值？" class="headerlink" title="position的值？"></a>position的值？</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">static（默认）：按照正常文档流进行排列</span><br><span class="line">relative（相对定位）：不脱离文档流，参考自身静态位置通过 top, bottom, left, right 定位</span><br><span class="line">absolute(绝对定位)：参考距其最近一个不为static的父级元素通过top, bottom, left, right 定位</span><br><span class="line">fixed(固定定位)：所固定的参照对像是可视窗口</span><br></pre></td></tr></table></figure><h2 id="CSS3的flexbox（弹性盒布局模型）"><a href="#CSS3的flexbox（弹性盒布局模型）" class="headerlink" title="CSS3的flexbox（弹性盒布局模型）"></a>CSS3的flexbox（弹性盒布局模型）</h2><p>flex 是 Flexible Box 的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。 任何一个容器都可以指定为 Flex 布局。块级元素只需要display属性为flex即可。行内元素也可以使用 Flex 布局。.box{ display: inline-flex; }。Webkit 内核的浏览器，必须加上-webkit前缀。</p><h3 id="容器属性"><a href="#容器属性" class="headerlink" title="容器属性"></a>容器属性</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">flex-direction属性决定主轴的方向（即项目的排列方向）。</span><br><span class="line">flex-wrap属性定义，如果一条轴线排不下，如何换行。默认情况下，项目都排在一条线（又称”轴线”）上。</span><br><span class="line">flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap</span><br><span class="line">justify-content属性定义了项目在主轴上的对齐方式。</span><br><span class="line">align-items属性定义项目在交叉轴上如何对齐。</span><br><span class="line">align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用</span><br></pre></td></tr></table></figure><h3 id="项目属性"><a href="#项目属性" class="headerlink" title="项目属性"></a>项目属性</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。</span><br><span class="line">flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。</span><br><span class="line">flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小</span><br><span class="line">flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。</span><br><span class="line">flex属性是以上三个的简写，默认值为0 1 auto。后两个属性可选。该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。</span><br><span class="line">align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch</span><br></pre></td></tr></table></figure><h2 id="CSS优化"><a href="#CSS优化" class="headerlink" title="CSS优化"></a>CSS优化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">避免过度约束</span><br><span class="line"></span><br><span class="line">避免后代选择符</span><br><span class="line"></span><br><span class="line">避免链式选择符</span><br><span class="line"></span><br><span class="line">使用紧凑的语法</span><br><span class="line"></span><br><span class="line">避免不必要的命名空间</span><br><span class="line"></span><br><span class="line">避免不必要的重复</span><br><span class="line"></span><br><span class="line">最好使用表示语义的名字。一个好的类名应该是描述他是什么而不是像什么</span><br><span class="line"></span><br><span class="line">避免！important，可以选择其他选择器</span><br></pre></td></tr></table></figure><h2 id="元素竖向的百分比设定是相对于容器的高度吗？"><a href="#元素竖向的百分比设定是相对于容器的高度吗？" class="headerlink" title="元素竖向的百分比设定是相对于容器的高度吗？"></a>元素竖向的百分比设定是相对于容器的高度吗？</h2><p>当按百分比设定一个元素的宽度时，它是相对于父容器的宽度计算的，但是，对于一些表示<strong><em>竖向距离</em></strong>的属性，例如 padding-top , padding-bottom , margin-top , margin-bottom 等，当按百分比设定它们时，依据的也是父容器的宽度，而不是高度。</p>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无限长列表的优化</title>
      <link href="/2020/08/05/performance-optimizing-list/"/>
      <url>/2020/08/05/performance-optimizing-list/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 性能优化 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>创建 vue + TypeScript 项目</title>
      <link href="/2020/08/05/front-end-vue-ts/"/>
      <url>/2020/08/05/front-end-vue-ts/</url>
      
        <content type="html"><![CDATA[<p>使用vue-cli的3.0创建 vue + TypeScript 项目。<a href="https://cli.vuejs.org/guide/creating-a-project.html" target="_blank" rel="noopener"><strong><em>查看资料</em></strong></a></p><h2 id="卸载vue-cli的2-0-版本"><a href="#卸载vue-cli的2-0-版本" class="headerlink" title="卸载vue-cli的2.0+版本"></a>卸载vue-cli的2.0+版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall vue-cli -g</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="vue-cli的3-0-安装"><a href="#vue-cli的3-0-安装" class="headerlink" title="vue-cli的3.0+安装"></a>vue-cli的3.0+安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install @vue/cli -g</span><br><span class="line">或</span><br><span class="line">cnpm install @vue/cli -g</span><br></pre></td></tr></table></figure><p>mac环境下可能有权限限制，需要加sudo。</p><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue create 项目</span><br></pre></td></tr></table></figure><p>创建项目时可能会失败，只有一个packjson文件，报错会有以下情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm ERR! Your cache folder contains root-owned files, due to a bug <span class="keyword">in</span></span><br><span class="line">npm ERR! previous versions of npm <span class="built_in">which</span> has since been addressed.</span><br><span class="line"></span><br><span class="line">npm ERR! To permanently fix this problem, please run:</span><br><span class="line">npm ERR!   sudo chown -R 501:20 <span class="string">"/Users/slifree/.npm"</span></span><br><span class="line"></span><br><span class="line">ERROR  <span class="built_in">command</span> failed: npm install --loglevel error</span><br><span class="line">等等</span><br></pre></td></tr></table></figure><p>还有执行到以下就会停止的情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; fsevents@1.2.13 install /Users/slifree/Desktop/my-project/vue-ts/node_modules/webpack-dev-server/node_modules/fsevents</span><br><span class="line">&gt; node install.js</span><br></pre></td></tr></table></figure><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>尝试清除npm缓存，然后删除文件，再重新创建。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm cache clean --force</span><br></pre></td></tr></table></figure><h3 id="创建选择"><a href="#创建选择" class="headerlink" title="创建选择"></a>创建选择</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Vue CLI v4<span class="number">.5</span><span class="number">.4</span></span><br><span class="line">? Please pick a preset: (Use arrow keys)</span><br><span class="line">❯ Default ([Vue <span class="number">2</span>] babel, eslint) </span><br><span class="line">  Default (Vue <span class="number">3</span> Preview) ([Vue <span class="number">3</span>] babel, eslint) </span><br><span class="line">  Manually select features</span><br></pre></td></tr></table></figure><p>您可以选择Babel + ESLint基本设置随附的默认预设，也可以选择“手动选择功能”以选择所需的功能，如果使用ts，则需要选择“手动选择功能”。</p><h3 id="手动选择"><a href="#手动选择" class="headerlink" title="手动选择"></a>手动选择</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Vue CLI v4<span class="number">.5</span><span class="number">.4</span></span><br><span class="line">? Please pick a preset: Manually select features</span><br><span class="line">? Check the features needed <span class="keyword">for</span> your project: </span><br><span class="line"> ◉ Choose Vue version</span><br><span class="line"> ◉ Babel</span><br><span class="line"> ◉ TypeScript</span><br><span class="line"> ◯ Progressive Web App (PWA) Support</span><br><span class="line"> ◉ Router</span><br><span class="line"> ◉ Vuex</span><br><span class="line">❯◉ CSS Pre-processors</span><br><span class="line"> ◉ Linter / Formatter</span><br><span class="line"> ◯ Unit Testing</span><br><span class="line"> ◯ E2E Testing</span><br></pre></td></tr></table></figure><p> 在这里，键盘上下键代表选择，空格键代表选中或取消，回车键代表确定。</p>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue.js </tag>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>http请求</title>
      <link href="/2020/08/05/front-end-http/"/>
      <url>/2020/08/05/front-end-http/</url>
      
        <content type="html"><![CDATA[<h2 id="HTTP状态码"><a href="#HTTP状态码" class="headerlink" title="HTTP状态码"></a>HTTP状态码</h2><p>当浏览者访问一个网页时，浏览者的浏览器会向网页所在服务器发出请求。当浏览器接收并显示网页前，此网页所在的服务器会返回一个包含HTTP状态码的信息头（server header）用以响应浏览器的请求。<a href="https://www.runoob.com/markdown/md-table.html" target="_blank" rel="noopener"><strong><em>查看资料</em></strong></a></p><h3 id="常见的HTTP状态码"><a href="#常见的HTTP状态码" class="headerlink" title="常见的HTTP状态码"></a>常见的HTTP状态码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">200 - 请求成功</span><br><span class="line">301 - 资源（网页等）被永久转移到其它URL</span><br><span class="line">404 - 请求的资源（网页等）不存在</span><br><span class="line">500 - 内部服务器错误</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="HTTP状态码分类"><a href="#HTTP状态码分类" class="headerlink" title="HTTP状态码分类"></a>HTTP状态码分类</h3><p>HTTP状态码由三个十进制数字组成，第一个十进制数字定义了状态码的类型，后两个数字没有分类的作用。HTTP状态码共分为5种类型：</p><table><thead><tr><th align="center">分类</th><th align="center">分类描述</th></tr></thead><tbody><tr><td align="center">1**</td><td align="center">信息，服务器收到请求，需要请求者继续执行操作</td></tr><tr><td align="center">2**</td><td align="center">成功，操作被成功接收并处理</td></tr><tr><td align="center">3**</td><td align="center">重定向，需要进一步的操作以完成请求</td></tr><tr><td align="center">4**</td><td align="center">客户端错误，请求包含语法错误或无法完成请求</td></tr><tr><td align="center">5**</td><td align="center">服务器错误，服务器在处理请求的过程中发生了错误</td></tr></tbody></table><h2 id="XMLHttpRequest"><a href="#XMLHttpRequest" class="headerlink" title="XMLHttpRequest"></a>XMLHttpRequest</h2><p>它是一个内建的浏览器对象（类似与 window、history location 等）。在不刷新页面的情况下用于发送http请求。 XMLHttpRequest是一个构造函数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">xhr.open(<span class="string">'GET'</span>, <span class="string">'request url'</span>);</span><br><span class="line">xhr.send();</span><br><span class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">　　　　<span class="keyword">if</span> ( xhr.readyState == <span class="number">4</span> &amp;&amp; xhr.status == <span class="number">200</span> ) &#123;</span><br><span class="line">　　　　　　alert( xhr.responseText );</span><br><span class="line">　　　　&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">　　　　　　alert( xhr.statusText );</span><br><span class="line">　　　　&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">xhr.readyState：XMLHttpRequest对象的状态，等于4表示数据已经接收完毕。</span><br><span class="line">xhr.status：服务器返回的状态码，等于200表示一切正常。</span><br><span class="line">xhr.responseText：服务器返回的文本数据</span><br><span class="line">xhr.responseXML：服务器返回的XML格式的数据</span><br><span class="line">xhr.statusText：服务器返回的状态文本。</span><br></pre></td></tr></table></figure><h2 id="http中get和post的区别"><a href="#http中get和post的区别" class="headerlink" title="http中get和post的区别"></a>http中get和post的区别</h2><h3 id="相同点"><a href="#相同点" class="headerlink" title="相同点"></a>相同点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">从本质上讲，get和post都是http请求，都是tcp连接，是无区别的。</span><br></pre></td></tr></table></figure><h3 id="不同点"><a href="#不同点" class="headerlink" title="不同点"></a>不同点</h3><h4 id="参数的位置"><a href="#参数的位置" class="headerlink" title="参数的位置"></a>参数的位置</h4><p>get请求的参数位于url中，而post请求的参数位于request body中。<br>这导致了三个问题：<br>一是get请求的安全性不如post请求；<br>二是get的参数有长度限制，而post没有；<br>三是get的参数只允许ASCII字符，post没有限制。</p><h4 id="回退"><a href="#回退" class="headerlink" title="回退"></a>回退</h4><p>点击回退或刷新时，post请求会再次提交表单，而get请求不会。</p><h4 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h4><p>get能被缓存，可以收藏为书签，参数保留在浏览器历史中；<br>post不能被缓存，不可收藏为书签，参数不会保留在浏览器历史中。</p><h4 id="请求包"><a href="#请求包" class="headerlink" title="请求包"></a>请求包</h4><p>get请求只发送一个tcp数据包，即http header和data共同发送给web服务器，服务器响应200 OK.<br>post请求发送两个tcp数据包，第一次发送http header，如果web服务器予以响应100 continue，则发送第二个数据包data，服务器响应200 OK.</p><h4 id="对比列表"><a href="#对比列表" class="headerlink" title="对比列表"></a>对比列表</h4><table><thead><tr><th align="center"></th><th align="center">get</th><th align="center">post</th></tr></thead><tbody><tr><td align="center">参数位置</td><td align="center">url</td><td align="center">request body</td></tr><tr><td align="center">参数长度</td><td align="center">有限制</td><td align="center">无限制</td></tr><tr><td align="center">参数编码</td><td align="center">ASCII编码</td><td align="center">无限制</td></tr><tr><td align="center">后退/刷新</td><td align="center">不重复提交，回退无害</td><td align="center">重复提交，回退有害</td></tr><tr><td align="center">安全性</td><td align="center">参数暴露，不安全</td><td align="center">安全</td></tr><tr><td align="center">缓存</td><td align="center">可以缓存</td><td align="center">不可以缓存</td></tr><tr><td align="center">书签</td><td align="center">可以收藏为书签</td><td align="center">不可收藏为书签</td></tr><tr><td align="center">历史</td><td align="center">参数保留在浏览器历史</td><td align="center">不保留在浏览器历史</td></tr><tr><td align="center">请求包个数</td><td align="center">1个 http header+data</td><td align="center">两个 先http header，再data</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue2.0+脚手架安装</title>
      <link href="/2020/08/03/front-end-vue-anzhuang/"/>
      <url>/2020/08/03/front-end-vue-anzhuang/</url>
      
        <content type="html"><![CDATA[<h2 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p>出现版本号则安装成功。</p><a id="more"></a><h2 id="安装淘宝镜像"><a href="#安装淘宝镜像" class="headerlink" title="安装淘宝镜像"></a>安装淘宝镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>推荐使用，安装插件速度快。</p><h2 id="安装vue-cli脚手架构建工具"><a href="#安装vue-cli脚手架构建工具" class="headerlink" title="安装vue-cli脚手架构建工具"></a>安装vue-cli脚手架构建工具</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-cli -g</span><br><span class="line">或</span><br><span class="line">cnpm install vue-cli -g</span><br></pre></td></tr></table></figure><h2 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack 项目名</span><br></pre></td></tr></table></figure><p>需要注意的是项目的名称不能大写，不然会报错。</p><h3 id="进入项目文件夹"><a href="#进入项目文件夹" class="headerlink" title="进入项目文件夹"></a>进入项目文件夹</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> 项目名</span><br></pre></td></tr></table></figure><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">或</span><br><span class="line">cnpm install</span><br></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm start</span><br><span class="line">或</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><h2 id="vuex的安装"><a href="#vuex的安装" class="headerlink" title="vuex的安装"></a>vuex的安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install vuex --save</span><br><span class="line">或</span><br><span class="line">cnpm install vuex --save</span><br></pre></td></tr></table></figure><p>当然根据项目需求和个人爱好，你也可以直接引入：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/path/to/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/path/to/vuex.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>也可以用yarn安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add vuex</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>是否使用noImplicitAny?</title>
      <link href="/2020/08/03/front-end-ts-error/"/>
      <url>/2020/08/03/front-end-ts-error/</url>
      
        <content type="html"><![CDATA[<p>noImplicitAny编译器选项所做的，基本上是将TypeScript从可选类型语言转换为强制类型检验语言。</p><h2 id="你可能经常遇到的报错"><a href="#你可能经常遇到的报错" class="headerlink" title="你可能经常遇到的报错"></a>你可能经常遇到的报错</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> index=arr.findIndex(<span class="function"><span class="params">e</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> e[<span class="keyword">this</span>.id]==id</span><br><span class="line">&#125;)</span><br><span class="line">提示错误：Parameter <span class="string">'e'</span> implicitly has an <span class="string">'any'</span> type.</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj:<span class="built_in">Object</span>=&#123;</span><br><span class="line">    content:conent</span><br><span class="line">&#125;</span><br><span class="line">obj[<span class="keyword">this</span>.id]=id</span><br><span class="line"></span><br><span class="line">提示报错：Element implicitly has an <span class="string">'any'</span> type because expression <span class="keyword">of</span> type <span class="string">'string'</span> can<span class="string">'t be used to index type '</span><span class="built_in">Object</span><span class="string">'.</span></span><br><span class="line"><span class="string"> No index signature with a parameter of type '</span>string<span class="string">' was found on type '</span><span class="built_in">Object</span><span class="string">'.</span></span><br></pre></td></tr></table></figure><p>这些报错代表：如果你要把现有的js代码库迁移到TS，那除了更改文件扩展名，你需要更多地关注类型，如果不指定类型，编译器就总是会提示报错。<br>解决方案：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"noImplicitAny"</span>: <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>这样子到底是好是坏是有很大争议的，社区在这个问题上似乎存在分歧。下面是一些业界领先的TypeScript项目，以及它们是否使用了noImplicitAny编译器标志:</p><table><thead><tr><th align="center">name</th><th align="center">noImplicitAny</th></tr></thead><tbody><tr><td align="center">Angular</td><td align="center">true</td></tr><tr><td align="center">Rxjs</td><td align="center">true</td></tr><tr><td align="center">VSCode</td><td align="center">false</td></tr><tr><td align="center">Babylon.js</td><td align="center">false</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ts的基础及基本使用</title>
      <link href="/2020/08/02/front-end-ts-base/"/>
      <url>/2020/08/02/front-end-ts-base/</url>
      
        <content type="html"><![CDATA[<p>TypeScript是一种由微软开发的自由和开源的编程语言。它是JavaScript的一个超集，而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程。<a href="https://www.tslang.cn/docs/home.html" target="_blank" rel="noopener"><strong><em>查看文档</em></strong></a></p><h2 id="基于vscode的使用"><a href="#基于vscode的使用" class="headerlink" title="基于vscode的使用"></a>基于vscode的使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">安装ts npm install -g typescript</span><br><span class="line">tsc --init</span><br><span class="line">修改 tsconfig.json 文件  <span class="string">"outDir"</span>: <span class="string">"./js"</span>,</span><br><span class="line">run task</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="ts的数据类型"><a href="#ts的数据类型" class="headerlink" title="ts的数据类型"></a>ts的数据类型</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">字符串类型</span><br><span class="line"><span class="keyword">let</span> tName:string=<span class="string">'ts'</span></span><br><span class="line"></span><br><span class="line">数值类型</span><br><span class="line"><span class="keyword">let</span> tAge:number=<span class="number">2020</span></span><br><span class="line"></span><br><span class="line">布尔值类型</span><br><span class="line"><span class="keyword">let</span> isRain:boolean=<span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="literal">undefined</span> 和 <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">数组类型 元素类型固定</span><br><span class="line"><span class="keyword">let</span> arrName:string[]=[<span class="string">'ts'</span>,<span class="string">'tsc'</span>]</span><br><span class="line"><span class="keyword">let</span> arrAge:number[]=[<span class="number">20</span>,<span class="number">22</span>]</span><br><span class="line"><span class="keyword">let</span> arrAge2:<span class="built_in">Array</span>&lt;number&gt;=[<span class="number">20</span>,<span class="number">22</span>]</span><br><span class="line"></span><br><span class="line">元组(tuple)：数组的长度是固定的且里面的每个元素的类型可以不相同</span><br><span class="line"><span class="keyword">let</span> tup:[string,number,boolean]=[<span class="string">'ts'</span>,<span class="number">20</span>,<span class="literal">true</span>]</span><br><span class="line"></span><br><span class="line">枚举（eunm） 枚举项一般用英文和数字 枚举值用整型数字，如果不设置枚举值，则使用默认枚举值<span class="number">0</span>-&gt;n</span><br><span class="line"><span class="comment">// 创建枚举</span></span><br><span class="line">enum Gender&#123;</span><br><span class="line">    boy=<span class="number">1</span>,</span><br><span class="line">    girl=<span class="number">2</span>,</span><br><span class="line">    unknown=<span class="number">3</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 使用枚举</span></span><br><span class="line"><span class="keyword">let</span> userSex:Gender=Gender.boy</span><br><span class="line"></span><br><span class="line">任意类型（any）一般在获取dom时使用</span><br><span class="line"><span class="keyword">let</span> txtName:any=<span class="built_in">document</span>.getElementById(<span class="string">'ts'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> 代表没有类型，一般在返回值的函数</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">say1</span>(<span class="params"></span>):<span class="title">string</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'hello'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">say2</span>(<span class="params"></span>):<span class="title">void</span></span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'not value'</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">never 代表不存在的值的类型，常用作抛出异常或无限循环的 函数返回类型 ;所有类型都是never的父类</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>):<span class="title">never</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test2</span>(<span class="params"></span>):<span class="title">never</span></span>&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'this is a error'</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">联合类型 | 一个变量可能有多种类型</span><br><span class="line"><span class="keyword">let</span> more:string|number|boolean=<span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">可选参数 必须参数在前，可选参数在后</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun3</span>(<span class="params">boy:string,girl?:string</span>):<span class="title">void</span></span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`三国演义中<span class="subst">$&#123;boy&#125;</span>和<span class="subst">$&#123;girl?girl:<span class="string">'?'</span>&#125;</span>是一对情侣`</span>)</span><br><span class="line">&#125;</span><br><span class="line">fun3(<span class="string">'吕布'</span>)</span><br><span class="line">fun3(<span class="string">'周瑜'</span>,<span class="string">'小乔'</span>)</span><br><span class="line"></span><br><span class="line">默认值；剩余参数-&gt;只有一个且为放在形参列表最后的数组</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">buyGun</span>(<span class="params">name:string,count:number=<span class="number">1</span>,...restOfNum:number[]</span>):<span class="title">void</span></span>&#123;</span><br><span class="line">    <span class="keyword">let</span> total=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">of</span> restOfNum)&#123;</span><br><span class="line">        total+=i</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`买<span class="subst">$&#123;name&#125;</span>--<span class="subst">$&#123;count&#125;</span>杆,有<span class="subst">$&#123;total&#125;</span>人使用`</span>)</span><br><span class="line">&#125;</span><br><span class="line">buyGun(<span class="string">'m416'</span>)</span><br><span class="line">buyGun(<span class="string">'m416'</span>,<span class="number">10</span>)</span><br><span class="line">buyGun(<span class="string">'m416'</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">City</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 成员变量</span></span><br><span class="line">    cName:string;</span><br><span class="line">    cLevel:number;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构造函数</span></span><br><span class="line">    <span class="keyword">constructor</span>(name:string,level:number)&#123;</span><br><span class="line">        <span class="keyword">this</span>.cName=name;</span><br><span class="line">        <span class="keyword">this</span>.cLevel=level</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 成员方法</span></span><br><span class="line">    about()&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.cName&#125;</span>是<span class="subst">$&#123;<span class="keyword">this</span>.cLevel&#125;</span>线城市`</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> creatCity=<span class="keyword">new</span> City(<span class="string">'上海'</span>,<span class="number">1</span>)</span><br><span class="line">creatCity.about()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>旋转球体</title>
      <link href="/2020/07/30/demo-qiuti/"/>
      <url>/2020/07/30/demo-qiuti/</url>
      
        <content type="html"><![CDATA[<p>主要实现一个球体旋转的效果,所谓的旋转球体，就是让每条线相聚一定距离，然后旋转，在设置动画，运动起来看着就像球体旋转一样。<br>效果：<br><img src="http://a3.qpic.cn/psb?/V12txxLC164DyB/Fn3fofZGe2EtHKN4Ohc5FYdaH4Z63Wmr.j4oNMd3NCA!/b/dHwBAAAAAAAA&bo=ZwJEAgAAAAADBwE!&rf=viewer_4" alt="效果图"></p><a id="more"></a><h2 id="html代码"><a href="#html代码" class="headerlink" title="html代码"></a>html代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"eyes"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div3"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div4"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div5"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="css代码"><a href="#css代码" class="headerlink" title="css代码"></a>css代码</h2><h3 id="设置景深"><a href="#设置景深" class="headerlink" title="设置景深"></a>设置景深</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.eyes</span>&#123;</span><br><span class="line"><span class="attribute">perspective</span>: <span class="number">1200px</span>;</span><br><span class="line"><span class="attribute">perspective-origin</span>: <span class="number">50%</span> <span class="number">50%</span>;</span><br><span class="line"><span class="attribute">background-color</span>: black;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line"><span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line"><span class="attribute">-webkit-animation</span>:wei <span class="number">30s</span> infinite linear;</span><br><span class="line">//动画设置animation</span><br><span class="line"><span class="selector-tag">margin</span><span class="selector-pseudo">:100px</span> <span class="selector-tag">auto</span>;</span><br><span class="line"><span class="selector-tag">position</span>: <span class="selector-tag">relative</span>;</span><br><span class="line"><span class="selector-tag">width</span>: 600<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">height</span>: 600<span class="selector-tag">px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="中间轴线设置"><a href="#中间轴线设置" class="headerlink" title="中间轴线设置"></a>中间轴线设置</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line"><span class="attribute">content</span>: <span class="string">" "</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line"><span class="attribute">border</span>:<span class="number">1px</span> solid gold;</span><br><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(<span class="number">90deg</span>) <span class="built_in">translateX</span>(<span class="number">300PX</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="五条线的设置"><a href="#五条线的设置" class="headerlink" title="五条线的设置"></a>五条线的设置</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &gt;<span class="selector-tag">div</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line"><span class="attribute">height</span>:<span class="number">300px</span>;</span><br><span class="line"><span class="attribute">border</span>:<span class="number">2px</span> solid white;</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">top</span>: <span class="number">150px</span>;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">150px</span>;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.div1</span>&#123;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">0deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.div2</span>&#123;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">36deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.div3</span>&#123;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">72deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.div4</span>&#123;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">108deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.div5</span>&#123;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">144deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="开启动画"><a href="#开启动画" class="headerlink" title="开启动画"></a>开启动画</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@-webkit-keyframes</span> wei&#123;</span><br><span class="line"><span class="selector-tag">from</span>&#123;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(-<span class="number">30deg</span>) <span class="built_in">rotateY</span>(<span class="number">0deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">to</span>&#123;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(-<span class="number">30deg</span>) <span class="built_in">rotateY</span>(<span class="number">3600deg</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> DEMO事例 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>旋转木马</title>
      <link href="/2020/07/30/demo-muma/"/>
      <url>/2020/07/30/demo-muma/</url>
      
        <content type="html"><![CDATA[<p>多个面围绕一中心进行旋转，就像旋转木🐴一样。<br>效果：<br><img src="http://a1.qpic.cn/psb?/V12txxLC164DyB/bkzt3kPHazjftcGpIfR1FY8tTQk1hj*hcMgEmeIX.fE!/b/dHcBAAAAAAAA&bo=PARGAgAAAAADB14!&rf=viewer_4" alt="效果图"></p><a id="more"></a><h2 id="html代码"><a href="#html代码" class="headerlink" title="html代码"></a>html代码</h2><p>我这里设置了八个面，当然你也可以设置更多的面，可以让它更酷炫点。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"eyes"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"reddiv"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bluediv"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pinkdiv"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"greendiv"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"golddiv"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"purplediv"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"orangediv"</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cyandiv"</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="css代码"><a href="#css代码" class="headerlink" title="css代码"></a>css代码</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.eyes</span>&#123;</span><br><span class="line"><span class="attribute">perspective</span>: <span class="number">1200px</span>;</span><br><span class="line"><span class="attribute">perspective-origin</span>: <span class="number">50%</span> <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line"><span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">1200px</span>; </span><br><span class="line"><span class="attribute">height</span>: <span class="number">600px</span>;</span><br><span class="line"><span class="attribute">transition</span>: all <span class="number">10s</span> ease <span class="number">0.2s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">div</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">top</span>: <span class="number">200px</span>;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">450px</span>;</span><br><span class="line"><span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">color</span>: white;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">200px</span>;</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.reddiv</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>: red;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotateY</span>(-<span class="number">45deg</span>) <span class="built_in">translateZ</span>(<span class="number">380PX</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bluediv</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>: blue;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">0deg</span>) <span class="built_in">translateZ</span>(<span class="number">380PX</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.pinkdiv</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>: pink;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">45deg</span>) <span class="built_in">translateZ</span>(<span class="number">380PX</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.greendiv</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>:green;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">380PX</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.golddiv</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>: gold;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">135deg</span>) <span class="built_in">translateZ</span>(<span class="number">380PX</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.purplediv</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>: purple;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">180deg</span>) <span class="built_in">translateZ</span>(<span class="number">380PX</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.orangediv</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>: orange;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotateY</span>(-<span class="number">135deg</span>) <span class="built_in">translateZ</span>(<span class="number">380PX</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cyandiv</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>: cyan;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotateY</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">380PX</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">360deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> DEMO事例 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>meta标签</title>
      <link href="/2020/07/29/front-end-meta/"/>
      <url>/2020/07/29/front-end-meta/</url>
      
        <content type="html"><![CDATA[<h2 id="Refresh-（刷新）不推荐使用"><a href="#Refresh-（刷新）不推荐使用" class="headerlink" title="Refresh （刷新）不推荐使用"></a>Refresh （刷新）不推荐使用</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Meta</span> <span class="attr">http-equiv</span>=<span class="string">"Refresh"</span> <span class="attr">Content</span>=<span class="string">"时间（s）;url=网址"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>说明：让网页多长时间（秒）刷新自己，或在多长时间后让网页自动链接到其它网页。</p><a id="more"></a><h2 id="Expires-（期限）"><a href="#Expires-（期限）" class="headerlink" title="Expires （期限）"></a>Expires （期限）</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;&lt;Meta http-equiv="Expires" Content="Wed, 26 Feb 1997 08:21:57 GMT"&gt;</span><br></pre></td></tr></table></figure><p>说明：指定网页在缓存中的过期时间，一旦网页过期，必须到服务器上重新调阅。</p><p>注意：必须使用GMT的时间格式，或直接设为0（数字表示多少时间后过期）。</p><h2 id="Window-target-（显示窗口的设定）"><a href="#Window-target-（显示窗口的设定）" class="headerlink" title="Window-target （显示窗口的设定）"></a>Window-target （显示窗口的设定）</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Meta</span> <span class="attr">http-equiv</span>=<span class="string">"Widow-target"</span> <span class="attr">Content</span>=<span class="string">"_top"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>说明：强制页面在当前窗口以独立页面显示。</p><p>注意：这个属性是用来防止别人在框架里调用你的页面。Content选项：_blank、_top、_self、_parent</p><h2 id="meta中的name"><a href="#meta中的name" class="headerlink" title="meta中的name"></a>meta中的name</h2><h3 id="Keywords-关键字"><a href="#Keywords-关键字" class="headerlink" title="Keywords (关键字)"></a>Keywords (关键字)</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Meta</span> <span class="attr">name</span>=<span class="string">"Keywords"</span> <span class="attr">Content</span>=<span class="string">"关键词1,关键词2，关键词3,关键词4,……"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：各关键词间用英文逗号“,”隔开。META的通常用处是指定搜索引擎用来提高搜索质量的关键词。当数个META元素提供文档语言从属信息时，搜索引擎会使用lang特性来过滤并通过用户的语言优先参照来显示搜索结果。</p><h3 id="Description-简介"><a href="#Description-简介" class="headerlink" title="Description (简介)"></a>Description (简介)</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Meta</span> <span class="attr">name</span>=<span class="string">"Description"</span> <span class="attr">Content</span>=<span class="string">"你网页的简述"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>说明：Description用来告诉搜索引擎你的网站主要内容。</p><h3 id="Robots-机器人向导"><a href="#Robots-机器人向导" class="headerlink" title="Robots (机器人向导)"></a>Robots (机器人向导)</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Meta</span> <span class="attr">name</span>=<span class="string">"Robots"</span> <span class="attr">Content</span>=<span class="string">"All|None|Index|Noindex|Follow|Nofollow"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：许多搜索引擎都通过放出robot/spider搜索来登录网站，这些robot/spider就要用到meta元素的一些特性来决定怎样登录。</p><p>all：文件将被检索，且页面上的链接可以被查询；</p><p>none：文件将不被检索，且页面上的链接不可以被查询；(和 “noindex, no follow” 起相同作用)</p><p>index：文件将被检索；（让robot/spider登录）</p><p>follow：页面上的链接可以被查询；</p><p>noindex：文件将不被检索，但页面上的链接可以被查询；(不让robot/spider登录)</p><p>nofollow：文件将不被检索，页面上的链接可以被查询。(不让robot/spider顺着此页的连接往下探找)</p><h3 id="Author-作者"><a href="#Author-作者" class="headerlink" title="Author (作者)"></a>Author (作者)</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Meta</span> <span class="attr">name</span>=<span class="string">"Author"</span> <span class="attr">Content</span>=<span class="string">"张三，abc@sina.com"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：Content可以是：你或你的制作组的名字,或Email</p><h3 id="Copyright-版权"><a href="#Copyright-版权" class="headerlink" title="Copyright (版权)"></a>Copyright (版权)</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Meta</span> <span class="attr">name</span>=<span class="string">"Copyright"</span> <span class="attr">Content</span>=<span class="string">"本页版权归Zerospace所有。All Rights Reserved"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Generator-编辑器"><a href="#Generator-编辑器" class="headerlink" title="Generator (编辑器)"></a>Generator (编辑器)</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Meta</span> <span class="attr">name</span>=<span class="string">"Generator"</span> <span class="attr">Content</span>=<span class="string">"PCDATA|FrontPage|"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：Content=”你所用编辑器”</p>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS的径向渐变和线性渐变</title>
      <link href="/2020/07/29/front-end-css-jianbian/"/>
      <url>/2020/07/29/front-end-css-jianbian/</url>
      
        <content type="html"><![CDATA[<h2 id="统一的样式"><a href="#统一的样式" class="headerlink" title="统一的样式"></a>统一的样式</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">250px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">250px</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">3px</span> solid black;</span><br><span class="line"><span class="attribute">color</span>: white;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">250px</span>;</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">25px</span>;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="线性渐变"><a href="#线性渐变" class="headerlink" title="线性渐变"></a>线性渐变</h2><h3 id="从上而下"><a href="#从上而下" class="headerlink" title="从上而下"></a>从上而下</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(1)</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">-webkit-linear-gradient</span>(blue,red,gold);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://a3.qpic.cn/psb?/V12txxLC164DyB/MiJY1TPPo7RmUxRecjkK7abkKVQcObw3RSAqrJBHpEM!/b/dHABAAAAAAAA&bo=JgEFAQAAAAADAAY!&rf=viewer_4" alt="效果图"></p><h3 id="从左到右"><a href="#从左到右" class="headerlink" title="从左到右"></a>从左到右</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(2)</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">-webkit-linear-gradient</span>(left,red,gold,blue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://a2.qpic.cn/psb?/V12txxLC164DyB/w6tpSHJOdFwnx99HlgcL7ahHUj7SYmhA38BuOtzCDDU!/b/dHgBAAAAAAAA&bo=TwE*AQAAAAADAFU!&rf=viewer_4" alt="效果图"></p><h3 id="从左下到右上-根据角度"><a href="#从左下到右上-根据角度" class="headerlink" title="从左下到右上 根据角度"></a>从左下到右上 根据角度</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(3)</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">-webkit-linear-gradient</span>(<span class="number">45deg</span>,red,gold,blue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://a2.qpic.cn/psb?/V12txxLC164DyB/iybR0YYEsdKXqMrOXBKh1ecWJIHxfVS44IvaGFZCxMk!/b/dHgBAAAAAAAA&bo=LwEgAQAAAAADACo!&rf=viewer_4" alt="效果图"></p><h3 id="从右上到左下"><a href="#从右上到左下" class="headerlink" title="从右上到左下"></a>从右上到左下</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(4)</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">-webkit-linear-gradient</span>(top right,red,gold,blue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://a3.qpic.cn/psb?/V12txxLC164DyB/1SOV.qzaZRMRePeA1XCUi8kwbY7MuOGA3TH9wICklhc!/b/dN0AAAAAAAAA&bo=OgEyAQAAAAADAC0!&rf=viewer_4" alt="效果图"></p><h3 id="颜色自上而下比例分割-具体数据"><a href="#颜色自上而下比例分割-具体数据" class="headerlink" title="颜色自上而下比例分割 具体数据"></a>颜色自上而下比例分割 具体数据</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(5)</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">-webkit-linear-gradient</span>(top,red <span class="number">10px</span>,gold,blue <span class="number">60px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：10px是红色从10px开始渐变 同理 60px也是如此 而不是颜色区域显示多少相素</p><p><img src="http://a1.qpic.cn/psb?/V12txxLC164DyB/R*R7othKgH6mvufWMaceOIbdU1oOl7bZ2uUf*XA8Ez0!/b/dHcBAAAAAAAA&bo=PAFIAQAAAAADAFE!&rf=viewer_4" alt="效果图"></p><h3 id="颜色分割-百分比"><a href="#颜色分割-百分比" class="headerlink" title="颜色分割 百分比"></a>颜色分割 百分比</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(6)</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">-webkit-linear-gradient</span>(top,red <span class="number">30%</span>,gold <span class="number">70%</span>,blue <span class="number">90%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://a2.qpic.cn/psb?/V12txxLC164DyB/LNBnqN2BQehBV5xxWPYur*spZ.i8fovSPbsaaXF7OgM!/b/dHgBAAAAAAAA&bo=TAEtAQAAAAADAEQ!&rf=viewer_4" alt="效果图"></p><h3 id="重复渐变"><a href="#重复渐变" class="headerlink" title="重复渐变"></a>重复渐变</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(7)</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">-webkit-repeating-linear-gradient</span>(red <span class="number">10%</span>,gold <span class="number">20%</span>,blue <span class="number">30%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所谓的重复渐变就是渐变区域小于容器所有会重复渐变</p><p><img src="http://a2.qpic.cn/psb?/V12txxLC164DyB/ifwwoop77N0dU4fH9mFEgQo59S3q6hor.Y3ST8eTJ3w!/b/dAkBAAAAAAAA&bo=PQE1AQAAAAADAC0!&rf=viewer_4" alt="效果图"></p><h2 id="径向渐变"><a href="#径向渐变" class="headerlink" title="径向渐变"></a>径向渐变</h2><h3 id="自内而外"><a href="#自内而外" class="headerlink" title="自内而外"></a>自内而外</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(1)</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">-webkit-radial-gradient</span>(blue,green);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://a1.qpic.cn/psb?/V12txxLC164DyB/jHugIkJoYJfRkCmB6LSna2pJVW2FLiO9cGXA2bXhSxs!/b/dOEAAAAAAAAA&bo=KwEiAQAAAAADACw!&rf=viewer_4" alt="效果图"></p><h3 id="自左向右"><a href="#自左向右" class="headerlink" title="自左向右"></a>自左向右</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(2)</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">-webkit-radial-gradient</span>(left,blue,green);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://a3.qpic.cn/psb?/V12txxLC164DyB/6I1kDTSnIbeSLgW2bAwGrvEbFGCAr14yGOKA3*XoRpc!/b/dHkBAAAAAAAA&bo=JgEvAQAAAAADACw!&rf=viewer_4" alt="效果图"></p><h3 id="颜色比例分割"><a href="#颜色比例分割" class="headerlink" title="颜色比例分割"></a>颜色比例分割</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(3)</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">800px</span>;</span><br><span class="line"><span class="attribute">background</span>:<span class="built_in">-webkit-radial-gradient</span>(gold <span class="number">10%</span>,blue <span class="number">20%</span>,green <span class="number">30%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://a2.qpic.cn/psb?/V12txxLC164DyB/iIJ9*CPknW*OjbOjRhSVP.6*twqJtJsTgSm1HNgHHXI!/b/dHgBAAAAAAAA&bo=fANGAQAAAAADBxo!&rf=viewer_4" alt="效果图"></p><h3 id="自右上而左下"><a href="#自右上而左下" class="headerlink" title="自右上而左下"></a>自右上而左下</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(4)</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">-webkit-radial-gradient</span>(top right,blue,green);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://a2.qpic.cn/psb?/V12txxLC164DyB/7pP*4pWB0fbpSuiURbgLGxgKBBSOLPPtr7eTlbFbmfA!/b/dHgBAAAAAAAA&bo=NAEbAQAAAAADAAo!&rf=viewer_4" alt="效果图"></p><h3 id="颜自上而下"><a href="#颜自上而下" class="headerlink" title="颜自上而下"></a>颜自上而下</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(5)</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">-webkit-radial-gradient</span>(top,blue <span class="number">10px</span>,green <span class="number">60px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://a1.qpic.cn/psb?/V12txxLC164DyB/NK18zDLo2sSCantSCzE25Om.NVl6GvkuOOlzd*VaoTQ!/b/dN4AAAAAAAAA&bo=QQEtAQAAAAADAEk!&rf=viewer_4" alt="效果图"></p><h3 id="百分比"><a href="#百分比" class="headerlink" title="百分比"></a>百分比</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(6)</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">-webkit-radial-gradient</span>(blue <span class="number">30%</span>,green <span class="number">50%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://a3.qpic.cn/psb?/V12txxLC164DyB/AOfqyQzxL6cRh8v7X8xJcoG0Bsioubv6AIwYCYZh43k!/b/dN0AAAAAAAAA&bo=QQE5AQAAAAADAF0!&rf=viewer_4" alt="效果图"></p><h3 id="重复渐变-1"><a href="#重复渐变-1" class="headerlink" title="重复渐变"></a>重复渐变</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(7)</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">-webkit-repeating-radial-gradient</span>(blue <span class="number">10%</span>,green <span class="number">20%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://a1.qpic.cn/psb?/V12txxLC164DyB/wa6m8NqcrR7pfe4IyohmY3BrynKZxSivih6tq45X2m8!/b/dN4AAAAAAAAA&bo=MgEeAQAAAAADAAk!&rf=viewer_4" alt="效果图"></p>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS hack</title>
      <link href="/2020/07/29/front-end-css-hack/"/>
      <url>/2020/07/29/front-end-css-hack/</url>
      
        <content type="html"><![CDATA[<p>CSS hack是通过在CSS样式中加入一些特殊的符号，让不同的浏览器识别不同的符号（什么样的浏览器识别什么样的符号是有标准的，CSS hack就是让你记住这个标准），以达到应用不同的CSS样式的目的，比如.kwstu{width:300px;_width:200px;}，一般浏览器会先给元素使用width:300px;的样式，紧接着后面还有个_width:200px;由于下划线_width只有IE6可以识别，所以此样式在IE6中实际设置对象的宽度为200px，后面的把前面的给覆盖了，而其他浏览器不识别_width不会执行_width:200px;这句样式，所以在其他浏览器中设置对象的宽度就是300px;</p><a id="more"></a><p>注意：我们通常主要考虑的浏览器有IE6、IE7、IE8、谷歌浏览器（chrome）、火狐（Mozilla Firefox）即可，至于我们常用的傲游、QQ的TT浏览器是用你计算机中装的系统自带浏览器的内核，所以只需要兼容以上浏览器即可兼容TT\傲游浏览器。</p><h2 id="CSS-hack解决问题"><a href="#CSS-hack解决问题" class="headerlink" title="CSS hack解决问题"></a>CSS hack解决问题</h2><p>CSS hack用来解决有些css属性在不同浏览器中显示的效果不一样的问题，如margin属性在ie6中显示的距离会比其他浏览器中显示的距离宽2倍，也就是说margin-left:20px;在ie6中距左侧对象的实际显示距离是40px，而在非ie6中显示的距左侧对象的距离是设置的值20px;所以要想设置一个对象距离左侧对象的距离在所有浏览器中都显示是20px的宽度的样式应为：.kwstu{margin-left:20px;_margin-left:20px;}。</p><h2 id="浏览器识别字符标准对应表"><a href="#浏览器识别字符标准对应表" class="headerlink" title="浏览器识别字符标准对应表"></a>浏览器识别字符标准对应表</h2><p><img src="http://a3.qpic.cn/psb?/V12txxLC164DyB/aHPOxgVlcYWyC3rhyGnHeid4OpnNZmpCLeku6Kk7Xtk!/b/dHABAAAAAAAA&bo=aAKKBAAAAAADB8Y!&rf=viewer_4" alt="对应表"></p><p>从上图可以分析出以下几种情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">大部分特殊字符IE浏览器支持，其他主流浏览器firefox，chrome，opera，safari不支持 (opera可识别除外)。</span><br><span class="line">\9    ：所有IE浏览器都支持</span><br><span class="line">_和-  ：仅IE6支持</span><br><span class="line">*     ：IE6、E7支持</span><br><span class="line">\0    ：IE8、IE9支持，opera部分支持</span><br><span class="line">\9\0  ：IE8部分支持、IE9支持</span><br><span class="line">\0\9  ：IE8、IE9支持</span><br></pre></td></tr></table></figure><h2 id="主流浏览器css-hack总结"><a href="#主流浏览器css-hack总结" class="headerlink" title="主流浏览器css hack总结"></a>主流浏览器css hack总结</h2><h3 id="IE"><a href="#IE" class="headerlink" title="IE"></a>IE</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">element</span>&#123;</span><br><span class="line">color：#666\9； //IE8 IE9</span><br><span class="line">* color：#999；   //IE7</span><br><span class="line">_color:#EBEBEB； //IE6</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看出，利用字符识别无法区分IE8和IE9，我们可以从伪类的识别来区分:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">element</span>&#123;</span><br><span class="line">color：#666\9；      //IE8</span><br><span class="line">* color：#999；        //IE7</span><br><span class="line">_color:#EBEBEB；      //IE6</span><br><span class="line">&#125;</span><br><span class="line">:root element&#123;color：#666\9;&#125;//IE9</span><br></pre></td></tr></table></figure><p>【说明】：“:root”伪类IE系列只有IE9支持，其他主流浏览器均支持，利用这一点来区分IE8和IE9。另外考虑到opera部分支持，完全支持:root,所以不使用。</p><h3 id="Firefox"><a href="#Firefox" class="headerlink" title="Firefox"></a>Firefox</h3><p>mozilla私有属性:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@-moz-document url-prefix()&#123; .element&#123;color:#f1f1f1;&#125;&#125; //Firefox</span><br></pre></td></tr></table></figure><h3 id="Webkit和Opera"><a href="#Webkit和Opera" class="headerlink" title="Webkit和Opera"></a>Webkit和Opera</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> all <span class="keyword">and</span> (<span class="attribute">min-width:</span> <span class="number">0px</span>)&#123; <span class="selector-class">.element</span>&#123;<span class="attribute">color</span>:<span class="number">#777</span>;&#125; &#125;</span><br><span class="line">//Webkit</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">-webkit-min-device-pixel-ratio:</span><span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="selector-class">.element</span>&#123;<span class="attribute">color</span>:<span class="number">#444</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line">//Opera</span><br><span class="line"><span class="keyword">@media</span> all <span class="keyword">and</span> (<span class="attribute">-webkit-min-device-pixel-ratio:</span><span class="number">10000</span>), <span class="keyword">not</span> all <span class="keyword">and</span> (<span class="attribute">-webkit-min-device-pixel-ratio:</span><span class="number">0</span>) &#123;</span><br><span class="line"><span class="selector-class">.element</span>&#123;<span class="attribute">color</span>:<span class="number">#336699</span>;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="兼容各大主流浏览器-最新版本-css-hack汇总如下（最全的）"><a href="#兼容各大主流浏览器-最新版本-css-hack汇总如下（最全的）" class="headerlink" title="兼容各大主流浏览器(最新版本)css hack汇总如下（最全的）"></a>兼容各大主流浏览器(最新版本)css hack汇总如下（最全的）</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.element</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:<span class="number">#000</span>;             <span class="comment">/*w3c标准*/</span></span><br><span class="line">[;color:#f00;];         /*Webkit(chrome和safari)*/</span><br><span class="line"><span class="selector-tag">color</span>:<span class="selector-id">#666</span>\9;           <span class="comment">/*IE8*/</span></span><br><span class="line">*<span class="selector-tag">color</span>:<span class="selector-id">#999</span>;            <span class="comment">/*IE7*/</span></span><br><span class="line">_<span class="selector-tag">color</span>:<span class="selector-id">#333</span>;            <span class="comment">/*IE6*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">:root</span> <span class="selector-class">.element</span>&#123;<span class="attribute">color</span>:<span class="number">#0f0</span>\<span class="number">9</span>;&#125;  <span class="comment">/*IE9*/</span></span><br><span class="line"><span class="keyword">@media</span> all <span class="keyword">and</span> (<span class="attribute">-webkit-min-device-pixel-ratio:</span><span class="number">10000</span>), <span class="keyword">not</span> all <span class="keyword">and</span> (</span><br><span class="line"><span class="attribute">-webkit-min-device-pixel-ratio:</span><span class="number">0</span>) &#123; <span class="selector-class">.element</span>&#123;<span class="attribute">color</span>:<span class="number">#336699</span>;&#125;&#125;  <span class="comment">/*opera*/</span></span><br><span class="line"><span class="keyword">@-moz-document</span> url-prefix()&#123; <span class="selector-class">.element</span>&#123;<span class="attribute">color</span>:<span class="number">#f1f1f1</span>;&#125;&#125; <span class="comment">/*Firefox*/</span></span><br></pre></td></tr></table></figure><h2 id="浏览器内核"><a href="#浏览器内核" class="headerlink" title="浏览器内核"></a>浏览器内核</h2><p>开发的一种排版引擎。使用Trident渲染引擎的浏览器包括：IE、傲游、世界之窗浏览器、Avant、腾讯TT、Netscape 8、NetCaptor、Sleipnir、GOSURF、GreenBrowser和KKman等。；</p><p>二、Gecko内核代表作品Mozilla FirefoxGecko是一套开放源代码的、以C++编写的网页排版引擎。Gecko是最流行的排版引擎之一，仅次于Trident。使用它的最著名浏览器有Firefox、Netscape6至9。</p><p>三、WebKit内核代表作品Safari、Chromewebkit 是一个开源项目，包含了来自KDE项目和苹果公司的一些组件，主要用于Mac OS系统，它的特点在于源码结构清晰、渲染速度极快。缺点是对网页代码的兼容性不高，导致一些编写不标准的网页无法正常显示。主要代表作品有Safari和Google的浏览器Chrome。</p><p>四、Presto内核代表作品OperaPresto是由Opera Software开发的浏览器排版引擎，供Opera 7.0及以上使用。它取代了旧版Opera 4至6版本使用的Elektra排版引擎，包括加入动态功能，例如网页或其部分可随着DOM及Script语法的事件而重新排版。</p><p>由于需求限制出现了好多双核浏览器，比如傲游、枫树浏览器（ChromePlus）、搜狗高速浏览器</p><h2 id="常用css3兼容"><a href="#常用css3兼容" class="headerlink" title="常用css3兼容"></a>常用css3兼容</h2><p>-webkit- //代表safari、chrome私有属性</p><p>-moz- //代表firefox浏览器私有属性</p><p>-ms- //代表ie浏览器私有属性</p><p>-o- //欧朋</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>你还在为网页适配到移动端的问题而烦恼？</title>
      <link href="/2020/07/28/front-end-wangye-shipei/"/>
      <url>/2020/07/28/front-end-wangye-shipei/</url>
      
        <content type="html"><![CDATA[<h2 id="在head里面多加一个meta标签"><a href="#在head里面多加一个meta标签" class="headerlink" title="在head里面多加一个meta标签"></a>在head里面多加一个meta标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span>  <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=deveice-width,initial-scale=1,maxnum-scale=5,user-scalable=0,target-densitydpi=high-dpi"</span>/&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>viewport 可以对不同设备进行网页宽度的一个适配</p><p>maxnum-scale 允许用户放大网页的最大比例</p><p>user-scale 是否允许用户缩放 值可以给 1 0 yes no</p><p>target-densitydpi 屏幕密度、像素点 值有</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">high-dpi(高像素)</span><br><span class="line">low-dpi(低像素)</span><br><span class="line">deveice-dpi 设备的默认像素</span><br><span class="line">value 可以设置数值70~400</span><br><span class="line">width 设置的设备的宽度</span><br><span class="line">deveice-width 代表设备的宽度</span><br><span class="line">initial-scale 初始比例0.1~10</span><br></pre></td></tr></table></figure><h2 id="淘宝弹性布局flexible"><a href="#淘宝弹性布局flexible" class="headerlink" title="淘宝弹性布局flexible"></a>淘宝弹性布局flexible</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://g.tbcdn.cn/mtb/lib-flexible/0.3.4/??flexible_css.js,flexible.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>听说样式单位用rem和淘宝flexible很配哦</p><p>具体px与rem的转化你可以下载一个cssrem插件去Sublime中设置</p><h3 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">克隆项目 https://github.com/hyb628/cssrem.git</span><br><span class="line"></span><br><span class="line">进入packages目录：Sublime Text -&gt; Preferences -&gt; Browse Packages…</span><br><span class="line"></span><br><span class="line">复制下载的cssrem目录到刚才的packges目录里。</span><br><span class="line"></span><br><span class="line">重启Sublime Text。</span><br></pre></td></tr></table></figure><h3 id="参数配置文件"><a href="#参数配置文件" class="headerlink" title="参数配置文件"></a>参数配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Sublime Text -&gt; Preferences -&gt; Package Settings -&gt; cssrem–&gt;settings Default</span><br><span class="line"></span><br><span class="line">px_to_rem - px转rem的单位比例，默认为40。</span><br><span class="line"></span><br><span class="line">max_rem_fraction_length - px转rem的小数部分的最大长度。默认为6。</span><br><span class="line"></span><br><span class="line">available_file_types - 启用此插件的文件类型。默认为：[“.css”, “.less”, “.sass”]。</span><br></pre></td></tr></table></figure><h3 id="我的配置"><a href="#我的配置" class="headerlink" title="我的配置"></a>我的配置</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">"px_to_rem"</span>:<span class="number">64.0</span>,<span class="comment">//配置给出的宽度除以10</span></span><br><span class="line"><span class="string">"max_rem_fraction_length"</span>: <span class="number">2</span>,<span class="comment">//保留小数点的位数</span></span><br><span class="line"><span class="string">"available_file_types"</span>: [<span class="string">".css"</span>, <span class="string">".less"</span>, <span class="string">".sass"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>php的mysql连接</title>
      <link href="/2020/07/28/after-end-php-lianjie/"/>
      <url>/2020/07/28/after-end-php-lianjie/</url>
      
        <content type="html"><![CDATA[<p>php5.5以下的是用MySQL来连接（面向过程），5.5以上用mysqli来连接（面向过程/面向对象）。</p><h2 id="面向过程"><a href="#面向过程" class="headerlink" title="面向过程"></a>面向过程</h2><h3 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$link = mysqli_connect(<span class="string">"域名"</span>,<span class="string">"用户"</span>,<span class="string">"密码"</span>,<span class="string">"数据库"</span>);</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="设置编码格式"><a href="#设置编码格式" class="headerlink" title="设置编码格式"></a>设置编码格式</h3><p>第一种：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqli_query($link, <span class="string">"set names utf8"</span>);</span><br></pre></td></tr></table></figure><p>第二种：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqli_set_charset($link,<span class="string">'utf8'</span>);</span><br></pre></td></tr></table></figure><h3 id="书写SQL语句-增删改查"><a href="#书写SQL语句-增删改查" class="headerlink" title="书写SQL语句 增删改查"></a>书写SQL语句 增删改查</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"................"</span></span><br></pre></td></tr></table></figure><h3 id="执行SQL语句"><a href="#执行SQL语句" class="headerlink" title="执行SQL语句"></a>执行SQL语句</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$res = mysqli_query($link, $sql);</span><br></pre></td></tr></table></figure><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><h3 id="连接数据库-1"><a href="#连接数据库-1" class="headerlink" title="连接数据库"></a>连接数据库</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$mysqli=<span class="keyword">new</span> mysqli(<span class="string">"域名"</span>,<span class="string">"用户"</span>,<span class="string">"密码"</span>,<span class="string">"数据库"</span>);</span><br></pre></td></tr></table></figure><h3 id="设置编码格式-1"><a href="#设置编码格式-1" class="headerlink" title="设置编码格式"></a>设置编码格式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$mysqli-&gt;query(<span class="string">"set names utf8"</span>);</span><br></pre></td></tr></table></figure><h3 id="书写SQL语句-增删改查-1"><a href="#书写SQL语句-增删改查-1" class="headerlink" title="书写SQL语句 增删改查"></a>书写SQL语句 增删改查</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"................"</span></span><br></pre></td></tr></table></figure><h3 id="执行SQL语句-1"><a href="#执行SQL语句-1" class="headerlink" title="执行SQL语句"></a>执行SQL语句</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$res=$mysqli-&gt;query($sql);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端相关 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>非常有用的php技巧</title>
      <link href="/2020/07/28/after-end-php-jiqiao/"/>
      <url>/2020/07/28/after-end-php-jiqiao/</url>
      
        <content type="html"><![CDATA[<p>今天谈谈一些关于改善和优化PHP代码的提示和技巧。</p><h2 id="不要使用相对路径，要定义一个根路径"><a href="#不要使用相对路径，要定义一个根路径" class="headerlink" title="不要使用相对路径，要定义一个根路径"></a>不要使用相对路径，要定义一个根路径</h2><a id="more"></a><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">require_once(<span class="string">'../../xxx.php'</span>);</span><br></pre></td></tr></table></figure><p>以上这种方法有很多缺点：</p><p>1.它首先搜索php包括路径中的指定目录，然后查看当前目录。因此，会检查许多目录。</p><p>2.当一个脚本被包含在另一个脚本的不同目录中时，它的基本目录变为包含脚本的目录。</p><p>3.另一个问题是，当一个脚本从cron运行时，它可能不会将它的父目录作为工作目录。</p><h2 id="不使用require，包括require-once或include-once"><a href="#不使用require，包括require-once或include-once" class="headerlink" title="不使用require，包括require_once或include_once"></a>不使用require，包括require_once或include_once</h2><p>你的脚本上可能会包括各种文件，如类库，实用程序文件和辅助函数等，就像这些：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">require_once(<span class="string">'../Database1.php'</span>);</span><br><span class="line">require_once(<span class="string">'../Database2.php'</span>);</span><br><span class="line">require_once(<span class="string">'../Database3.php'</span>);</span><br></pre></td></tr></table></figure><p>这相当粗糙。代码需要更加灵活。写好辅助函数可以更容易地包含东西。举个例子：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">load_class</span>(<span class="params">$class_name</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$path = ....;<span class="comment">//path to the class file</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(file_exists($path))</span><br><span class="line">&#123;</span><br><span class="line">    require_once( $path ); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说白了，有重复样式的就封装成一个函数，这样做可以完成很多事情：</p><p>1.为同一个类文件搜索多个目录。</p><p>2.轻松更改包含类文件的目录，而不破坏任何地方的代码。</p><p>3.使用类似的函数用于加载包含辅助函数、HTML内容等的文件。</p><h2 id="不要在你的应用程序中gzip输出，让apache来做"><a href="#不要在你的应用程序中gzip输出，让apache来做" class="headerlink" title="不要在你的应用程序中gzip输出，让apache来做"></a>不要在你的应用程序中gzip输出，让apache来做</h2><p>考虑使用ob_gzhandler？不，别这样做。它没有任何意义。PHP应该是来写应用程序的。不要担心PHP中有关如何优化在服务器和浏览器之间传输的数据。</p><p>使用apache mod_gzip/mod_deflate通过.htaccess文件压缩内容。</p><h2 id="改变应用程序创建的文件的权限"><a href="#改变应用程序创建的文件的权限" class="headerlink" title="改变应用程序创建的文件的权限"></a>改变应用程序创建的文件的权限</h2><p>当在Linux环境下工作时，权限处理会浪费你很多时间。因此，只要你的php应用程序创建了一些文件，那就应该修改它们的权限以确保它们在外面“平易近人”。否则，例如，文件是由“php”用户创建的，而你作为一个不同的用户，系统就不会让你访问或打开文件，然后你必须努力获得root权限，更改文件权限等等。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// Read and write <span class="keyword">for</span> owner, <span class="built_in">read</span> <span class="keyword">for</span> everybody <span class="keyword">else</span></span><br><span class="line">chmod(<span class="string">"/somedir/somefile"</span>, 0644);</span><br><span class="line"></span><br><span class="line">// Everything <span class="keyword">for</span> owner, <span class="built_in">read</span> and execute <span class="keyword">for</span> others</span><br><span class="line">chmod(<span class="string">"/somedir/somefile"</span>, 0755);</span><br></pre></td></tr></table></figure><h2 id="使用php过滤器验证数据"><a href="#使用php过滤器验证数据" class="headerlink" title="使用php过滤器验证数据"></a>使用php过滤器验证数据</h2><p>你是不是使用正则表达式来验证如电子邮件，IP地址等值？是的，每个人都是这样做的。现在，让我们试试一个不同的东西，那就是过滤器。</p><p>php过滤器扩展程序将提供简单的方法来有效验证或校验值。</p>]]></content>
      
      
      <categories>
          
          <category> 后端相关 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>你需要知道的php基础</title>
      <link href="/2020/07/28/after-end-php-base/"/>
      <url>/2020/07/28/after-end-php-base/</url>
      
        <content type="html"><![CDATA[<p>PHP 是一种创建动态交互性站点的强有力的服务器端脚本语言,echo 只能打印字符串或数字。</p><h2 id="头部设置编码格式"><a href="#头部设置编码格式" class="headerlink" title="头部设置编码格式"></a>头部设置编码格式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">header(<span class="string">"Content-type:text/html;charset=utf-8"</span>);</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.定义变量 用 $</span><br><span class="line"><span class="variable">$a</span>=<span class="string">'hello'</span>; </span><br><span class="line"></span><br><span class="line">2.双引号里面会解析变量，单引号不能</span><br><span class="line"><span class="variable">$res1</span>=<span class="string">"<span class="variable">$a</span>"</span>;// 结果 hello</span><br><span class="line"><span class="variable">$res1</span>=<span class="string">'$a'</span>;// 结果 <span class="variable">$a</span></span><br></pre></td></tr></table></figure><h2 id="php必知"><a href="#php必知" class="headerlink" title="php必知"></a>php必知</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_POST</span> 接受提交过来的post数据</span><br><span class="line"><span class="variable">$_GET</span> 接受提交过来的get数据</span><br><span class="line"><span class="variable">$_REQUEST</span> 接受post和get请求</span><br><span class="line"><span class="built_in">echo</span> LINE;…….显示当前行数</span><br><span class="line"><span class="built_in">echo</span> FILE;…….显示文件的当前位置</span><br><span class="line"><span class="built_in">echo</span> FUNCTION;…显示当前函数的函数名</span><br><span class="line"><span class="built_in">echo</span> CLASS;……显示类名</span><br><span class="line"><span class="built_in">echo</span> METHOD;…..显示类名下的方法名</span><br><span class="line">字符串拼接用 .</span><br><span class="line">print_r(PHP_OS);………系统名称</span><br><span class="line">print_r(PHP_VERSION);….PHP版本号</span><br></pre></td></tr></table></figure><h2 id="文件的读取"><a href="#文件的读取" class="headerlink" title="文件的读取"></a>文件的读取</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fopen(“文件名”,”r”)</span><br><span class="line">file(“文件名”)</span><br><span class="line">file_get_contents(“文件名”)</span><br></pre></td></tr></table></figure><h2 id="文件写入"><a href="#文件写入" class="headerlink" title="文件写入"></a>文件写入</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">文本</span><br><span class="line">file_put_contents(“文件名”, “写入内容”)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">图片</span><br><span class="line"><span class="variable">$tempPath</span> = <span class="variable">$_FILES</span>[‘img’][‘tmp_name’];图片路径</span><br><span class="line"><span class="variable">$newName</span> = <span class="variable">$_FILES</span>[‘img’][‘name’];图片名</span><br><span class="line">move_uploaded_file(<span class="variable">$tempPath</span>, “图片路径/&#123;<span class="variable">$newName</span>&#125;”)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端相关 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>双色球</title>
      <link href="/2020/07/28/demo-shuangseqiu/"/>
      <url>/2020/07/28/demo-shuangseqiu/</url>
      
        <content type="html"><![CDATA[<p>双色球的原理，利用随机抽取加判断。<br>效果图：<br><img src="http://a3.qpic.cn/psb?/V12txxLC164DyB/hWjLzcYrMjAkIIGWtvJ7NOCtW6AX.gPG7qDC8SwPSBI!/b/dI8AAAAAAAAA&bo=oAEQAQAAAAADB5I!&rf=viewer_4" alt="效果图"></p><a id="more"></a><h2 id="html代码"><a href="#html代码" class="headerlink" title="html代码"></a>html代码</h2><p>双色球一共七个，6红1蓝，注释的部分利用js拼接字符串显示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"开始摇奖"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ball"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;li&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">&lt;li&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">&lt;li&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">&lt;li&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">&lt;li&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">&lt;li&gt;&lt;/li&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;li&gt;&lt;/li&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="css代码"><a href="#css代码" class="headerlink" title="css代码"></a>css代码</h2><p>根据自己喜好，修改样式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0px</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.wrap</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">260px</span>;</span><br><span class="line"><span class="attribute">background</span>: red;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">60px</span> auto <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span>&#123;</span><br><span class="line"><span class="attribute">border</span>: none;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line"><span class="attribute">color</span>: white;</span><br><span class="line"><span class="attribute">background</span>: gold;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">28px</span>;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span> auto <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ball</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">360px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">15px</span> <span class="number">0px</span>;</span><br><span class="line"><span class="attribute">background</span>: white;</span><br><span class="line"><span class="attribute">margin-left</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span>,<span class="selector-tag">ol</span>&#123;</span><br><span class="line"><span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line"><span class="attribute">background</span>: red;</span><br><span class="line"><span class="attribute">color</span>: white;</span><br><span class="line"><span class="attribute">float</span>: left;</span><br><span class="line"><span class="attribute">margin-left</span>: <span class="number">10px</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ol</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line"><span class="attribute">background</span>: blue;</span><br><span class="line"><span class="attribute">color</span>: white;</span><br><span class="line"><span class="attribute">float</span>: right;</span><br><span class="line"><span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a>js代码</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btn=<span class="built_in">document</span>.querySelector(<span class="string">'[type="button"]'</span>);</span><br><span class="line"><span class="comment">//这里利用了es6获取button</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">random</span>(<span class="params">m,n</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> num=<span class="built_in">Math</span>.max(m,n)-<span class="built_in">Math</span>.min(m,n);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random()*num+<span class="built_in">Math</span>.min(m,n));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//封装一个随机函数，随机抽取【m，n】的一个数</span></span><br><span class="line"><span class="comment">//点击事件</span></span><br><span class="line">btn.onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> redHtml=<span class="string">""</span>;</span><br><span class="line">    <span class="keyword">var</span> blueHtml=<span class="string">""</span>;</span><br><span class="line">    <span class="keyword">var</span> redList=[];<span class="comment">//存放红球数据</span></span><br><span class="line">    <span class="keyword">var</span> blueList=[];<span class="comment">//存放蓝球数据</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//当红球少于6个时，执行while语句</span></span><br><span class="line">    <span class="keyword">while</span>(redList.length&lt;<span class="number">6</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> newredList=random(<span class="number">1</span>,<span class="number">33</span>);</span><br><span class="line">        <span class="comment">//验证随机数是否重复，去重，数组坐标等于-1代表没有值，可以添加</span></span><br><span class="line">        <span class="keyword">if</span> (redList.indexOf(newredList)==<span class="number">-1</span>) &#123;</span><br><span class="line">            redList.push(newredList);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//循环，添加li标签，实现双色球效果</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;<span class="number">1</span>;j++)&#123;</span><br><span class="line">        blueList.push(random(<span class="number">1</span>,<span class="number">16</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> h=<span class="number">0</span>;h&lt;redList.length;h++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (redList[h]&lt;<span class="number">10</span>) &#123;</span><br><span class="line">            redHtml+=<span class="string">"&lt;li&gt;0"</span>+redList[h]+<span class="string">"&lt;/li&gt;"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            redHtml+=<span class="string">"&lt;li&gt;"</span>+redList[h]+<span class="string">"&lt;/li&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (blueList[<span class="number">0</span>]&lt;<span class="number">10</span>) &#123;</span><br><span class="line">        blueHtml+=<span class="string">"&lt;li&gt;0"</span>+blueList[<span class="number">0</span>]+<span class="string">"&lt;/li&gt;"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            blueHtml+=<span class="string">"&lt;li&gt;"</span>+blueList[<span class="number">0</span>]+<span class="string">"&lt;/li&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">document</span>.querySelector(<span class="string">".ball ul"</span>).innerHTML=redHtml;</span><br><span class="line">    <span class="built_in">document</span>.querySelector(<span class="string">".ball ol"</span>).innerHTML=blueHtml;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> DEMO事例 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript你必须要知道的事件和视窗单位</title>
      <link href="/2020/07/26/front-end-js-event/"/>
      <url>/2020/07/26/front-end-js-event/</url>
      
        <content type="html"><![CDATA[<h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">onclick 点击事件，顾名思义点击触发事件</span><br><span class="line"></span><br><span class="line">onmouseover 鼠标移入事件，鼠标移入触发</span><br><span class="line"></span><br><span class="line">onmouseout 鼠标移出事件，鼠标移出触发</span><br><span class="line"></span><br><span class="line">onmousemove 鼠标移动事件，鼠标移动触发</span><br><span class="line"></span><br><span class="line">onload 预加载，等所有都加载完成后，执行</span><br><span class="line"></span><br><span class="line">onfocus 当元素被聚焦的时候触发</span><br><span class="line"></span><br><span class="line">onblur 当元素失去焦点时触发</span><br><span class="line"></span><br><span class="line">onpropertychange 文本内容实时改变触发 IE独有</span><br><span class="line"></span><br><span class="line">oninput 文本内容实时改变触发 非标准，但支持效果较理想</span><br><span class="line"></span><br><span class="line">onchange 文本内容发生改变，且失去焦点时触</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="窗口的文档显示区的宽高"><a href="#窗口的文档显示区的宽高" class="headerlink" title="窗口的文档显示区的宽高"></a>窗口的文档显示区的宽高</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">window.innerWidth</span><br><span class="line">window.innerHeight</span><br></pre></td></tr></table></figure><h2 id="元素位置的距离"><a href="#元素位置的距离" class="headerlink" title="元素位置的距离"></a>元素位置的距离</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">offsetWidth        元素实际的宽度(包含边线)</span><br><span class="line"></span><br><span class="line">offsetHeight    元素实际的高度(包含边线)</span><br><span class="line"></span><br><span class="line">clientWidth        =width+padding    元素宽度(不包含边线)    </span><br><span class="line">clientHeight    =height+padding    元素高度(不包含边线)</span><br><span class="line"></span><br><span class="line">offsetParent    返回距离元素最近设置position，非static样式的元素节点，没有返回body的节点</span><br><span class="line"></span><br><span class="line">offsetLeft    返回元素与offsetParent的横向距离</span><br><span class="line"></span><br><span class="line">offsetTop    返回元素与offsetParent的竖直距离</span><br><span class="line"></span><br><span class="line">scrollLeft        元素的横向滚动条移动的距离 可以读取 可以设置</span><br><span class="line"></span><br><span class="line">scrollTop        元素的竖直滚动条移动的距离 可以读取 可以设置</span><br><span class="line"></span><br><span class="line">scrollWidth         对象的实际内容的宽度，不包边线宽度</span><br><span class="line"></span><br><span class="line">scrollHeight    对象的实际内容的高度，不包边线宽度</span><br></pre></td></tr></table></figure><h2 id="鼠标"><a href="#鼠标" class="headerlink" title="鼠标"></a>鼠标</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">clientx  鼠标距离窗口的宽   标准</span><br><span class="line">clienty  鼠标距离窗口的高</span><br><span class="line"></span><br><span class="line">offsetx  鼠标相对距离当前元素的宽  ie chrome支持</span><br><span class="line">offsety  鼠标相对距离当前元素的高</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML特殊符号</title>
      <link href="/2020/07/26/front-end-html-fuhao/"/>
      <url>/2020/07/26/front-end-html-fuhao/</url>
      
        <content type="html"><![CDATA[<p>HTML特殊符号，分三列：符号、命名实体、十进制编码</p><h2 id="常见"><a href="#常见" class="headerlink" title="常见"></a>常见</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">©&amp;copy;&amp;<span class="comment">#169;</span></span><br><span class="line">®&amp;reg;&amp;<span class="comment">#174;</span></span><br><span class="line">&lt;&amp;lt;&amp;<span class="comment">#60;</span></span><br><span class="line">&gt;&amp;gt;&amp;<span class="comment">#62;</span></span><br><span class="line">¥&amp;yen;&amp;<span class="comment">#165;</span></span><br><span class="line">←&amp;larr;&amp;<span class="comment">#8592;</span></span><br><span class="line">↑&amp;uarr;&amp;<span class="comment">#8593;</span></span><br><span class="line">→&amp;rarr;&amp;<span class="comment">#8594;</span></span><br><span class="line">↓&amp;darr;&amp;<span class="comment">#8595;</span></span><br><span class="line">•&amp;bull;&amp;<span class="comment">#8226;</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="大部分是数学、物理、字母字符"><a href="#大部分是数学、物理、字母字符" class="headerlink" title="大部分是数学、物理、字母字符"></a>大部分是数学、物理、字母字符</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">Α&amp;Alpha;&amp;<span class="comment">#913;</span></span><br><span class="line">Β&amp;Beta;&amp;<span class="comment">#914;</span></span><br><span class="line">Γ&amp;Gamma;&amp;<span class="comment">#915;</span></span><br><span class="line">Δ&amp;Delta;&amp;<span class="comment">#916;</span></span><br><span class="line">Ε&amp;Epsilon;&amp;<span class="comment">#917;</span></span><br><span class="line">Ζ&amp;Zeta;&amp;<span class="comment">#918;</span></span><br><span class="line">Η&amp;Eta;&amp;<span class="comment">#919;</span></span><br><span class="line">Θ&amp;Theta;&amp;<span class="comment">#920;</span></span><br><span class="line">Ι&amp;Iota;&amp;<span class="comment">#921;</span></span><br><span class="line">Κ&amp;Kappa;&amp;<span class="comment">#922;</span></span><br><span class="line">Λ&amp;Lambda;&amp;<span class="comment">#923;</span></span><br><span class="line">Μ&amp;Mu;&amp;<span class="comment">#924;</span></span><br><span class="line">Ν&amp;Nu;&amp;<span class="comment">#925;</span></span><br><span class="line">Ξ&amp;Xi;&amp;<span class="comment">#926;</span></span><br><span class="line">Ο&amp;Omicron;&amp;<span class="comment">#927;</span></span><br><span class="line">Π&amp;Pi;&amp;<span class="comment">#928;</span></span><br><span class="line">Ρ&amp;Rho;&amp;<span class="comment">#929;</span></span><br><span class="line">Σ&amp;Sigma;&amp;<span class="comment">#931;</span></span><br><span class="line">Τ&amp;Tau;&amp;<span class="comment">#932;</span></span><br><span class="line">Υ&amp;Upsilon;&amp;<span class="comment">#933;</span></span><br><span class="line">Φ&amp;Phi;&amp;<span class="comment">#934;</span></span><br><span class="line">Χ&amp;Chi;&amp;<span class="comment">#935;</span></span><br><span class="line">Ψ&amp;Psi;&amp;<span class="comment">#936;</span></span><br><span class="line">Ω&amp;Omega;&amp;<span class="comment">#937;</span></span><br><span class="line">α&amp;alpha;&amp;<span class="comment">#945;</span></span><br><span class="line">β&amp;beta;&amp;<span class="comment">#946;</span></span><br><span class="line">γ&amp;gamma;&amp;<span class="comment">#947;</span></span><br><span class="line">δ&amp;delta;&amp;<span class="comment">#948;</span></span><br><span class="line">ε&amp;epsilon;&amp;<span class="comment">#949;</span></span><br><span class="line">ζ&amp;zeta;&amp;<span class="comment">#950;</span></span><br><span class="line">η&amp;eta;&amp;<span class="comment">#951;</span></span><br><span class="line">θ&amp;theta;&amp;<span class="comment">#952;</span></span><br><span class="line">ι&amp;iota;&amp;<span class="comment">#953;</span></span><br><span class="line">κ&amp;kappa;&amp;<span class="comment">#954;</span></span><br><span class="line">λ&amp;lambda;&amp;<span class="comment">#955;</span></span><br><span class="line">μ&amp;mu;&amp;<span class="comment">#956;</span></span><br><span class="line">ν&amp;nu;&amp;<span class="comment">#957;</span></span><br><span class="line">ξ&amp;xi;&amp;<span class="comment">#958;</span></span><br><span class="line">ο&amp;omicron;&amp;<span class="comment">#959;</span></span><br><span class="line">π&amp;pi;&amp;<span class="comment">#960;</span></span><br><span class="line">ρ&amp;rho;&amp;<span class="comment">#961;</span></span><br><span class="line">ς&amp;sigmaf;&amp;<span class="comment">#962;</span></span><br><span class="line">σ&amp;sigma;&amp;<span class="comment">#963;</span></span><br><span class="line">τ&amp;tau;&amp;<span class="comment">#964;</span></span><br><span class="line">υ&amp;upsilon;&amp;<span class="comment">#965;</span></span><br><span class="line">φ&amp;phi;&amp;<span class="comment">#966;</span></span><br><span class="line">χ&amp;chi;&amp;<span class="comment">#967;</span></span><br><span class="line">ψ&amp;psi;&amp;<span class="comment">#968;</span></span><br><span class="line">ω&amp;omega;&amp;<span class="comment">#969;</span></span><br><span class="line">ϑ&amp;thetasym;&amp;<span class="comment">#977;</span></span><br><span class="line">ϒ&amp;upsih;&amp;<span class="comment">#978;</span></span><br><span class="line">ϖ&amp;piv;&amp;<span class="comment">#982;</span></span><br></pre></td></tr></table></figure><h2 id="稀奇古怪"><a href="#稀奇古怪" class="headerlink" title="稀奇古怪"></a>稀奇古怪</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">•&amp;bull;&amp;<span class="comment">#8226;</span></span><br><span class="line">…&amp;hellip;&amp;<span class="comment">#8230;</span></span><br><span class="line">′&amp;prime;&amp;<span class="comment">#8242;</span></span><br><span class="line">″&amp;Prime;&amp;<span class="comment">#8243;</span></span><br><span class="line">‾&amp;oline;&amp;<span class="comment">#8254;</span></span><br><span class="line">⁄&amp;frasl;&amp;<span class="comment">#8260;</span></span><br><span class="line">℘&amp;weierp;&amp;<span class="comment">#8472;</span></span><br><span class="line">ℑ&amp;image;&amp;<span class="comment">#8465;</span></span><br><span class="line">ℜ&amp;real;&amp;<span class="comment">#8476;</span></span><br><span class="line">™&amp;trade;&amp;<span class="comment">#8482;</span></span><br><span class="line">ℵ&amp;alefsym;&amp;<span class="comment">#8501;</span></span><br><span class="line">⊕&amp;oplus;&amp;<span class="comment">#8853;</span></span><br><span class="line">⊗&amp;otimes;&amp;<span class="comment">#8855;</span></span><br><span class="line">⊥&amp;perp;&amp;<span class="comment">#8869;</span></span><br><span class="line">⋅&amp;sdot;&amp;<span class="comment">#8901;</span></span><br><span class="line">⌈&amp;lceil;&amp;<span class="comment">#8968;</span></span><br><span class="line">⌉&amp;rceil;&amp;<span class="comment">#8969;</span></span><br><span class="line">⌊&amp;lfloor;&amp;<span class="comment">#8970;</span></span><br><span class="line">⌋&amp;rfloor;&amp;<span class="comment">#8971;</span></span><br><span class="line">◊&amp;loz;&amp;<span class="comment">#9674;</span></span><br></pre></td></tr></table></figure><h2 id="箭头"><a href="#箭头" class="headerlink" title="箭头"></a>箭头</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">←&amp;larr;&amp;<span class="comment">#8592;</span></span><br><span class="line">↑&amp;uarr;&amp;<span class="comment">#8593;</span></span><br><span class="line">→&amp;rarr;&amp;<span class="comment">#8594;</span></span><br><span class="line">↓&amp;darr;&amp;<span class="comment">#8595;</span></span><br><span class="line">↔&amp;harr;&amp;<span class="comment">#8596;</span></span><br><span class="line">↵&amp;crarr;&amp;<span class="comment">#8629;</span></span><br><span class="line">⇐&amp;lArr;&amp;<span class="comment">#8656;</span></span><br><span class="line">⇑&amp;uArr;&amp;<span class="comment">#8657;</span></span><br><span class="line">⇒&amp;rArr;&amp;<span class="comment">#8658;</span></span><br><span class="line">⇓&amp;dArr;&amp;<span class="comment">#8659;</span></span><br><span class="line">⇔&amp;hArr;&amp;<span class="comment">#8660;</span></span><br></pre></td></tr></table></figure><h2 id="数学有关"><a href="#数学有关" class="headerlink" title="数学有关"></a>数学有关</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">∀&amp;forall;&amp;<span class="comment">#8704;</span></span><br><span class="line">∂&amp;part; &amp;<span class="comment">#8706;</span></span><br><span class="line">∃&amp;exist;&amp;<span class="comment">#8707;</span></span><br><span class="line">∅&amp;empty;&amp;<span class="comment">#8709;</span></span><br><span class="line">∇&amp;nabla;&amp;<span class="comment">#8711;</span></span><br><span class="line">∈&amp;isin;&amp;<span class="comment">#8712;</span></span><br><span class="line">∉&amp;notin;&amp;<span class="comment">#8713;</span></span><br><span class="line">∋&amp;ni;&amp;<span class="comment">#8715;</span></span><br><span class="line">∏&amp;prod;&amp;<span class="comment">#8719;</span></span><br><span class="line">∑&amp;sum;&amp;<span class="comment">#8722;</span></span><br><span class="line">−&amp;minus;&amp;<span class="comment">#8722;</span></span><br><span class="line">∗&amp;lowast;&amp;<span class="comment">#8727;</span></span><br><span class="line">√&amp;radic;&amp;<span class="comment">#8730;</span></span><br><span class="line">∝&amp;prop;&amp;<span class="comment">#8733;</span></span><br><span class="line">∞&amp;infin;&amp;<span class="comment">#8734;</span></span><br><span class="line">∠&amp;ang;&amp;<span class="comment">#8736;</span></span><br><span class="line">∧&amp;and;&amp;<span class="comment">#8869;</span></span><br><span class="line">∨&amp;or;&amp;<span class="comment">#8870;</span></span><br><span class="line">∩&amp;<span class="built_in">cap</span>;&amp;<span class="comment">#8745;</span></span><br><span class="line">∪&amp;cup;&amp;<span class="comment">#8746;</span></span><br><span class="line">∫&amp;int;&amp;<span class="comment">#8747;</span></span><br><span class="line">∴&amp;there4;&amp;<span class="comment">#8756;</span></span><br><span class="line">∼&amp;sim;&amp;<span class="comment">#8764;</span></span><br><span class="line">≅&amp;cong;&amp;<span class="comment">#8773;</span></span><br><span class="line">≈&amp;asymp;&amp;<span class="comment">#8773;</span></span><br><span class="line">≠&amp;ne;&amp;<span class="comment">#8800;</span></span><br><span class="line">≡&amp;equiv;&amp;<span class="comment">#8801;</span></span><br><span class="line">≤&amp;le;&amp;<span class="comment">#8804;</span></span><br><span class="line">≥&amp;ge;&amp;<span class="comment">#8805;</span></span><br><span class="line">⊂&amp;sub;&amp;<span class="comment">#8834;</span></span><br><span class="line">⊃&amp;sup;&amp;<span class="comment">#8835;</span></span><br><span class="line">⊄&amp;nsub;&amp;<span class="comment">#8836;</span></span><br><span class="line">⊆&amp;sube;&amp;<span class="comment">#8838;</span></span><br><span class="line">⊇&amp;supe;&amp;<span class="comment">#8839;</span></span><br></pre></td></tr></table></figure><h2 id="扑克"><a href="#扑克" class="headerlink" title="扑克"></a>扑克</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">♠        &amp;spades;    &amp;<span class="comment">#9824;    </span></span><br><span class="line">♣        &amp;clubs;        &amp;<span class="comment">#9827;    </span></span><br><span class="line">♥        &amp;hearts;    &amp;<span class="comment">#9829;</span></span><br><span class="line">♦        &amp;diams;        &amp;<span class="comment">#9830;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Canvas的API</title>
      <link href="/2020/07/26/front-end-canvas-api/"/>
      <url>/2020/07/26/front-end-canvas-api/</url>
      
        <content type="html"><![CDATA[<p>HTML5新增的canvas标签，通过创建画布，在画布上创建任何想要的形状，下面将canvas的API做个整理。</p><h2 id="阴影"><a href="#阴影" class="headerlink" title="阴影"></a>阴影</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">shadowOffsetY  设置或返回阴影与形状的垂直距离 </span><br><span class="line">context.shadowOffsetX:阴影的横向偏移量</span><br><span class="line">context.shadowColor 阴影颜色</span><br><span class="line">context.shadowBlur 模糊度</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="画线"><a href="#画线" class="headerlink" title="画线"></a>画线</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">lineCap  设置或返回线条的结束点样式（butt、round、square）</span><br><span class="line">lineJoin  设置或返回当两条线交汇时，边角的类型（bevel、round、miter）</span><br><span class="line">lineWidth  设置或返回当前的线条宽度</span><br><span class="line">miterLimit  设置或返回最大斜接长度</span><br><span class="line">moveTo(x,y) 起始点</span><br><span class="line">lineTo(x,y) 下一个点</span><br><span class="line">strokeStyle 边框颜色</span><br><span class="line">fillStyle 填充颜色</span><br><span class="line">fill() 绘制</span><br><span class="line">stroke() 绘制</span><br></pre></td></tr></table></figure><h3 id="贝塞尔曲线"><a href="#贝塞尔曲线" class="headerlink" title="贝塞尔曲线"></a>贝塞尔曲线</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">二次 </span><br><span class="line">quadraticCurveTo(cpx,cpy,x,y)　　</span><br><span class="line">//cpx，cpy表示控制点的坐标, x，y表示终点坐标；</span><br><span class="line">三次</span><br><span class="line">bezierCurveTo(cp1x,cp1y,cp2x,cp2y,x,y)　</span><br><span class="line">//cp1x，cp1y表示第一个控制点的坐标, cp2x，cp2y表示第二个控制点的坐标, x，y表示终点的坐标</span><br></pre></td></tr></table></figure><h2 id="渐变"><a href="#渐变" class="headerlink" title="渐变"></a>渐变</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">createLinearGradient( x0, y0, x1, y1 )  创建线性渐变</span><br><span class="line">createPattern( image/canvas/video, repeat )  在指定的方向内重复绘制指定的元素</span><br><span class="line">createRadialGradient( x0, y0, r0, x1, y1, r1 ) 创建径向渐变</span><br><span class="line">addColorStop( stop, color )  规定渐变对象中的颜色和停止位置</span><br></pre></td></tr></table></figure><h2 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">font  设置或返回文本内容的当前字体属性（和css的font一样）</span><br><span class="line">textAlign  设置或返回文本内容的当前对齐方式</span><br><span class="line">textBaseline  设置或返回在绘制文本时使用的当前文本基线</span><br><span class="line">fillText( text, x, y )  在画布上绘制“被填充”的文本</span><br><span class="line">strokeText( text, x, y )  在画布上绘制文本（无填充）</span><br><span class="line">measureText( text )  返回包含指定文本宽度的对象（属性width获取宽度）</span><br></pre></td></tr></table></figure><h2 id="绘制图片"><a href="#绘制图片" class="headerlink" title="绘制图片"></a>绘制图片</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">drawImage( image/canvas, x, y )</span><br><span class="line">drawImage( image/canvas, x, y, width, height )</span><br><span class="line">drawImage( image/canvas, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight )  在画布上绘制图像、画布或视频</span><br></pre></td></tr></table></figure><h2 id="绘制ImageData对象"><a href="#绘制ImageData对象" class="headerlink" title="绘制ImageData对象"></a>绘制ImageData对象</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">createImageData( width, height )</span><br><span class="line">createImageData(imageData)  绘制ImageData对象</span><br><span class="line">getImageData( x, y, width, height )  返回ImageData对象，该对象为画布上指定的矩形复制像素数据。</span><br><span class="line">putImageData( ImageData, x, y )、putImageData( imageData, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight )  把图像数据放回画布上。</span><br><span class="line">width  返回ImageData对象的宽度</span><br><span class="line">height  返回ImageData对象的高度</span><br><span class="line">data  返回一个对象，包含指定的ImageData对象的图像数据</span><br></pre></td></tr></table></figure><h2 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">globalAlpha  设置或返回绘图的当前alpha或透明度 0~1</span><br><span class="line">globalCompositeOperation  设置或返回新图像如何绘制到已有的图像上。</span><br></pre></td></tr></table></figure><h2 id="图形变换"><a href="#图形变换" class="headerlink" title="图形变换"></a>图形变换</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">scale( x, y )  缩放当前绘图</span><br><span class="line">translate( x, y )  重新设置画布上的(0,0)位置</span><br><span class="line">rotate( angle )  选择当前绘图，单位为“弧度”，角度转弧度公式（ degrees*Math.PI/180）</span><br><span class="line">transform( m11, m12, m21, m22, dx, dy )  替换绘图的当前转换矩阵</span><br><span class="line">setTransform()  将当前转换重置为单元矩阵，然后运行transform()</span><br></pre></td></tr></table></figure><h2 id="包裹"><a href="#包裹" class="headerlink" title="包裹"></a>包裹</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">beginPath() 开始绘制</span><br><span class="line">closePath() 关闭绘制</span><br><span class="line">保存，恢复的方式 是典型栈操作 先进后出</span><br><span class="line">save()  保存当前环境的状态</span><br><span class="line">restore()  恢复之前保存过的路径状态和属性</span><br></pre></td></tr></table></figure><h2 id="矩形"><a href="#矩形" class="headerlink" title="矩形"></a>矩形</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rect(x,y,width,height)</span><br><span class="line">fillRect(x,y,width,height)</span><br><span class="line">strokeRect(x,y,width,height)</span><br><span class="line">clearRect(x,y,width,height) 清除一个矩形区域</span><br></pre></td></tr></table></figure><h2 id="圆"><a href="#圆" class="headerlink" title="圆"></a>圆</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x,y:圆心位置</span><br><span class="line">radius:半径</span><br><span class="line">starAngle,endAngel 开始结束角度</span><br><span class="line">anticlockwise:布尔值，<span class="literal">false</span>是默认值，顺时，<span class="literal">true</span> 逆时针</span><br><span class="line">arc(x,y,radius,starAngle,endAngel,anticlockwise)</span><br><span class="line">arcTo(startx,starty,endx,endy,弧的粗细)</span><br></pre></td></tr></table></figure><h2 id="帧动画"><a href="#帧动画" class="headerlink" title="帧动画"></a>帧动画</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">window.requestAnimationFrame()//开始</span><br><span class="line">window.cancelAnimationFrame()//取消</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Canvas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>谈谈HTML5</title>
      <link href="/2020/07/24/front-end-html-tag/"/>
      <url>/2020/07/24/front-end-html-tag/</url>
      
        <content type="html"><![CDATA[<h2 id="video和audio"><a href="#video和audio" class="headerlink" title="video和audio"></a>video和audio</h2><p>html5增加了音视频标签——video（视频）和audio（音频），可以在网页播放音频和视频。</p><a id="more"></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">"bgm.mp3"</span> <span class="attr">controls</span> <span class="attr">autoplay</span> <span class="attr">loop</span> <span class="attr">preload</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"audio.mp3"</span> <span class="attr">type</span>=<span class="string">"audio/mp3"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">"video.mp4"</span> <span class="attr">controls</span> <span class="attr">width</span>=<span class="string">"300"</span> <span class="attr">loop</span> <span class="attr">preload</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"video.mp4"</span> <span class="attr">type</span>=<span class="string">"video/mp4"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"video.rmvb"</span> <span class="attr">type</span>=<span class="string">"video/rmvb"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"video.avi"</span> <span class="attr">type</span>=<span class="string">"video/avi"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p>属性说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">controls ： 显示控制台 （播放、快进按钮）</span><br><span class="line">width：视频的宽度大小</span><br><span class="line">autoplay：是否自动播放</span><br><span class="line">loop：播放完成是否循环</span><br><span class="line">preload：是否预加载（可以提高用户体验，但也比较耗费流量）</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> 可以给音视频设置多种资源，以配置多的浏览器，<span class="built_in">type</span>代表的是</span><br><span class="line">    之中资源的格式。如果浏览器支持，就会根据这个资源的src路径去找。</span><br><span class="line">    （提供不同样式的资源的时候，一定确保有这些格式的视频和音频）</span><br></pre></td></tr></table></figure><h2 id="input"><a href="#input" class="headerlink" title="input"></a>input</h2><p>属性说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">autofocus 自动对焦 会自动选中当前的input，只有一个</span><br><span class="line"></span><br><span class="line">placeholder 用户输入之前会在文本框里面添加占位字符，</span><br><span class="line">给用户提示，当输入第一个字符后，占位字符会消失。增强用户体验</span><br><span class="line"></span><br><span class="line">required 代表当前的元素是必填的</span><br><span class="line"></span><br><span class="line">pattern 可以输入正则表达式，让用户按照表达式的要求输入内容</span><br><span class="line"></span><br><span class="line">autocomplete 自动补全</span><br><span class="line"></span><br><span class="line">form 设置元素属于那一个表单，即使这个元素没有写到表单里面，也可以生效</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>必须要知道的正则那些事</title>
      <link href="/2020/07/24/front-end-zhengze/"/>
      <url>/2020/07/24/front-end-zhengze/</url>
      
        <content type="html"><![CDATA[<p>正则表达式，又称规则表达式。（英语：Regular Expression，在代码中常简写为regex、regexp或RE），计算机科学的一个概念。正则表通常被用来检索、替换那些符合某个模式(规则)的文本。</p><a id="more"></a><h2 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h2><p>正则表达式是一种文本模式，包括普通字符（例如，a 到 z 之间的字母）和特殊字符（称为“元字符”）。模式描述在搜索文本时要匹配的一个或多个字符串</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">\     将下一字符标记为特殊字符、文本、反向引用或八进制转义符。例如 “\n”匹配换行符。</span><br><span class="line">^     匹配输入字符串开始的位置。</span><br><span class="line">$     匹配输入字符串结尾的位置。</span><br><span class="line">*     零次或多次匹配前面的字符或子表达式。* 等效于 &#123;0,&#125;。</span><br><span class="line">+     一次或多次匹配前面的字符或子表达式。+ 等效于 &#123;1,&#125;。</span><br><span class="line">?     零次或一次匹配前面的字符或子表达式。? 等效于 &#123;0,1&#125;。</span><br><span class="line">&#123;n&#125;   n是非负整数。正好匹配 n 次。</span><br><span class="line">&#123;n,&#125;  n 是非负整数。至少匹配 n 次。</span><br><span class="line">&#123;n,m&#125; M 和 n 是非负整数，其中 n &lt;= m。匹配至少 n 次，至多 m 次。</span><br><span class="line">.     匹配除“\n”之外的任何单个字符。</span><br></pre></td></tr></table></figure><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p>正则表达式从左到右进行计算，并遵循优先级顺序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\    转义符</span><br><span class="line">(), (?:), (?=), []            括号和中括号</span><br><span class="line">*, +, ?, &#123;n&#125;, &#123;n,&#125;, &#123;n,m&#125;     限定符</span><br><span class="line">^, $, \任何元字符、任何字符    定位点和序列</span><br><span class="line">|                            替换</span><br></pre></td></tr></table></figure><h2 id="有意思的大小正则"><a href="#有意思的大小正则" class="headerlink" title="有意思的大小正则"></a>有意思的大小正则</h2><p>“\b” 常用于匹配单词边界（如空格、横线，但不包括下划线）</p><p>“\B” 匹配不是单词开头或结束的位置</p><p>“\d” 匹配数字，等价于[0-9]</p><p>“\D” 匹配任意非数字的字符</p><p>“\s” 匹配空格</p><p>“\S” 匹配任意不是空白符的字符</p><p>“\w” 匹配字母，数字，下划线</p><p>“\W” 匹配任意不是字母，数字，下划线 的字符</p><h2 id="常用的正则表达式"><a href="#常用的正则表达式" class="headerlink" title="常用的正则表达式"></a>常用的正则表达式</h2><h3 id="校验密码强度"><a href="#校验密码强度" class="headerlink" title="校验密码强度"></a>校验密码强度</h3><p>密码的强度必须是包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).&#123;8,10&#125;$</span><br></pre></td></tr></table></figure><h3 id="校验E-Mail-地址"><a href="#校验E-Mail-地址" class="headerlink" title="校验E-Mail 地址"></a>校验E-Mail 地址</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[\\w!<span class="comment">#$%&amp;'*+/=?^_`&#123;|&#125;~-]+(?:\\.[\\w!#$%&amp;'*+/=?^_`&#123;|&#125;~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?</span></span><br></pre></td></tr></table></figure><h3 id="校验身份证号码"><a href="#校验身份证号码" class="headerlink" title="校验身份证号码"></a>校验身份证号码</h3><p>18位的身份证号码的正则校验</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^[1-9]\\d&#123;5&#125;[1-9]\\d&#123;3&#125;((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d&#123;3&#125;([0-9]|X)$</span><br></pre></td></tr></table></figure><h3 id="校验日期"><a href="#校验日期" class="headerlink" title="校验日期"></a>校验日期</h3><p>“yyyy-mm-dd“ 格式的日期校验，已考虑平闰年。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^(?:(?!0000)[0-9]&#123;4&#125;-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]&#123;2&#125;(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$</span><br></pre></td></tr></table></figure><h3 id="校验金额"><a href="#校验金额" class="headerlink" title="校验金额"></a>校验金额</h3><p>金额校验，精确到2位小数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^[0-9]+(.[0-9]&#123;2&#125;)?$</span><br></pre></td></tr></table></figure><h3 id="校验手机号"><a href="#校验手机号" class="headerlink" title="校验手机号"></a>校验手机号</h3><p>下面是国内 13、15、18开头的手机号正则表达式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\d&#123;8&#125;$</span><br></pre></td></tr></table></figure><h3 id="判断IE的版本"><a href="#判断IE的版本" class="headerlink" title="判断IE的版本"></a>判断IE的版本</h3><p>IE目前还没被完全取代，很多页面还是需要做版本兼容，下面是IE版本检查的表达式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^.*MSIE [5-8](?:\\.[0-9]+)?(?!.*Trident\\/[5-9]\\.0).*$</span><br></pre></td></tr></table></figure><h3 id="校验IP-v-地址"><a href="#校验IP-v-地址" class="headerlink" title="校验IP-v?地址"></a>校验IP-v?地址</h3><p>IP4 正则语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.)&#123;3&#125;(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b</span><br></pre></td></tr></table></figure><p>IP6 正则语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(([0-9a-fA-F]&#123;1,4&#125;:)&#123;7,7&#125;[0-9a-fA-F]&#123;1,4&#125;|([0-9a-fA-F]&#123;1,4&#125;:)&#123;1,7&#125;:|([0-9a-fA-F]&#123;1,4&#125;:)&#123;1,6&#125;:[0-9a-fA-F]&#123;1,4&#125;|([0-9a-fA-F]&#123;1,4&#125;:)&#123;1,5&#125;(:[0-9a-fA-F]&#123;1,4&#125;)&#123;1,2&#125;|([0-9a-fA-F]&#123;1,4&#125;:)&#123;1,4&#125;(:[0-9a-fA-F]&#123;1,4&#125;)&#123;1,3&#125;|([0-9a-fA-F]&#123;1,4&#125;:)&#123;1,3&#125;(:[0-9a-fA-F]&#123;1,4&#125;)&#123;1,4&#125;|([0-9a-fA-F]&#123;1,4&#125;:)&#123;1,2&#125;(:[0-9a-fA-F]&#123;1,4&#125;)&#123;1,5&#125;|[0-9a-fA-F]&#123;1,4&#125;:((:[0-9a-fA-F]&#123;1,4&#125;)&#123;1,6&#125;)|:((:[0-9a-fA-F]&#123;1,4&#125;)&#123;1,7&#125;|:)|fe80:(:[0-9a-fA-F]&#123;0,4&#125;)&#123;0,4&#125;%[0-9a-zA-Z]&#123;1,&#125;|::(ffff(:0&#123;1,4&#125;)&#123;0,1&#125;:)&#123;0,1&#125;((25[0-5]|(2[0-4]|1&#123;0,1&#125;[0-9])&#123;0,1&#125;[0-9])\\.)&#123;3,3&#125;(25[0-5]|(2[0-4]|1&#123;0,1&#125;[0-9])&#123;0,1&#125;[0-9])|([0-9a-fA-F]&#123;1,4&#125;:)&#123;1,4&#125;:((25[0-5]|(2[0-4]|1&#123;0,1&#125;[0-9])&#123;0,1&#125;[0-9])\\.)&#123;3,3&#125;(25[0-5]|(2[0-4]|1&#123;0,1&#125;[0-9])&#123;0,1&#125;[0-9]))</span><br></pre></td></tr></table></figure><h3 id="检查URL的前缀"><a href="#检查URL的前缀" class="headerlink" title="检查URL的前缀"></a>检查URL的前缀</h3><p>应用开发中很多时候需要区分请求是HTTPS还是HTTP，通过下面的表达式可以取出一个url的前缀然后再逻辑判断</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!s.match(/^[a-zA-Z]+:\\/\\//))&#123;</span><br><span class="line">    s = <span class="string">'http://'</span> + s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="提取URL链接"><a href="#提取URL链接" class="headerlink" title="提取URL链接"></a>提取URL链接</h3><p>筛选出一段文本中的URL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^(f|ht)&#123;1&#125;(tp|tps):\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w- ./?%&amp;=]*)?</span><br></pre></td></tr></table></figure><h3 id="提取网页图片"><a href="#提取网页图片" class="headerlink" title="提取网页图片"></a>提取网页图片</h3><p>假若你想提取网页中所有图片信息，可以利用下面的表达式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\\&lt; *[img][^\\&gt;]*[src] *= *[\\"\\<span class="string">']&#123;0,1&#125;([^\\"\\'</span>\\ &gt;]*)</span><br></pre></td></tr></table></figure><h3 id="提取页面超链接"><a href="#提取页面超链接" class="headerlink" title="提取页面超链接"></a>提取页面超链接</h3><p>提取html中的超链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&lt;;a\\s*(?!.*\\brel=)[^&gt;;]*)(href=<span class="string">"https?://)((?!(?:(?:www\\.)?'.implode('|(?:www\\.)?', <span class="variable">$follow_list</span>).'))[^"</span>]+)<span class="string">"((?!.*\\brel=)[^&gt;;]*)(?:[^&gt;;]*)&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>前端23条性能优化</title>
      <link href="/2020/07/24/front-end-xingnengyouhua/"/>
      <url>/2020/07/24/front-end-xingnengyouhua/</url>
      
        <content type="html"><![CDATA[<h2 id="减少HTTP请求次数"><a href="#减少HTTP请求次数" class="headerlink" title="减少HTTP请求次数"></a>减少HTTP请求次数</h2><p>尽量合并图片、CSS、JS。比如加载一个页面，如果有5个css文件的话，那么会发出5次http请求，这样会让用户第一次访问你的页面的时候会长时间等待。而如果把这个5个文件合成一个的话，就只需要发出一次http请求，节省网络请求时间，加快页面的加载。</p><a id="more"></a><h2 id="使用CDN"><a href="#使用CDN" class="headerlink" title="使用CDN"></a>使用CDN</h2><p>网站上静态资源即css、js全都使用cdn分发，图片亦然。</p><h2 id="避免空的src和href"><a href="#避免空的src和href" class="headerlink" title="避免空的src和href"></a>避免空的src和href</h2><p>当link标签的href属性为空、script标签的src属性为空的时候，浏览器渲染的时候会把当前页面的URL作为它们的属性值，从而把页面的内容加载进来作为它们的值。所以要避免犯这样的疏忽。</p><h2 id="为文件头指定Expires"><a href="#为文件头指定Expires" class="headerlink" title="为文件头指定Expires"></a>为文件头指定Expires</h2><p>Exipres是用来设置文件的过期时间的，一般对css、js、图片资源有效。 他可以使内容具有缓存性，这样下回再访问同样的资源时就通过浏览器缓存区读取，不需要再发出http请求。</p><h2 id="使用gzip压缩内容"><a href="#使用gzip压缩内容" class="headerlink" title="使用gzip压缩内容"></a>使用gzip压缩内容</h2><p>gzip能够压缩任何一个文本类型的响应，包括html，xml，json。大大缩小请求返回的数据量</p><h2 id="把CSS放到顶部"><a href="#把CSS放到顶部" class="headerlink" title="把CSS放到顶部"></a>把CSS放到顶部</h2><p>网页上的资源加载时从上网下顺序加载的，所以css放在页面的顶部能够优先渲染页面，让用户感觉页面加载很快。</p><h2 id="把JS放到底部"><a href="#把JS放到底部" class="headerlink" title="把JS放到底部"></a>把JS放到底部</h2><p>加载js时会对后续的资源造成阻塞，必须得等js加载完才去加载后续的文件 ，所以就把js放在页面底部最后加载。</p><h2 id="避免使用CSS表达式"><a href="#避免使用CSS表达式" class="headerlink" title="避免使用CSS表达式"></a>避免使用CSS表达式</h2><p>举个css表达式的例子</p><p>font-color: expression( (new Date()).getHours()%3 ? “#FFFFFF” : “#AAAAAA” );</p><p>这个表达式会持续的在页面上计算样式，影响页面的性能。并且css表达式只被IE支持。</p><h2 id="将CSS和JS放到外部文件中"><a href="#将CSS和JS放到外部文件中" class="headerlink" title="将CSS和JS放到外部文件中"></a>将CSS和JS放到外部文件中</h2><p>目的是缓存文件，可以参考原则4。 但有时候为了减少请求，也会直接写到页面里，需根据PV和IP的比例权衡。</p><h2 id="权衡DNS查找次数"><a href="#权衡DNS查找次数" class="headerlink" title="权衡DNS查找次数"></a>权衡DNS查找次数</h2><p>减少主机名可以节省响应时间。但同时，需要注意，减少主机会减少页面中并行下载的数量。</p><p>IE浏览器在同一时刻只能从同一域名下载两个文件。当在一个页面显示多张图片时，IE 用户的图片下载速度就会受到影响。所以新浪会搞N个二级域名来放图片。</p><h2 id="精简CSS和JS"><a href="#精简CSS和JS" class="headerlink" title="精简CSS和JS"></a>精简CSS和JS</h2><p>这里就涉及到css和js的压缩了。比如下面的新浪的一个css文件，把空格回车全部去掉，减少文件的大小。现在的压缩工具有很多，基本主流的前端构建工具都能进行css和js文件的压缩，如grunt，glup等。</p><h2 id="避免跳转"><a href="#避免跳转" class="headerlink" title="避免跳转"></a>避免跳转</h2><p>有种现象会比较坑爹，看起来没什么差别，其实多次了一次页面跳转。比如当URL本该有斜杠（/）却被忽略掉时。例如，当我们要访问 baidu.com 时，实际上返回的是一个包含301代码的跳转，它指向的是 baidu.com/（注意末尾的斜杠）。在nginx服务器可以使用rewrite；Apache服务器中可以使用Alias 或者 mod_rewrite或者the DirectorySlash来避免。</p><p>另一种是不用域名之间的跳转， 比如访问 baidu.com/bbs 跳转到bbs.baidu.com/。那么可以通过使用Alias或者mod_rewirte建立CNAME（保存一个域名和另外一个域名之间关系的DNS记录）来替代。</p><h2 id="删除重复的JS和CSS"><a href="#删除重复的JS和CSS" class="headerlink" title="删除重复的JS和CSS"></a>删除重复的JS和CSS</h2><p>重复调用脚本，除了增加额外的HTTP请求外，多次运算也会浪费时间。在IE和Firefox中不管脚本是否可缓存，它们都存在重复运算JavaScript的问题。</p><h2 id="配置ETags"><a href="#配置ETags" class="headerlink" title="配置ETags"></a>配置ETags</h2><p>它用来判断浏览器缓存里的元素是否和原来服务器上的一致。比last-modified date更具有弹性，例如某个文件在1秒内修改了10次，Etag可以综合Inode(文件的索引节点(inode)数)，MTime(修改时间)和Size来精准的进行判断，避开UNIX记录MTime只能精确到秒的问题。 服务器集群使用，可取后两个参数。使用ETags减少Web应用带宽和负载</p><h2 id="可缓存的AJAX"><a href="#可缓存的AJAX" class="headerlink" title="可缓存的AJAX"></a>可缓存的AJAX</h2><p>异步请求同样的造成用户等待，所以使用ajax请求时，要主动告诉浏览器如果该请求有缓存就去请求缓存内容。如下代码片段, cache:true就是显式的要求如果当前请求有缓存的话，直接使用缓存</p><p>$.ajax({ url : ‘url’, dataType : “json”, cache: true, success : function(son, status){ }</p><h2 id="使用GET来完成AJAX请求"><a href="#使用GET来完成AJAX请求" class="headerlink" title="使用GET来完成AJAX请求"></a>使用GET来完成AJAX请求</h2><p>当使用XMLHttpRequest时，浏览器中的POST方法是一个“两步走”的过程：首先发送文件头，然后才发送数据。因此使用GET获取数据时更加有意义。</p><h2 id="减少DOM元素数量"><a href="#减少DOM元素数量" class="headerlink" title="减少DOM元素数量"></a>减少DOM元素数量</h2><p>这是一门大学问，这里可以引申出一堆优化的细节。想要具体研究的可以看后面推荐书籍。总之大原则减少DOM数量，就会减少浏览器的解析负担。</p><h2 id="避免404"><a href="#避免404" class="headerlink" title="避免404"></a>避免404</h2><p>比如外链的css、js文件出现问题返回404时，会破坏浏览器的并行加载。</p><h2 id="减少Cookie的大小"><a href="#减少Cookie的大小" class="headerlink" title="减少Cookie的大小"></a>减少Cookie的大小</h2><p>Cookie里面别塞那么多东西，因为每个请求都得带着他跑。</p><h2 id="使用无cookie的域"><a href="#使用无cookie的域" class="headerlink" title="使用无cookie的域"></a>使用无cookie的域</h2><p>比如CSS、js、图片等，客户端请求静态文件的时候，减少了 Cookie 的反复传输对主域名的影响。</p><h2 id="不要使用滤镜"><a href="#不要使用滤镜" class="headerlink" title="不要使用滤镜"></a>不要使用滤镜</h2><p>IE独有属性AlphaImageLoader用于修正7.0以下版本中显示PNG图片的半透明效果。这个滤镜的问题在于浏览器加载图片时它会终止内容的呈现并且冻结浏览器。在每一个元素（不仅仅是图片）它都会运算一次，增加了内存开支，因此它的问题是多方面的。</p><p>完全避免使用AlphaImageLoader的最好方法就是使用PNG8格式来代替，这种格式能在IE中很好地工作。如果你确实需要使用AlphaImageLoader，请使用下划线_filter又使之对IE7以上版本的用户无效。</p><h2 id="不要在HTML中缩放图片"><a href="#不要在HTML中缩放图片" class="headerlink" title="不要在HTML中缩放图片"></a>不要在HTML中缩放图片</h2><p>比如你需要的图片尺寸是50* 50</p><p>那就不用用一张500*500的大尺寸图片，影响加载</p><h2 id="缩小favicon-ico并缓存"><a href="#缩小favicon-ico并缓存" class="headerlink" title="缩小favicon.ico并缓存"></a>缩小favicon.ico并缓存</h2><p>以上是Yslow的23个优化原则，基本可以涵盖现在前端大部分的性能优化原则了，很多更加geek和精细优化方法都是从这些原则里面延伸出来的。</p>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS中常用的技巧</title>
      <link href="/2020/07/23/front-end-css-jiqiao/"/>
      <url>/2020/07/23/front-end-css-jiqiao/</url>
      
        <content type="html"><![CDATA[<h2 id="四个不同方向的小三角"><a href="#四个不同方向的小三角" class="headerlink" title="四个不同方向的小三角"></a>四个不同方向的小三角</h2><a id="more"></a><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="triangle bottom"&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class="triangle right"&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class="triangle left"&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.triangle</span>&#123;</span><br><span class="line">      <span class="attribute">border</span>:solid <span class="number">10px</span> transparent;</span><br><span class="line">      <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.top</span>&#123;</span><br><span class="line">     <span class="attribute">border-bottom-color</span>: red;<span class="comment">/*上*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bottom</span>&#123;</span><br><span class="line">     <span class="attribute">border-top-color</span>: red;<span class="comment">/*下*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span>&#123;</span><br><span class="line">     <span class="attribute">border-left-color</span>: red;<span class="comment">/*右*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.left</span>&#123;</span><br><span class="line">     <span class="attribute">border-right-color</span>: red;<span class="comment">/*左*/</span></span><br></pre></td></tr></table></figure><h2 id="自定义光标样式"><a href="#自定义光标样式" class="headerlink" title="自定义光标样式"></a>自定义光标样式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">text是移动到文本上的那种效果</span><br><span class="line"></span><br><span class="line"><span class="built_in">wait</span>是等待的那种效果</span><br><span class="line"></span><br><span class="line">default是默认效果</span><br><span class="line"></span><br><span class="line">e-resize是向右的箭头</span><br><span class="line"></span><br><span class="line">ne-resize是向右上的箭头</span><br><span class="line"></span><br><span class="line">n-resize是向上的箭头</span><br><span class="line"></span><br><span class="line">nw-resize是向左上的箭头</span><br><span class="line"></span><br><span class="line">w-resize是向左的箭头</span><br><span class="line"></span><br><span class="line">sw-resize是左下的箭头</span><br><span class="line"></span><br><span class="line">s-resize是向下的箭头</span><br><span class="line"></span><br><span class="line">se-resize是向右下的箭头</span><br><span class="line"></span><br><span class="line">pointer 小手效果</span><br><span class="line"></span><br><span class="line">auto是由系统自动给出效果</span><br><span class="line"></span><br><span class="line">自定义图片用：cursor: url(图片路径),pointer; 图片格式有可能有兼容性问题自己需要注意</span><br></pre></td></tr></table></figure><h2 id="box-shadow"><a href="#box-shadow" class="headerlink" title="box-shadow"></a>box-shadow</h2><p>box-shadow不占空间</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">3px</span> solid red;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">50px</span> auto;</span><br><span class="line">    <span class="attribute">background-color</span>:gold;</span><br><span class="line">    <span class="comment">/*box-shadow: inset 10px 10px 0px -5px blue;*/</span></span><br><span class="line">    <span class="comment">/* box-shadow:水平偏移量 垂直偏移量 模糊度  颜色*/</span></span><br><span class="line">    <span class="comment">/* box-shadow:inset 水平偏移量 垂直偏移量 模糊度 阴影扩张半径 颜色*/</span></span><br><span class="line">    <span class="comment">/* inset 表示向内阴影  总体扩张宽度=偏移量+阴影扩张半径*/</span></span><br><span class="line">    <span class="attribute">box-shadow</span>:<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> blue,<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> green,<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">15px</span> orange,inset <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> pink;</span><br><span class="line">    <span class="attribute">border-radius</span>:<span class="number">20px</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：<br><img src="http://a3.qpic.cn/psb?/V12txxLC164DyB/SKJr1LHUXqlHk2NAhk.LxErUds3MB5XBQSphqqXmt3g!/b/dAoBAAAAAAAA&bo=ZAB4AAAAAAADADk!&rf=viewer_4" alt="效果"></p><h2 id="outline"><a href="#outline" class="headerlink" title="outline"></a>outline</h2><p>outline不占空间</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">3px</span> solid red;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">50px</span> auto;</span><br><span class="line">    <span class="attribute">background-color</span>:gold;</span><br><span class="line">    <span class="attribute">outline</span>:<span class="number">5px</span> solid blue;<span class="comment">/*描边 边框外面一层*/</span></span><br><span class="line">    <span class="attribute">outline-offset</span>:<span class="number">5px</span>;<span class="comment">/*描边和边框之间的距离  当值为负值的时候outline会收缩*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：<br><img src="http://a3.qpic.cn/psb?/V12txxLC164DyB/OIqOEHJvegV1G1e9daQ8tJfg8oB9AIKkCgZpRj1IFyg!/b/dHwBAAAAAAAA&bo=UwBvAAAAAAADABk!&rf=viewer_4" alt="效果"></p>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>键盘对应表</title>
      <link href="/2020/07/23/other-jianpan/"/>
      <url>/2020/07/23/other-jianpan/</url>
      
        <content type="html"><![CDATA[<p>键盘按键和键码对应表。</p><a id="more"></a><p><img src="http://a1.qpic.cn/psb?/V12txxLC164DyB/D4d9FGDdAF3pHgnpghynJDyMQ41Xv3fuoVaPzULuIKs!/b/dP8AAAAAAAAA&bo=bgLFAgAAAAADB4k!&rf=viewer_4" alt="效果图"></p>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>mysql之增删改查</title>
      <link href="/2020/07/22/after-end-mysql/"/>
      <url>/2020/07/22/after-end-mysql/</url>
      
        <content type="html"><![CDATA[<h2 id="增加"><a href="#增加" class="headerlink" title="增加"></a>增加</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO 表名（字段一，字段二，字段三）VALUES（值一，值二，值三）</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM 表名 WHERE 条件</span><br><span class="line">条件可用：AND OR NOT IN</span><br></pre></td></tr></table></figure><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE 表名 SET 修改内容 WHERE 条件语句</span><br></pre></td></tr></table></figure><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SELECT 字段 FROM 表名 WHERE 条件语句</span><br><span class="line"></span><br><span class="line">倒序查询 SELECT * FROM 表名(users) ORDER BY id DESC</span><br><span class="line"></span><br><span class="line">默认正序 SELECT * FROM 表名（users） ORDER BY id ASC</span><br><span class="line"></span><br><span class="line">联表查询：将两张表连在一起查询</span><br><span class="line">SELECT * FROM 表名一 JOIN 表名二 ON 条件</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端相关 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>贪吃蛇</title>
      <link href="/2020/07/22/demo-tanchishe/"/>
      <url>/2020/07/22/demo-tanchishe/</url>
      
        <content type="html"><![CDATA[<p>一个简易的贪吃蛇小游戏。<a href="https://github.com/SLifree/html5-demos/tree/master/retro-snaker" target="_blank" rel="noopener"><strong><em>查看源码</em></strong></a><br>效果图：<br><img src="http://m.qpic.cn/psc?/V53hAqh02aILfr1BhrQl22IFKT4FTjA0/ruAMsa53pVQWN7FLK88i5kHzMe.vAmWOnjDuSf*sToEG9VquLRf8FHb82IZQEeUBr7D0eowD4QU*NoLBb6tfSrouQEzXYGditdDEY2fXBT0!/b&bo=BgXAAwAAAAADB.I!&rf=viewer_4" alt="效果图"></p><a id="more"></a><h2 id="随机放置食物"><a href="#随机放置食物" class="headerlink" title="随机放置食物"></a>随机放置食物</h2><p>x表示食物的大小 map是存放蛇身单元位置<br>var foodx=foody=?;定义食物的起点坐标</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">food</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">foodx=<span class="built_in">Math</span>.ceil(<span class="built_in">Math</span>.random()*canvas.width/x)*x-x;</span><br><span class="line">foody=<span class="built_in">Math</span>.ceil(<span class="built_in">Math</span>.random()*canvas.height/x)*x-x;</span><br><span class="line"><span class="comment">//判断不让食物随机到蛇身上</span></span><br><span class="line">map.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span> (e.x==foodx&amp;&amp;e.y==foody) &#123;</span><br><span class="line">food(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">ctx.fillStyle=<span class="string">'#000'</span>;<span class="comment">//食物颜色</span></span><br><span class="line">ctx.fillRect(foodx,foody,x,x);<span class="comment">//绘制矩形</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="蛇的移动及绘制"><a href="#蛇的移动及绘制" class="headerlink" title="蛇的移动及绘制"></a>蛇的移动及绘制</h2><p>1.先做一个移动方向的判断<br>2.在做一个是否撞墙和撞自身的判断，这里用了forEach,你也可以用for循环代替<br>3.一个保证起始蛇身的判断<br>4.接下就就是绘制每一个蛇身单元，多个蛇身单元组成蛇身</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">moveSnake</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">switch</span>(direction)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">37</span>:x-=size;<span class="keyword">break</span>;<span class="comment">//左</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">38</span>:y-=size;<span class="keyword">break</span>;<span class="comment">//上</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">39</span>:x+=size;<span class="keyword">break</span>;<span class="comment">//右</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">40</span>:y+=size;<span class="keyword">break</span>;<span class="comment">//下</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断是否撞墙，撞墙则结束</span></span><br><span class="line">    <span class="keyword">if</span> (x&lt;<span class="number">0</span>||y&lt;<span class="number">0</span>||x+size&gt;canvas.width||y+size&gt;canvas.height) &#123;</span><br><span class="line">        end();</span><br><span class="line">    &#125;</span><br><span class="line">    map.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (e.x==x&amp;&amp;e.y==y) &#123;</span><br><span class="line">            end();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span> (map.length&gt;snakeLength) &#123;<span class="comment">//保持蛇长</span></span><br><span class="line">        <span class="keyword">var</span> last=map.shift();<span class="comment">//删除数组第一项，并返回该元素</span></span><br><span class="line">        ctx.clearRect(last.x,last.y,size,size)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//把单元蛇身保存并绘制</span></span><br><span class="line">    map.push(&#123;<span class="string">"x"</span>:x,<span class="string">"y"</span>:y&#125;);</span><br><span class="line">    ctx.fillStyle=<span class="string">'cyan'</span>;</span><br><span class="line">    ctx.fillRect(x,y,size,size);</span><br><span class="line">    <span class="keyword">if</span> (x==foodx&amp;&amp;y==foody) &#123;</span><br><span class="line">        food(<span class="number">10</span>);</span><br><span class="line">        snakeLength++;</span><br><span class="line">        i++;</span><br><span class="line">        score.value=i*<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="游戏结束提示"><a href="#游戏结束提示" class="headerlink" title="游戏结束提示"></a>游戏结束提示</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">end</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">clearInterval(timer);</span><br><span class="line"><span class="keyword">if</span> (score.value&lt;<span class="number">100</span>) &#123;</span><br><span class="line">alert(<span class="string">'继续努力哦!\nGAME OVER'</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (score.value&gt;=<span class="number">100</span>) &#123;</span><br><span class="line">alert(<span class="string">'哎呦，不错!\nGAME OVER'</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (score.value&gt;=<span class="number">400</span>) &#123;</span><br><span class="line">alert(<span class="string">'非常棒!\nGAME OVER'</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (score.value&gt;=<span class="number">800</span>) &#123;</span><br><span class="line">alert(<span class="string">'你已无人能挡!\nGAME OVER'</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (score.value&gt;=<span class="number">1600</span>) &#123;</span><br><span class="line">alert(<span class="string">'无敌战神!\nGAME OVER'</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">window</span>.location=<span class="built_in">window</span>.location;<span class="comment">//刷新页面</span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="增加游戏难度"><a href="#增加游戏难度" class="headerlink" title="增加游戏难度"></a>增加游戏难度</h2><p>你可以发挥你的想象来则加游戏难度，比如增加蛇的运动速度，canvas的画布变小等等</p><h2 id="游戏控制设置"><a href="#游戏控制设置" class="headerlink" title="游戏控制设置"></a>游戏控制设置</h2><p>按下键盘改变方向，这里我做了个space控制游戏的开始和暂停设置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> code=<span class="literal">null</span>;</span><br><span class="line"><span class="keyword">var</span> space=<span class="literal">true</span>;</span><br><span class="line"><span class="built_in">document</span>.onkeydown=<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span> (event.keyCode==<span class="number">32</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (space) &#123;</span><br><span class="line">timer=setInterval(moveSnake,<span class="number">60</span>);</span><br><span class="line">space=!space;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">clearInterval(timer);</span><br><span class="line">space=!space;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断如果是相反键则失效</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">Math</span>.abs(code-event.keyCode)==<span class="number">2</span>) &#123;</span><br><span class="line">code=code;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">code=event.keyCode;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span>(code)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">37</span>:direction=<span class="number">37</span>;<span class="keyword">break</span>;<span class="comment">//左</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">38</span>:direction=<span class="number">38</span>;<span class="keyword">break</span>;<span class="comment">//下</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">39</span>:direction=<span class="number">39</span>;<span class="keyword">break</span>;<span class="comment">//右</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">40</span>:direction=<span class="number">40</span>;<span class="keyword">break</span>;<span class="comment">//上</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> DEMO事例 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>刮刮乐</title>
      <link href="/2020/07/22/demo-guaguale/"/>
      <url>/2020/07/22/demo-guaguale/</url>
      
        <content type="html"><![CDATA[<p>现在刮奖卡很多，那我们就来做一个简易的刮刮乐吧。<a href="https://github.com/SLifree/html5-demos/tree/master/scratch-card" target="_blank" rel="noopener"><strong><em>查看源码</em></strong></a><br>效果图：<br><img src="http://a3.qpic.cn/psb?/V12txxLC164DyB/KaQ0E5DXm1FYaGhg7GrpYxDgnpFLnZpF7V9ZbDaD1dY!/b/dHwBAAAAAAAA&bo=QQELAgAAAAADB2s!&rf=viewer_4" alt="效果图"></p><a id="more"></a><h2 id="html代码"><a href="#html代码" class="headerlink" title="html代码"></a>html代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>刮 刮 乐<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jiang"</span>&gt;</span>奖<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"prize"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span>500万<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"canvas"</span> <span class="attr">width</span>=<span class="string">"300"</span> <span class="attr">height</span>=<span class="string">"200"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="鼠标样式修改"><a href="#鼠标样式修改" class="headerlink" title="鼠标样式修改"></a>鼠标样式修改</h2><p>光标样式可以任你设置，但是也可以自定义设置一个你喜欢的图案，用url引进去，后面加一个pointer，当然了，浏览器兼容图片的样式不同的.</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cursor: url('xpc.cur'),pointer;</span><br></pre></td></tr></table></figure><h2 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a>js代码</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> canvas=<span class="built_in">document</span>.querySelector(<span class="string">'#canvas'</span>)</span><br><span class="line"><span class="keyword">var</span> ctx=canvas.getContext(<span class="string">'2d'</span>)</span><br><span class="line">ctx.fillStyle=<span class="string">'lightgray'</span></span><br><span class="line">ctx.fillRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">300</span>,<span class="number">200</span>)</span><br><span class="line">ctx.save()</span><br><span class="line">ctx.font=<span class="string">'30px serif'</span></span><br><span class="line">ctx.fillStyle=<span class="string">'black'</span></span><br><span class="line">ctx.fillText(<span class="string">'刮奖区'</span>,<span class="number">100</span>,<span class="number">60</span>)</span><br><span class="line">ctx.save()</span><br><span class="line">ctx.font=<span class="string">'50px serif'</span></span><br><span class="line">ctx.strokeStyle=<span class="string">'red'</span></span><br><span class="line">ctx.strokeText(<span class="string">'大吉大利'</span>,<span class="number">50</span>,<span class="number">150</span>)</span><br><span class="line">canvas.onmousedown=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">window</span>.onmousemove=<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        ctx.clearRect(event.offsetX,event.offsetY,<span class="number">20</span>,<span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">canvas.onmouseup = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">window</span>.onmousemove=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> DEMO事例 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>五角星</title>
      <link href="/2020/07/22/demo-wujiaoxing/"/>
      <url>/2020/07/22/demo-wujiaoxing/</url>
      
        <content type="html"><![CDATA[<p>绘制N个颜色不同，旋转角度不同，位置随机出现的五角星。<a href="https://github.com/SLifree/html5-demos/tree/master/five-star" target="_blank" rel="noopener"><strong><em>查看源码</em></strong></a></p><h2 id="随机函数"><a href="#随机函数" class="headerlink" title="随机函数"></a>随机函数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">random</span>(<span class="params">m,n</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> num=<span class="built_in">Math</span>.max(m,n)-<span class="built_in">Math</span>.min(m,n);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random()*num+<span class="built_in">Math</span>.min(m,n));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="绘制五角星函数"><a href="#绘制五角星函数" class="headerlink" title="绘制五角星函数"></a>绘制五角星函数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">* x为五角星中心横坐标</span><br><span class="line">* y为五角星中心纵坐标</span><br><span class="line">* R为五角星外五点外接圆半径</span><br><span class="line">* color五角星颜色 默认随机颜色rgba格式</span><br><span class="line">  如果需要自定义颜色，直接把参数改为自定义颜色为字符串类型</span><br><span class="line">  如果需要随机且不需要透明可去代码rgba处把Math.random()改为1</span><br><span class="line">* angle五角星偏转角度,以(1,0)为参考点 默认随机偏转</span><br><span class="line">  如果不需要随机可自定义偏转角度 参数为数值类型</span><br><span class="line">* stroke五角星边框 默认有 如果不需要参数改为<span class="literal">false</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fivepStar</span>(<span class="params">x,y,R,color=true,angle=true,stroke=true</span>)</span>&#123;</span><br><span class="line">    context.beginPath();<span class="comment">//开始</span></span><br><span class="line">    <span class="keyword">var</span> k=<span class="built_in">Math</span>.sin(<span class="number">18</span>*<span class="built_in">Math</span>.PI/<span class="number">180</span>)/<span class="built_in">Math</span>.sin(<span class="number">36</span>*<span class="built_in">Math</span>.PI/<span class="number">180</span>);</span><br><span class="line">        k=k.toFixed(<span class="number">2</span>);</span><br><span class="line">        r=k*R;<span class="comment">//大圆与小圆的关系</span></span><br><span class="line">    <span class="comment">/**************五角星偏转角度**************/</span></span><br><span class="line">    <span class="keyword">if</span> (angle===<span class="literal">true</span>) &#123;</span><br><span class="line">        angle=random(<span class="number">0</span>,<span class="number">361</span>);<span class="comment">//五角星随机偏转角度,以(1,0)为参考点</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        angle=angle;<span class="comment">//自定义角度</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**************五角星颜色**************/</span></span><br><span class="line">    <span class="keyword">if</span> (color===<span class="literal">true</span>) &#123;</span><br><span class="line">        color=<span class="string">'rgba('</span>+random(<span class="number">0</span>,<span class="number">256</span>)+<span class="string">','</span>+random(<span class="number">0</span>,<span class="number">256</span>)+<span class="string">','</span>+random(<span class="number">0</span>,<span class="number">256</span>)+<span class="string">','</span>+<span class="built_in">Math</span>.random()+<span class="string">')'</span>;<span class="comment">//随机颜色</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        color=color;<span class="comment">//自定义颜色</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//五角星十点坐标</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">        context.lineTo(R*<span class="built_in">Math</span>.cos((<span class="number">72</span>*i+angle)*<span class="built_in">Math</span>.PI/<span class="number">180</span>)+x,R*<span class="built_in">Math</span>.sin((<span class="number">72</span>*i+angle)*<span class="built_in">Math</span>.PI/<span class="number">180</span>)+y);</span><br><span class="line">        context.lineTo(r*<span class="built_in">Math</span>.cos((<span class="number">72</span>*i+<span class="number">36</span>+angle)*<span class="built_in">Math</span>.PI/<span class="number">180</span>)+x,r*<span class="built_in">Math</span>.sin((<span class="number">72</span>*i+<span class="number">36</span>+angle)*<span class="built_in">Math</span>.PI/<span class="number">180</span>)+y)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//五角星起点坐标</span></span><br><span class="line">    context.lineTo(R*<span class="built_in">Math</span>.cos(angle*<span class="built_in">Math</span>.PI/<span class="number">180</span>)+x,R*<span class="built_in">Math</span>.sin(angle*<span class="built_in">Math</span>.PI/<span class="number">180</span>)+y);</span><br><span class="line">    context.fillStyle=color;</span><br><span class="line">    context.fill();</span><br><span class="line">    <span class="keyword">if</span> (stroke) &#123;</span><br><span class="line">        context.stroke();</span><br><span class="line">    &#125;</span><br><span class="line">    context.closePath();</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">random</span>(<span class="params">m,n</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> num=<span class="built_in">Math</span>.max(m,n)-<span class="built_in">Math</span>.min(m,n);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random()*num+<span class="built_in">Math</span>.min(m,n));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> DEMO事例 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>七彩画板</title>
      <link href="/2020/07/22/demo-qicaihuaban/"/>
      <url>/2020/07/22/demo-qicaihuaban/</url>
      
        <content type="html"><![CDATA[<p>一个简易画板，点击画笔开始绘画，点击颜色选择画笔的颜色，点击橡皮擦清除。<a href="https://github.com/SLifree/html5-demos/tree/master/colorful-drawing-board" target="_blank" rel="noopener"><strong><em>查看源码</em></strong></a><br>效果图：<br><img src="http://a2.qpic.cn/psb?/V12txxLC164DyB/zVCUxIucgCdtu2799yI4kuEF7bdXd5vyV7WvN5tD05Q!/b/dAkBAAAAAAAA&bo=ZwJkAgAAAAADACY!&rf=viewer_4" alt="效果图"></p><a id="more"></a><h2 id="html代码"><a href="#html代码" class="headerlink" title="html代码"></a>html代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"canvas"</span> <span class="attr">width</span>=<span class="string">"600"</span> <span class="attr">height</span>=<span class="string">"500"</span>&gt;</span>画笔写字<span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>橡皮擦<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>画笔<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"font"</span>&gt;</span><span class="tag">&lt;<span class="name">h3</span>&gt;</span>欢<span class="tag">&lt;<span class="name">br</span>/&gt;</span>迎<span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">"background-color:red;margin-left:100px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">"background-color:orange"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">"background-color:yellow"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">"background-color:green"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">"background-color:cyan"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">"background-color:blue"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">"background-color:purple"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a>js代码</h2><h3 id="获取dom元素"><a href="#获取dom元素" class="headerlink" title="获取dom元素"></a>获取dom元素</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> canvas=<span class="built_in">document</span>.querySelector(<span class="string">'#canvas'</span>);</span><br><span class="line"><span class="keyword">var</span> ctx=canvas.getContext(<span class="string">'2d'</span>);</span><br><span class="line"><span class="keyword">var</span> font=<span class="built_in">document</span>.querySelector(<span class="string">'.font'</span>);</span><br><span class="line"><span class="keyword">var</span> btn=<span class="built_in">document</span>.querySelectorAll(<span class="string">'button'</span>);</span><br><span class="line"><span class="keyword">var</span> li=<span class="built_in">document</span>.querySelectorAll(<span class="string">'li'</span>);</span><br></pre></td></tr></table></figure><h3 id="画笔及画笔颜色"><a href="#画笔及画笔颜色" class="headerlink" title="画笔及画笔颜色"></a>画笔及画笔颜色</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">btn[<span class="number">1</span>].onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">font.style.display=<span class="string">'none'</span>;</span><br><span class="line">canvas.style.cursor=<span class="string">"url('pen.png'),pointer"</span>;</span><br><span class="line"><span class="comment">//选择画笔的颜色</span></span><br><span class="line"><span class="keyword">var</span> color=<span class="string">''</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;li.length;i++)&#123;</span><br><span class="line">li[i].onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">color=<span class="keyword">this</span>.style.backgroundColor;</span><br><span class="line"><span class="built_in">console</span>.log(color)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">canvas.onmousedown=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">window</span>.onmousemove=<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">ctx.fillStyle=color;</span><br><span class="line">ctx.fillRect(event.offsetX,event.offsetY,<span class="number">5</span>,<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">canvas.onmouseup = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">window</span>.onmousemove=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="橡皮擦"><a href="#橡皮擦" class="headerlink" title="橡皮擦"></a>橡皮擦</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">btn[<span class="number">0</span>].onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    canvas.onmousedown=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">window</span>.onmousemove=<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">            ctx.clearRect(event.offsetX,event.offsetY,<span class="number">20</span>,<span class="number">20</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    canvas.onmouseup = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">window</span>.onmousemove=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    canvas.style.cursor=<span class="string">"url('xpc.cur'),pointer"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> DEMO事例 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>简易时钟</title>
      <link href="/2020/07/22/demo-shizhong/"/>
      <url>/2020/07/22/demo-shizhong/</url>
      
        <content type="html"><![CDATA[<p>一个简易时钟，样式可以自己修改。<a href="https://github.com/SLifree/html5-demos/tree/master/clock" target="_blank" rel="noopener"><strong><em>查看源码</em></strong></a><br>效果图：<br><img src="http://b375.photo.store.qq.com/psb?/V12txxLC164DyB/FI*JnK9uvEqUXyyEWGUpTYvJhnqYJj1TDdaGVtQ7wPs!/b/dHcBAAAAAAAA&bo=4QHOAQAAAAADBw0!&yurl=1" alt="效果图"></p><a id="more"></a><h2 id="html代码"><a href="#html代码" class="headerlink" title="html代码"></a>html代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"time"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"hours"</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"minutes"</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"seconds"</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a>js代码</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> timer=setInterval(fun,<span class="number">1000</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> time=<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="keyword">var</span> hours=time.getHours();</span><br><span class="line"><span class="keyword">var</span> minutes=time.getMinutes();</span><br><span class="line"><span class="keyword">var</span> seconds=time.getSeconds();</span><br><span class="line"><span class="keyword">var</span> ms=time.getMilliseconds();</span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">".hours"</span>).style.transform=<span class="string">'rotateZ('</span>+(hours*<span class="number">30</span>+minutes/<span class="number">2</span>+seconds/<span class="number">120</span>)+<span class="string">'deg)'</span>;</span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">".minutes"</span>).style.transform=<span class="string">'rotateZ('</span>+(minutes*<span class="number">6</span>+seconds/<span class="number">10</span>)+<span class="string">'deg)'</span>;</span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">".seconds"</span>).style.transform=<span class="string">'rotateZ('</span>+seconds*<span class="number">6</span>+<span class="string">'deg)'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> DEMO事例 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>简易计算器</title>
      <link href="/2020/07/22/demo-jisuanqi/"/>
      <url>/2020/07/22/demo-jisuanqi/</url>
      
        <content type="html"><![CDATA[<p>实现了两个数的加、减、乘、除、求余运算,如果你是多个数运算的话，请你先计算两个数，再与下面的数计算。<a href="https://github.com/SLifree/html5-demos/tree/master/calculator" target="_blank" rel="noopener"><strong><em>查看源码</em></strong></a><br>效果图：<br><img src="http://a3.qpic.cn/psb?/V12txxLC164DyB/3Zom3e9qdrkZbXQa.U85kztb5RjpljRthyfqR4bt8Rg!/b/dAoBAAAAAAAA&bo=AAFQAQAAAAADAHU!&rf=viewer_4" alt="效果图"></p><a id="more"></a><h2 id="html代码"><a href="#html代码" class="headerlink" title="html代码"></a>html代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"data_cha"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>x<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>-<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>+<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">disabled</span> <span class="attr">placeholder</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">cellpadding</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>AC<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>+/-<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"yunsuanfu"</span>&gt;</span>%<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"yunsuanfu"</span>&gt;</span><span class="symbol">&amp;divide;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>7<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>8<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>9<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"yunsuanfu"</span>&gt;</span><span class="symbol">&amp;times;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>5<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>6<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"yunsuanfu"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"yunsuanfu"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>.<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>=<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a>js代码</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">document</span>.querySelector(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">$1</span>(<span class="params">y</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">document</span>.querySelectorAll(y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//点击x 计算器关闭</span></span><br><span class="line"><span class="keyword">var</span> data_cha=$(<span class="string">'.data_cha'</span>);</span><br><span class="line"><span class="keyword">var</span> box = $(<span class="string">'.box'</span>);</span><br><span class="line">data_cha.onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">box.style.display=<span class="string">'none'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//点击 显示 背景效果 及建立交互</span></span><br><span class="line"><span class="keyword">var</span> bg=$<span class="number">1</span>(<span class="string">'td'</span>);</span><br><span class="line"><span class="keyword">var</span> length=bg.length;</span><br><span class="line"><span class="keyword">var</span> input=$(<span class="string">'input'</span>)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;length;i++)&#123;</span><br><span class="line">bg[i].index=i;</span><br><span class="line">bg[i].onmousedown=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span> ((<span class="keyword">this</span>.index)%<span class="number">4</span>==<span class="number">3</span>||(<span class="keyword">this</span>.index)==length<span class="number">-1</span> )&#123;bg[<span class="keyword">this</span>.index].style.backgroundColor=<span class="string">'gray'</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.index==<span class="number">1</span>||<span class="keyword">this</span>.index==<span class="number">2</span>||<span class="keyword">this</span>.index==<span class="number">0</span>) &#123;</span><br><span class="line">bg[<span class="keyword">this</span>.index].style.backgroundColor=<span class="string">'gray'</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;bg[<span class="keyword">this</span>.index].style.backgroundColor=<span class="string">'gray'</span>;</span><br><span class="line"> nput.value=input.value</span><br><span class="line"> +<span class="string">''</span>+bg[<span class="keyword">this</span>.index].innerHTML;</span><br><span class="line">bg[<span class="number">0</span>].innerHTML=<span class="string">"C"</span>;</span><br><span class="line"><span class="comment">//正负 点击一下为负，再次点击为正</span></span><br><span class="line"><span class="keyword">var</span> n=<span class="number">0</span>;</span><br><span class="line">bg[<span class="number">1</span>].onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">n++;</span><br><span class="line"><span class="keyword">var</span> kong=<span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span> (n%<span class="number">2</span>==<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> input.value=<span class="string">"-"</span>+input.value;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;input.value.length;i++)&#123;</span><br><span class="line">kong+=input.value[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> input.value=kong;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">bg[i].onmouseup=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">bg[<span class="keyword">this</span>.index].style.backgroundColor=<span class="string">''</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//点击C的时候变AC 并使文本框输入为空</span></span><br><span class="line">bg[<span class="number">0</span>].onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">bg[<span class="number">0</span>].innerHTML=<span class="string">"AC"</span>;</span><br><span class="line"><span class="keyword">return</span> input.value=<span class="string">''</span>;</span><br><span class="line">&#125;</span><br><span class="line">bg[<span class="number">16</span>].onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span> (input.value[<span class="number">0</span>]==<span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> input.value=input.value[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//输入值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">shuru</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> <span class="keyword">var</span> num=<span class="built_in">Number</span>(input.value);</span><br><span class="line"> <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//加减乘除定义 并取第一次输入值</span></span><br><span class="line"><span class="keyword">var</span> yunsuanfu=$<span class="number">1</span>(<span class="string">'.yunsuanfu'</span>);</span><br><span class="line"><span class="keyword">var</span> x,y,opt;</span><br><span class="line">yunsuanfu[<span class="number">0</span>].onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">opt=<span class="string">"%"</span>;</span><br><span class="line">x =shuru();</span><br><span class="line">input.value=<span class="string">''</span>;</span><br><span class="line">&#125;</span><br><span class="line">yunsuanfu[<span class="number">1</span>].onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">opt=<span class="string">"&amp;divide;"</span>;</span><br><span class="line">x =shuru();</span><br><span class="line">input.value=<span class="string">''</span>;</span><br><span class="line">&#125;</span><br><span class="line">yunsuanfu[<span class="number">2</span>].onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">opt=<span class="string">"&amp;times;"</span>;</span><br><span class="line">x =shuru();</span><br><span class="line">input.value=<span class="string">''</span>;</span><br><span class="line">&#125;</span><br><span class="line">yunsuanfu[<span class="number">3</span>].onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">opt=<span class="string">"-"</span>;</span><br><span class="line">x =shuru();</span><br><span class="line">input.value=<span class="string">''</span>;</span><br><span class="line">&#125;</span><br><span class="line">yunsuanfu[<span class="number">4</span>].onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">opt=<span class="string">"+"</span>;</span><br><span class="line">x =shuru();</span><br><span class="line">input.value=<span class="string">''</span>;</span><br><span class="line">&#125;</span><br><span class="line">bg[<span class="number">18</span>].onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">y=shuru();<span class="comment">//取第二次输入值</span></span><br><span class="line"><span class="keyword">if</span> (opt==<span class="string">"%"</span>) &#123;input.value=x%y;&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="string">"-"</span>)&#123;input.value=x-y;&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="string">"+"</span>)&#123;input.value=x+y;&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="string">"&amp;times;"</span>)&#123;input.value=x*y;&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="string">"&amp;divide;"</span>)&#123;input.value=x/y;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> DEMO事例 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS单位</title>
      <link href="/2020/07/22/front-end-css-unit/"/>
      <url>/2020/07/22/front-end-css-unit/</url>
      
        <content type="html"><![CDATA[<h2 id="绝对单位"><a href="#绝对单位" class="headerlink" title="绝对单位"></a>绝对单位</h2><h3 id="px"><a href="#px" class="headerlink" title="px"></a>px</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">页面按精确像素展示,即像素pixel，它是最基础也是最常用的一个长度单位</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="in"><a href="#in" class="headerlink" title="in"></a>in</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">即英尺inch， 1in=2.54cm=96px</span><br></pre></td></tr></table></figure><h3 id="cm"><a href="#cm" class="headerlink" title="cm"></a>cm</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">厘米， 1cm=37.8px</span><br></pre></td></tr></table></figure><h3 id="mm"><a href="#mm" class="headerlink" title="mm"></a>mm</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">毫米，1mm=3.78px</span><br></pre></td></tr></table></figure><h2 id="相对单位"><a href="#相对单位" class="headerlink" title="相对单位"></a>相对单位</h2><h3 id="em"><a href="#em" class="headerlink" title="em"></a>em</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">基准点为父节点字体的大小，整个页面内1em不是一个固定的值</span><br><span class="line">如果计算宽高，1em 等于当前的字体尺寸大小</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        Test <span class="comment">&lt;!-- 14 * 1.2 = 16.8px --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            Test <span class="comment">&lt;!-- 16.8 * 1.2 = 20.16px --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                Test <span class="comment">&lt;!-- 20.16 * 1.2 = 24.192px --&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123; <span class="attribute">font-size</span>: <span class="number">14px</span>; &#125;</span><br><span class="line"><span class="selector-tag">div</span> &#123; <span class="attribute">font-size</span>: <span class="number">1.2em</span>; &#125;</span><br></pre></td></tr></table></figure><h3 id="rem"><a href="#rem" class="headerlink" title="rem"></a>rem</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可理解为”root em”, 相对根节点html的字体大小来计算，CSS3新加属性</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        Test <span class="comment">&lt;!-- 20 * 1.2 = 24px --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            Test <span class="comment">&lt;!-- 20 * 1.2 = 24px --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                Test <span class="comment">&lt;!-- 20 * 1.2 = 24px --&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123; <span class="attribute">font-size</span>: <span class="number">20px</span>; &#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123; <span class="attribute">font-size</span>: <span class="number">14px</span>; &#125;</span><br><span class="line"><span class="selector-tag">div</span> &#123; <span class="attribute">font-size</span>: <span class="number">1.2rem</span>; &#125;</span><br></pre></td></tr></table></figure><h3 id="pt"><a href="#pt" class="headerlink" title="pt"></a>pt</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">即点point，1pt=1/72in=1.33px</span><br></pre></td></tr></table></figure><h3 id="pc"><a href="#pc" class="headerlink" title="pc"></a>pc</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">即派卡，1pc=12pt=16px，派卡是印刷行业的长度单位</span><br></pre></td></tr></table></figure><h3 id="ex"><a href="#ex" class="headerlink" title="ex"></a>ex</h3><p>取当前作用效果的字体的x的高度，在无法确定x高度的情况下以0.5em计算(IE11及以下均不支持，firefox/chrome/safari/opera/ios safari/android browser4.4+等均需属性加么有前缀)</p><h3 id="ch"><a href="#ch" class="headerlink" title="ch"></a>ch</h3><p>以节点所使用字体中的“0”字符为基准，找不到时为0.5em(ie10+,chrome31+,safair7.1+,opera26+,ios safari 7.1+,android browser4.4+支持)</p><h2 id="百分比单位"><a href="#百分比单位" class="headerlink" title="百分比单位"></a>百分比单位</h2><h3 id="vw"><a href="#vw" class="headerlink" title="vw"></a>vw</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">viewpoint width，视窗宽度，1vw等于视窗宽度的1%</span><br></pre></td></tr></table></figure><h3 id="vh"><a href="#vh" class="headerlink" title="vh"></a>vh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">viewpoint height，视窗高度，1vh等于视窗高度的1%</span><br></pre></td></tr></table></figure><h3 id="vmin"><a href="#vmin" class="headerlink" title="vmin"></a>vmin</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vw和vh中较小的那个</span><br></pre></td></tr></table></figure><h3 id="vmax"><a href="#vmax" class="headerlink" title="vmax"></a>vmax</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vw和vh中较大的那个</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title="%"></a>%</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">百分比</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>放大镜效果</title>
      <link href="/2020/07/22/demo-fangdajing/"/>
      <url>/2020/07/22/demo-fangdajing/</url>
      
        <content type="html"><![CDATA[<p>一个简单的放大镜效果，通过鼠标事件来控制放大的部分。<br>效果如下：<br><img src="http://a2.qpic.cn/psb?/V12txxLC164DyB/jeLte5dGj.zVGzNEfDKbjyW2aEsfN*9c8C7AO1g1BHo!/b/dG8BAAAAAAAA&bo=rAMVAgAAAAADB5o!&rf=viewer_4" alt="效果图"></p><a id="more"></a><h2 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h2><h3 id="html代码"><a href="#html代码" class="headerlink" title="html代码"></a>html代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fangdajing"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"small"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"tu.jpg"</span> <span class="attr">alt</span>=<span class="string">"小图片"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mask"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"big"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"tu.jpg"</span> <span class="attr">alt</span>=<span class="string">"大图片"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="css代码"><a href="#css代码" class="headerlink" title="css代码"></a>css代码</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0px</span>;</span><br><span class="line"><span class="attribute">padding</span>:<span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.fangdajing</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line"><span class="attribute">position</span>: relative;</span><br><span class="line"><span class="attribute">margin</span>:<span class="number">100px</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.small</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line"><span class="attribute">border</span>: none;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.small</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line"><span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.big</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">412px</span>;</span><br><span class="line"><span class="attribute">top</span>: <span class="number">0px</span>;</span><br><span class="line"><span class="attribute">display</span>: none;</span><br><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.big</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.mask</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>,.<span class="number">3</span>);</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">0px</span>;</span><br><span class="line"><span class="attribute">top</span>: <span class="number">0px</span>;</span><br><span class="line"><span class="attribute">cursor</span>: move;</span><br><span class="line"><span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a>js代码</h3> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"> <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> small=<span class="built_in">document</span>.querySelector(<span class="string">'.small'</span>)<span class="comment">//定义变量为小图所在div</span></span><br><span class="line"><span class="keyword">var</span> big=<span class="built_in">document</span>.querySelector(<span class="string">'.big'</span>)<span class="comment">//定义变量为大图所在div</span></span><br><span class="line"><span class="keyword">var</span> mask=<span class="built_in">document</span>.querySelector(<span class="string">'.mask'</span>)<span class="comment">//定义蒙版</span></span><br><span class="line"><span class="keyword">var</span> glass=<span class="built_in">document</span>.querySelector(<span class="string">'.fangdajing'</span>)<span class="comment">//定义放大镜容器</span></span><br><span class="line"><span class="keyword">var</span> img=<span class="built_in">document</span>.querySelector(<span class="string">'.big img'</span>)<span class="comment">//大图</span></span><br><span class="line"><span class="comment">//鼠标移入事件 移入时大图和蒙版显示出来</span></span><br><span class="line">small.onmouseover=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">mask.style.display=<span class="string">'block'</span>;</span><br><span class="line">big.style.display=<span class="string">'block'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//鼠标移出事件 移出时大图和蒙版消失</span></span><br><span class="line">small.onmouseout=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">mask.style.display=<span class="string">'none'</span>;</span><br><span class="line">big.style.display=<span class="string">'none'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//鼠标移动事件</span></span><br><span class="line">small.onmousemove=<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> oEvent=event||<span class="built_in">window</span>.event;<span class="comment">//兼容各个浏览器</span></span><br><span class="line"><span class="keyword">var</span> x=oEvent.clientX;<span class="comment">//鼠标距离窗口左边的距离</span></span><br><span class="line"><span class="keyword">var</span> y=oEvent.clientY;<span class="comment">//鼠标距离窗口顶部的距离</span></span><br><span class="line"><span class="comment">//如果页面有上下和左右的滚动的效果，x y还要考虑这种情况</span></span><br><span class="line">x=x-glass.offsetLeft-mask.offsetWidth/<span class="number">2</span>;</span><br><span class="line"><span class="comment">//此x为蒙版left的大小  若外边仍有容器包裹还需减掉xxx.offsetLeft</span></span><br><span class="line">y=y-glass.offsetTop-mask.offsetHeight/<span class="number">2</span>;</span><br><span class="line"><span class="comment">//此y为蒙版top的大小   若外边仍有容器包裹还需减掉xxx.offsetTop</span></span><br><span class="line"><span class="keyword">if</span> (x&lt;=<span class="number">0</span>) &#123;</span><br><span class="line">x=<span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (x&gt;=glass.offsetWidth-mask.offsetWidth) &#123;</span><br><span class="line">x=glass.offsetWidth-mask.offsetWidth;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (y&lt;=<span class="number">0</span>) &#123;</span><br><span class="line">y=<span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (y&gt;=glass.offsetWidth-mask.offsetHeight) &#123;</span><br><span class="line">y=glass.offsetWidth-mask.offsetHeight;</span><br><span class="line">&#125;</span><br><span class="line">mask.style.left=x+<span class="string">'px'</span>;</span><br><span class="line">mask.style.top=y+<span class="string">'px'</span>;</span><br><span class="line"><span class="comment">// 竖向放大倍数</span></span><br><span class="line"><span class="keyword">var</span> l=small.offsetWidth/mask.offsetWidth;</span><br><span class="line"><span class="comment">// 水平方向放大倍数</span></span><br><span class="line"><span class="keyword">var</span> s=small.offsetHeight/mask.offsetHeight;</span><br><span class="line">img.style.width=l*small.offsetWidth+<span class="string">"px"</span>;</span><br><span class="line">img.style.height=s*small.offsetHeight+<span class="string">"px"</span>;</span><br><span class="line">img.style.left=-l*x+<span class="string">'px'</span>;</span><br><span class="line">img.style.top=-s*y+<span class="string">'px'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> DEMO事例 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo笔记</title>
      <link href="/2020/07/21/hexo-note/"/>
      <url>/2020/07/21/hexo-note/</url>
      
        <content type="html"><![CDATA[<p>在搭建博客时会碰到很多问题，在这记录以下我遇到的问题。</p><h2 id="阅读全文设置"><a href="#阅读全文设置" class="headerlink" title="阅读全文设置"></a>阅读全文设置</h2><p>显示部分文章，有以下方法。</p><p>1.这种方法可以根据文章的内容，自己在合适的位置添加此标签，使用灵活，也是Hexo推荐的方法。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&lt;!-- more --&gt;"</span> 手动进行截断</span><br></pre></td></tr></table></figure><a id="more"></a><p>2.在文章中的front-matter中添加description，并提供文章摘录，这种方式只会在首页列表中显示文章的摘要内容，进入文章详情后不会再显示。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 名字</span><br><span class="line">date: 日期</span><br><span class="line">tags: 标签</span><br><span class="line">description: 描述内容</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>3.自动形成摘要，在主题配置文件中添加，默认截取的长度为 150 字符，可以根据需要自行设定。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">auto_excerpt:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  length: <span class="number">150</span></span><br></pre></td></tr></table></figure><h2 id="hexo-command-not-found-和-usr-local-bin-hexo-No-such-file-or-directory"><a href="#hexo-command-not-found-和-usr-local-bin-hexo-No-such-file-or-directory" class="headerlink" title="hexo: command not found 和 /usr/local/bin/hexo: No such file or directory"></a>hexo: command not found 和 /usr/local/bin/hexo: No such file or directory</h2><p>这个报错应该时环境变量发生变化或者node版本发生变化，修改比较麻烦，建议重新安装hexo，删除node_modules文件下的所有文件，并重新安装插件：npm install</p><h2 id="在Hexo博客上添加可爱的Live-2D模型"><a href="#在Hexo博客上添加可爱的Live-2D模型" class="headerlink" title="在Hexo博客上添加可爱的Live 2D模型"></a>在Hexo博客上添加可爱的Live 2D模型</h2><h3 id="安装live2d"><a href="#安装live2d" class="headerlink" title="安装live2d"></a>安装live2d</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><h3 id="在hexo的配置文件-config-yml中添加如下配置"><a href="#在hexo的配置文件-config-yml中添加如下配置" class="headerlink" title="在hexo的配置文件_config.yml中添加如下配置"></a>在hexo的配置文件_config.yml中添加如下配置</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  scriptFrom: local</span><br><span class="line">  pluginRootPath: live2dw/</span><br><span class="line">  pluginJsPath: lib/</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  tagMode: <span class="literal">false</span></span><br><span class="line">  debug: <span class="literal">false</span></span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-shizuku <span class="string">"模型名称"</span></span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: <span class="number">150</span></span><br><span class="line">    height: <span class="number">300</span></span><br><span class="line">  mobile:</span><br><span class="line">    show: <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo主题的修改</title>
      <link href="/2020/07/21/hexo-theme/"/>
      <url>/2020/07/21/hexo-theme/</url>
      
        <content type="html"><![CDATA[<p>Hexo的主题有很多，点击<a href="https://www.zhihu.com/question/24422335" target="_blank" rel="noopener">此链接</a>，知乎上推荐了很多主题，以下以next主题为例。</p><h2 id="安装next主题"><a href="#安装next主题" class="headerlink" title="安装next主题"></a>安装next主题</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> &lt;博客存放的目录&gt;</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="使用next主题并配置"><a href="#使用next主题并配置" class="headerlink" title="使用next主题并配置"></a>使用next主题并配置</h2><p>以下配置可以检索关键字快速查找</p><h3 id="打开-config-yml-文件，该文件为站点配置文件"><a href="#打开-config-yml-文件，该文件为站点配置文件" class="headerlink" title="打开 _config.yml 文件，该文件为站点配置文件"></a>打开 _config.yml 文件，该文件为站点配置文件</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><p>重新部署到服务器并运行即可见到新主题页面。</p><h3 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h3><p>主题配置参考，点击<a href="https://segmentfault.com/a/1190000009544924" target="_blank" rel="noopener">链接1</a> <a href="https://www.jianshu.com/p/1ba96f9a339b" target="_blank" rel="noopener">链接2</a></p><h4 id="icon配置"><a href="#icon配置" class="headerlink" title="icon配置"></a>icon配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  small: <span class="string">"图片路径,建议放在images文件夹里面"</span></span><br><span class="line">  medium: /images/<span class="string">"图片名称"</span>.png</span><br><span class="line">  apple_touch_icon: /images/<span class="string">"图片名称"</span>.png</span><br><span class="line">  safari_pinned_tab: /images/<span class="string">"图片名称"</span>.svg</span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure><h3 id="主菜单配置"><a href="#主菜单配置" class="headerlink" title="主菜单配置"></a>主菜单配置</h3><p>在这里配置的时候，可能会出现 %20 是空格的意思<br>老版本可以：home:/ || home<br>新版本：|| 两侧不能有空格，如下配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /||home</span><br><span class="line">  tags: /tags/||tags</span><br><span class="line">  categories: /categories/||th</span><br><span class="line">  archives: /archives/||archive</span><br><span class="line">  about: /about/||user</span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure><h4 id="对外链接配置"><a href="#对外链接配置" class="headerlink" title="对外链接配置"></a>对外链接配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">social:</span><br><span class="line">  GitHub: https://github.com|| github</span><br><span class="line">  掘金: https://juejin.im/ || envelope</span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || twitter</span></span><br><span class="line">  <span class="comment">#FB Page: https://www.facebook.com/yourname || facebook</span></span><br><span class="line">  <span class="comment">#VK Group: https://vk.com/yourname || vk</span></span><br><span class="line">  <span class="comment">#StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span></span><br><span class="line">  <span class="comment">#YouTube: https://youtube.com/yourname || youtube</span></span><br><span class="line">  <span class="comment">#Instagram: https://instagram.com/yourname || instagram</span></span><br><span class="line">  <span class="comment">#Skype: skype:yourname?call|chat || skype</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建个人博客</title>
      <link href="/2020/07/21/hexo/"/>
      <url>/2020/07/21/hexo/</url>
      
        <content type="html"><![CDATA[<p>查看<a href="https://www.runoob.com/markdown/md-tutorial.html" target="_blank" rel="noopener">Markdown</a>的使用方法和<a href="https://hexo.io/zh-cn/api/" target="_blank" rel="noopener">Hexo</a>的API文档，请点击此链接。</p><h2 id="基本环境的搭建"><a href="#基本环境的搭建" class="headerlink" title="基本环境的搭建"></a>基本环境的搭建</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">安装 [<span class="string">"Node.js"</span>](https://nodejs.org/zh-cn/)</span><br><span class="line">安装 [<span class="string">"Git"</span>](https://git-scm.com/) Mac自带git可选择不安装</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="Hexo的初始化"><a href="#Hexo的初始化" class="headerlink" title="Hexo的初始化"></a>Hexo的初始化</h2><h3 id="Hexo的安装"><a href="#Hexo的安装" class="headerlink" title="Hexo的安装"></a>Hexo的安装</h3><p>以v：4.2.1为例</p><p>在安装hexo时,出现权限报错可以使用：sudo npm install hexo-cli -g,但不建议用 sudo 命令,<br>建议使用以下命令：<br>第一步：赋予目录权限<br>第二步：安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R `whoami` /usr/<span class="built_in">local</span>/lib/node_modules</span><br><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h3 id="检查Hexo是否安装成功"><a href="#检查Hexo是否安装成功" class="headerlink" title="检查Hexo是否安装成功"></a>检查Hexo是否安装成功</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>创建一个空的文件夹，进入当前文件夹，执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>安装所需插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>开启服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>浏览器输入：<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p><p>默认端口：4000,当提示被占用时，可以修改端口号，有两种方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用<span class="string">"hexo s -p 80"</span> ，可以暂时修改启动端口</span><br><span class="line">找到<span class="string">"node_modules\hexo-server\index.js"</span>文件，可以修改默认的port值</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
